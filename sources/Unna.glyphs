{
.appVersion = "1176";
DisplayStrings = (
"/f.ss01 f",
"/eightinferior/fiveinferior",
"/eight.numr",
"09"
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex Hdotbelow I IJ Iacute Ibreve Icaron Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nhookleft Nj Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent Tdotbelow U Uacute Ubreve Ucaron Ucircumflex Udblgrave Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Cacute.loclPLK Nacute.loclPLK Oacute.loclPLK Sacute.loclPLK Zacute.loclPLK Delta Omega";
name = Uppercase;
},
{
automatic = 1;
code = "zero
one
two
three
four
five
six
seven
eight
nine";
name = figures;
},
{
automatic = 1;
code = "zero.dnom
one.dnom
two.dnom
three.dnom
four.dnom
five.dnom
six.dnom
seven.dnom
eight.dnom
nine.dnom";
name = dnom;
},
{
automatic = 1;
code = "zero.numr
one.numr
two.numr
three.numr
four.numr
five.numr
six.numr
seven.numr
eight.numr
nine.numr";
name = numr;
}
);
copyright = "Copyright 2018 The Unna Project Authors (https://github.com/Omnibus-Type/Unna) with Reserved Font Name \"Unna\".";
customParameters = (
{
name = trademark;
value = "Unna is a trademark of Omnibus-Type.";
},
{
name = vendorID;
value = OMNI;
},
{
name = fsType;
value = (
);
},
{
name = description;
value = "Copyright (c) 2016 - 2018 Omnibus-Type (www.omnibus-type.com omnibus.type@gmail.com)";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
name = "Disable Last Change";
value = 1;
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = panose;
value = (
2,
4,
5,
3,
7,
7,
5,
2,
2,
3
);
},
{
name = "Family Alignment Zones";
value = (
"{730, 10}",
"{597, 10}",
"{457, 10}",
"{420, 10}",
"{0, -10}",
"{-234, -10}"
);
}
);
date = "2018-11-01 01:54:19 +0000";
designer = "Jorge de Buen Unna";
designerURL = "http://www.omnibus-type.com";
disablesNiceNames = 1;
familyName = Unna;
featurePrefixes = (
{
code = "lookup lookup_0 {
sub A by ordfeminine;
sub O by ordmasculine;
sub a by ordfeminine;
sub f by f.ss01;
sub o by ordmasculine;
sub quotesingle by quoteright;
} lookup_0;
";
name = lookup_0;
},
{
code = "lookup lookup_1 {
sub L periodcentered by Ldot;
sub l periodcentered by ldot;
} lookup_1;
";
name = lookup_1;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn MOL;
languagesystem latn ROM;
languagesystem latn KAZ;
languagesystem latn PLK;
languagesystem latn AZE;
languagesystem latn CAT;
languagesystem latn CRT;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sups;
feature numr;
feature dnom;
feature ordn;
feature lnum;
feature pnum;
feature tnum;
feature onum;
feature case;
feature zero;
feature salt;
feature ss01;
feature frac;
feature sinf;
";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaabovecomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb slashlongcomb slashshortcomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dieresiscomb_gravecomb dieresiscomb_acutecomb dieresiscomb_caroncomb dieresiscomb_macroncomb dotaccentcomb dotaccentcomb_macroncomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb ringcomb_acutecomb tildecomb tildecomb_macroncomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb horncomb slashshortcomb slashlongcomb acute breve caron circumflex dieresis dotaccent grave hungarumlaut acute.loclPLK macron ring tilde brevecomb_acutecomb brevecomb_gravecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_tildecomb];
	@MarkscombCase = [dieresiscomb.case dieresiscomb_gravecomb.case dieresiscomb_acutecomb.case dieresiscomb_caroncomb.case dieresiscomb_macroncomb.case dotaccentcomb.case dotaccentcomb_macroncomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case ringcomb_acutecomb.case tildecomb.case tildecomb_macroncomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case horncomb.case slashshortcomb.case slashlongcomb.case acute.case breve.case caron.case circumflex.case dieresis.case dotaccent.case grave.case hungarumlaut.case acute.loclPLK.case macron.case ring.case tilde.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_tildecomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	lookupflag 0;
	sub dieresiscomb acutecomb by dieresiscomb_acutecomb;
	sub dieresiscomb.case acutecomb.case by dieresiscomb_acutecomb.case;
	sub dieresiscomb caroncomb by dieresiscomb_caroncomb;
	sub dieresiscomb.case caroncomb.case by dieresiscomb_caroncomb.case;
	sub dieresiscomb gravecomb by dieresiscomb_gravecomb;
	sub dieresiscomb.case gravecomb.case by dieresiscomb_gravecomb.case;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dieresiscomb.case macroncomb.case by dieresiscomb_macroncomb.case;
	sub dotaccentcomb macroncomb by dotaccentcomb_macroncomb;
	sub dotaccentcomb.case macroncomb.case by dotaccentcomb_macroncomb.case;
	sub ringcomb acutecomb by ringcomb_acutecomb;
	sub ringcomb.case acutecomb.case by ringcomb_acutecomb.case;
	sub tildecomb macroncomb by tildecomb_macroncomb;
	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;
} ccmp_Other_3;

lookup ccmp_Other_4 {
	lookupflag 0;
	sub dieresiscomb acutecomb by dieresiscomb_acutecomb;
	sub dieresiscomb.case acutecomb.case by dieresiscomb_acutecomb.case;
	sub dieresiscomb caroncomb by dieresiscomb_caroncomb;
	sub dieresiscomb.case caroncomb.case by dieresiscomb_caroncomb.case;
	sub dieresiscomb gravecomb by dieresiscomb_gravecomb;
	sub dieresiscomb.case gravecomb.case by dieresiscomb_gravecomb.case;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dieresiscomb.case macroncomb.case by dieresiscomb_macroncomb.case;
	sub dotaccentcomb macroncomb by dotaccentcomb_macroncomb;
	sub dotaccentcomb.case macroncomb.case by dotaccentcomb_macroncomb.case;
	sub ringcomb acutecomb by ringcomb_acutecomb;
	sub ringcomb.case acutecomb.case by ringcomb_acutecomb.case;
	sub tildecomb macroncomb by tildecomb_macroncomb;
	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;
} ccmp_Other_4;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_1;

lookup ccmp_latn_2 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_2;

script latn;
";
name = ccmp;
},
{
automatic = 1;
code = "script latn;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language PLK;
sub Cacute by Cacute.loclPLK;
sub Nacute by Nacute.loclPLK;
sub Oacute by Oacute.loclPLK;
sub Sacute by Sacute.loclPLK;
sub Zacute by Zacute.loclPLK;
sub cacute by cacute.loclPLK;
sub nacute by nacute.loclPLK;
sub oacute by oacute.loclPLK;
sub sacute by sacute.loclPLK;
sub zacute by zacute.loclPLK;
sub acute by acute.loclPLK;
language AZE;
sub i by idotaccent;
language CAT;
sub l periodcentered' l by periodcentered.loclCAT;
sub L periodcentered' L by periodcentered.loclCAT.case;
language CRT;
sub i by idotaccent;
";
name = locl;
},
{
automatic = 1;
code = "sub n by ninferior;
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
name = subs;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
name = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
name = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
name = dnom;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
";
name = ordn;
},
{
automatic = 1;
code = "sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
";
name = lnum;
},
{
automatic = 1;
code = "sub zero.tf by zero.lf;
sub one.tf by one.lf;
sub two.tf by two.lf;
sub three.tf by three.lf;
sub four.tf by four.lf;
sub five.tf by five.lf;
sub six.tf by six.lf;
sub seven.tf by seven.lf;
sub eight.tf by eight.lf;
sub nine.tf by nine.lf;
sub zero.tosf by zero;
sub one.tosf by one;
sub two.tosf by two;
sub three.tosf by three;
sub four.tosf by four;
sub five.tosf by five;
sub six.tosf by six;
sub seven.tosf by seven;
sub eight.tosf by eight;
sub nine.tosf by nine;
";
name = pnum;
},
{
automatic = 1;
code = "sub zero.lf by zero.tf;
sub one.lf by one.tf;
sub two.lf by two.tf;
sub three.lf by three.tf;
sub four.lf by four.tf;
sub five.lf by five.tf;
sub six.lf by six.tf;
sub seven.lf by seven.tf;
sub eight.lf by eight.tf;
sub nine.lf by nine.tf;
sub zero by zero.tosf;
sub one by one.tosf;
sub two by two.tosf;
sub three by three.tosf;
sub four by four.tosf;
sub five by five.tosf;
sub six by six.tosf;
sub seven by seven.tosf;
sub eight by eight.tosf;
sub nine by nine.tosf;
";
name = tnum;
},
{
automatic = 1;
code = "sub zero.lf by zero;
sub one.lf by one;
sub two.lf by two;
sub three.lf by three;
sub four.lf by four;
sub five.lf by five;
sub six.lf by six;
sub seven.lf by seven;
sub eight.lf by eight;
sub nine.lf by nine;
sub zero.tf by zero.tosf;
sub one.tf by one.tosf;
sub two.tf by two.tosf;
sub three.tf by three.tosf;
sub four.tf by four.tosf;
sub five.tf by five.tosf;
sub six.tf by six.tosf;
sub seven.tf by seven.tosf;
sub eight.tf by eight.tosf;
sub nine.tf by nine.tosf;
sub zero by zero.osf;
sub one by one.osf;
sub two by two.osf;
sub three by three.osf;
sub four by four.osf;
sub five by five.osf;
sub six by six.osf;
sub seven by seven.osf;
sub eight by eight.osf;
sub nine by nine.osf;
";
name = onum;
},
{
automatic = 1;
code = "sub exclamdown by exclamdown.case;
sub questiondown by questiondown.case;
sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub hyphen by hyphen.case;
sub softhyphen by softhyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub nonbreakinghyphen by nonbreakinghyphen.case;
sub dieresiscomb by dieresiscomb.case;
sub dieresiscomb_gravecomb by dieresiscomb_gravecomb.case;
sub dieresiscomb_acutecomb by dieresiscomb_acutecomb.case;
sub dieresiscomb_caroncomb by dieresiscomb_caroncomb.case;
sub dieresiscomb_macroncomb by dieresiscomb_macroncomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub dotaccentcomb_macroncomb by dotaccentcomb_macroncomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub ringcomb_acutecomb by ringcomb_acutecomb.case;
sub tildecomb by tildecomb.case;
sub tildecomb_macroncomb by tildecomb_macroncomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub dblgravecomb by dblgravecomb.case;
sub breveinvertedcomb by breveinvertedcomb.case;
sub horncomb by horncomb.case;
sub slashshortcomb by slashshortcomb.case;
sub slashlongcomb by slashlongcomb.case;
sub acute by acute.case;
sub breve by breve.case;
sub caron by caron.case;
sub circumflex by circumflex.case;
sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub hungarumlaut by hungarumlaut.case;
sub acute.loclPLK by acute.loclPLK.case;
sub macron by macron.case;
sub ring by ring.case;
sub tilde by tilde.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;
sub breveinverted by breveinverted.case;
sub breveacute by breveacute.case;
sub brevegrave by brevegrave.case;
sub brevehook by brevehook.case;
sub brevetilde by brevetilde.case;
sub circumflexacute by circumflexacute.case;
sub circumflexgrave by circumflexgrave.case;
sub circumflexhook by circumflexhook.case;
sub circumflextilde by circumflextilde.case;
sub dblgrave by dblgrave.case;
sub dieresisacute by dieresisacute.case;
sub dieresiscaron by dieresiscaron.case;
sub dieresisgrave by dieresisgrave.case;
sub dieresismacron by dieresismacron.case;
sub dotaccentmacron by dotaccentmacron.case;
sub horn by horn.case;
sub hook by hook.case;
sub ringacute by ringacute.case;
sub tildemacron by tildemacron.case;
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
sub zero.osf by zero.lf;
sub one.osf by one.lf;
sub two.osf by two.lf;
sub three.osf by three.lf;
sub four.osf by four.lf;
sub five.osf by five.lf;
sub six.osf by six.lf;
sub seven.osf by seven.lf;
sub eight.osf by eight.lf;
sub nine.osf by nine.lf;
sub zero.tf by zero.lf;
sub one.tf by one.lf;
sub two.tf by two.lf;
sub three.tf by three.lf;
sub four.tf by four.lf;
sub five.tf by five.lf;
sub six.tf by six.lf;
sub seven.tf by seven.lf;
sub eight.tf by eight.lf;
sub nine.tf by nine.lf;
sub zero.tosf by zero.lf;
sub one.tosf by one.lf;
sub two.tosf by two.lf;
sub three.tosf by three.lf;
sub four.tosf by four.lf;
sub five.tosf by five.lf;
sub six.tosf by six.lf;
sub seven.tosf by seven.lf;
sub eight.tosf by eight.lf;
sub nine.tosf by nine.lf;
";
name = case;
},
{
automatic = 1;
code = "sub f iacute by f_iacute;
";
name = dlig;
},
{
automatic = 1;
code = "sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
";
name = liga;
},
{
automatic = 1;
code = "sub zero.lf by zero.lf.zero;
sub zero.tf by zero.tf.zero;
sub zero.tosf by zero.tosf.zero;
sub zero by zero.zero;
";
name = zero;
},
{
automatic = 1;
code = "sub f by f.ss01;
";
name = salt;
},
{
automatic = 1;
code = "sub f by f.ss01;
";
name = ss01;
},
{
automatic = 1;
code = "pos @Uppercase <5 0 10 0>;
";
name = cpsp;
},
{
code = "lookup FractionBar {
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures slash;
	ignore sub slash @figures @figures slash';
	ignore sub slash' @figures @figures slash;
	ignore sub slash @figures slash';
	ignore sub slash' @figures slash;
	sub @figures slash' @figures by fraction;
} FractionBar;

lookup Numerator1 {
	sub @figures' fraction by @numr;
} Numerator1;

lookup Numerator2 {
	sub @figures' @numr fraction by @numr;
} Numerator2;

lookup Numerator3 {
	sub @figures' @numr @numr fraction by @numr;
} Numerator3;

lookup Numerator4 {
	sub @figures' @numr @numr @numr fraction by @numr;
} Numerator4;

lookup Numerator5 {
	sub @figures' @numr @numr @numr @numr fraction by @numr;
} Numerator5;

lookup Numerator6 {
	sub @figures' @numr @numr @numr @numr @numr fraction by @numr;
} Numerator6;

lookup Numerator7 {
	sub @figures' @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator7;

lookup Numerator8 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator8;

lookup Numerator9 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator9;

lookup Numerator10 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator10;

lookup Denominator {
	sub [fraction @dnom] @figures' by @dnom;
} Denominator;

sub @figures space' @numr by thinspace;";
name = frac;
},
{
automatic = 1;
code = "sub n by ninferior;
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
name = sinf;
}
);
fontMaster = (
{
alignmentZones = (
"{730, 10}",
"{597, 10}",
"{457, 10}",
"{420, 10}",
"{0, -10}",
"{-234, -10}"
);
ascender = 883;
capHeight = 597;
customParameters = (
{
name = typoAscender;
value = 883;
},
{
name = typoDescender;
value = -269;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 883;
},
{
name = winDescent;
value = 269;
},
{
name = hheaAscender;
value = 883;
},
{
name = hheaDescender;
value = -269;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01248 28 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 8 15 8 2 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01245 6 25 6 2 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0122304 1024 2 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01238 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01237 8 17 8 2 12 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0125 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0123 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0127 11 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01211 10 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01215 15 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01213 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01217 17 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01217 17 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01217 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01244 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01250 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01254 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 56 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 57 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01275 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0129 4 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
91,
91,
27,
27,
600,
-3,
686,
422,
0,
-239,
883,
-269,
607,
-10,
686,
430,
-10,
-243,
883,
-269,
91,
91,
27,
27,
600,
401,
686,
422,
0,
-239,
883,
-269,
607,
-10,
686,
430,
-10,
-239,
883,
-269
);
},
{
name = underlineThickness;
value = 35;
},
{
name = underlinePosition;
value = -240;
}
);
descender = -269;
id = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
weightValue = 86;
widthValue = 5;
xHeight = 420;
},
{
alignmentZones = (
"{730, 10}",
"{597, 10}",
"{458, 10}",
"{425, 10}",
"{0, -10}",
"{-236, -10}"
);
ascender = 883;
capHeight = 597;
customParameters = (
{
name = typoAscender;
value = 883;
},
{
name = typoDescender;
value = -269;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 883;
},
{
name = winDescent;
value = 269;
},
{
name = hheaAscender;
value = 883;
},
{
name = hheaDescender;
value = -269;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01248 28 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 8 15 8 2 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01245 6 25 6 2 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0122304 1024 2 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\01264 64 2 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01238 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01237 8 17 8 2 12 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0125 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0123 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0127 11 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01211 10 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01215 15 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01213 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01217 17 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01217 17 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01217 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01244 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01250 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01254 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 56 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 57 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01275 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0129 4 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
140,
140,
34,
34,
600,
-3,
693,
427,
0,
-239,
883,
-269,
607,
-10,
693,
435,
-10,
-243,
883,
-269,
140,
140,
34,
34,
600,
401,
693,
427,
0,
-239,
883,
-269,
607,
-10,
693,
435,
-10,
-239,
883,
-269
);
},
{
name = underlineThickness;
value = 50;
},
{
name = underlinePosition;
value = -240;
}
);
descender = -269;
id = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
weight = Bold;
weightValue = 131;
widthValue = 5;
xHeight = 425;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
anchors = (
{
name = bottom;
position = "{273, 0}";
},
{
name = ogonek;
position = "{500, 0}";
},
{
name = top;
position = "{296, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"588 27 LINE",
"583 27 LINE SMOOTH",
"562 27 OFFCURVE",
"548 45 QCURVE",
"533 66 OFFCURVE",
"519 102 QCURVE SMOOTH",
"308 607 LINE",
"282 607 LINE",
"73 104 LINE SMOOTH",
"58 68 OFFCURVE",
"43 46 QCURVE SMOOTH",
"30 27 OFFCURVE",
"10 27 QCURVE SMOOTH",
"6 27 LINE",
"-20 29 LINE",
"-20 0 LINE",
"153 0 LINE",
"153 29 LINE",
"105 26 LINE SMOOTH",
"83 25 OFFCURVE",
"83 46 QCURVE SMOOTH",
"83 65 OFFCURVE",
"97 96 QCURVE SMOOTH",
"143 208 LINE",
"376 208 LINE",
"425 90 LINE SMOOTH",
"435 68 OFFCURVE",
"435 51 QCURVE SMOOTH",
"435 24 OFFCURVE",
"405 27 QCURVE",
"356 29 LINE",
"356 0 LINE",
"621 0 LINE",
"621 29 LINE"
);
},
{
closed = 1;
nodes = (
"259 488 LINE",
"364 236 LINE",
"155 236 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
36 1 8 6 19 1 1 2 2 74 0 8 0 2 1 8 2 101 0 6 6 17 75 9 7 5 3 4 1 1 0 93 4 1 0 0 21 0 76 0 0 35 34 0 33 0 31 20 34 17 36 21 17 17 10 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 601;
},
{
anchors = (
{
name = bottom;
position = "{271, 0}";
},
{
name = ogonek;
position = "{492, 0}";
},
{
name = top;
position = "{306, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"608 35 LINE",
"603 35 LINE SMOOTH",
"582 35 OFFCURVE",
"568 53 QCURVE",
"553 74 OFFCURVE",
"539 110 QCURVE SMOOTH",
"331 607 LINE",
"282 607 LINE",
"76 112 LINE SMOOTH",
"61 76 OFFCURVE",
"46 54 QCURVE SMOOTH",
"33 35 OFFCURVE",
"13 35 QCURVE SMOOTH",
"9 35 LINE",
"-20 37 LINE",
"-20 0 LINE",
"161 0 LINE",
"161 37 LINE",
"116 34 LINE SMOOTH",
"94 33 OFFCURVE",
"94 54 QCURVE SMOOTH",
"94 73 OFFCURVE",
"108 104 QCURVE SMOOTH",
"142 186 LINE",
"362 186 LINE",
"399 98 LINE SMOOTH",
"409 76 OFFCURVE",
"409 59 QCURVE SMOOTH",
"409 32 OFFCURVE",
"379 35 QCURVE",
"333 37 LINE",
"333 0 LINE",
"633 0 LINE",
"633 37 LINE"
);
},
{
closed = 1;
nodes = (
"251 451 LINE",
"348 221 LINE",
"156 221 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
36 1 8 6 1 74 0 8 0 2 1 8 2 101 0 6 6 17 75 9 7 5 3 4 1 1 0 93 4 1 0 0 21 0 76 0 0 35 34 0 33 0 31 20 49 17 36 21 17 17 10 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 613;
}
);
leftKerningGroup = A;
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 463, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 473, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Aacute;
rightKerningGroup = A;
unicode = 00C1;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Abreve;
rightKerningGroup = A;
unicode = 0102;
},
{
glyphname = Abreveacute;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookcomb.case;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb_hookcomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EB4;
},
{
glyphname = Acaron;
layers = (
{
components = (
{
name = A;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 01CD;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Acircumflex;
rightKerningGroup = A;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EAA;
},
{
glyphname = Adblgrave;
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 408, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 0200;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 486, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 515, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Adieresis;
rightKerningGroup = A;
unicode = 00C4;
},
{
glyphname = Adotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EA0;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 409, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Agrave;
rightKerningGroup = A;
unicode = 00C0;
},
{
glyphname = Ahookabove;
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 0202;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 451, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Amacron;
rightKerningGroup = A;
unicode = 0100;
},
{
glyphname = Aogonek;
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 651, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
54 1 11 7 27 1 2 3 51 1 10 1 3 74 0 11 0 3 2 11 3 101 0 10 0 0 10 0 99 0 7 7 17 75 8 6 4 3 2 2 1 93 9 5 2 1 1 21 1 76 53 52 50 48 44 43 52 20 34 17 36 21 17 21 34 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 601;
},
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 643, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
54 1 11 7 51 1 10 1 2 74 0 11 0 3 2 11 3 101 0 10 0 0 10 0 99 0 7 7 17 75 8 6 4 3 2 2 1 93 9 5 2 1 1 21 1 76 53 52 50 48 44 43 52 20 49 17 36 21 17 21 34 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 613;
}
);
leftKerningGroup = A;
note = Aogonek;
rightKerningGroup = A;
unicode = 0104;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Aring;
rightKerningGroup = A;
unicode = 00C5;
},
{
glyphname = Aringacute;
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = ringcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
unicode = 01FA;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 482, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 492, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 613;
}
);
leftKerningGroup = A;
note = Atilde;
rightKerningGroup = A;
unicode = 00C3;
},
{
glyphname = AE;
layers = (
{
anchors = (
{
name = top;
position = "{467, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"783 599 LINE",
"769 597 OFFCURVE",
"749 597 QCURVE SMOOTH",
"284 597 LINE",
"284 565 LINE",
"335 567 LINE",
"342 567 OFFCURVE",
"352 558 OFFCURVE",
"352 551 QCURVE SMOOTH",
"352 546 OFFCURVE",
"350 543 QCURVE",
"71 86 LINE SMOOTH",
"49 51 OFFCURVE",
"24 25 OFFCURVE",
"11 27 QCURVE",
"-20 30 LINE",
"-20 0 LINE",
"155 0 LINE",
"155 30 LINE",
"104 27 LINE SMOOTH",
"84 26 OFFCURVE",
"84 42 QCURVE SMOOTH",
"84 54 OFFCURVE",
"98 80 QCURVE",
"174 208 LINE",
"420 208 LINE",
"449 52 LINE SMOOTH",
"451 42 OFFCURVE",
"439 26 OFFCURVE",
"427 27 QCURVE SMOOTH",
"370 30 LINE",
"370 0 LINE",
"715 0 LINE SMOOTH",
"767 0 OFFCURVE",
"803 -3 QCURVE",
"803 171 LINE",
"776 171 LINE",
"776 27 OFFCURVE",
"635 27 QCURVE SMOOTH",
"569 27 LINE SMOOTH",
"553 27 OFFCURVE",
"548 46 QCURVE",
"500 297 LINE",
"579 297 LINE SMOOTH",
"612 297 OFFCURVE",
"655 240 OFFCURVE",
"655 195 QCURVE",
"681 195 LINE",
"681 426 LINE",
"655 426 LINE",
"655 381 OFFCURVE",
"612 324 OFFCURVE",
"579 324 QCURVE SMOOTH",
"496 324 LINE",
"451 569 LINE",
"615 569 LINE SMOOTH",
"688 569 OFFCURVE",
"757 508 OFFCURVE",
"757 443 QCURVE",
"783 443 LINE"
);
},
{
closed = 1;
nodes = (
"414 236 LINE",
"190 236 LINE",
"362 515 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
44 1 6 7 1 74 59 1 14 72 25 1 8 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 66 values pushed */
0 0 1 3 1 0 112 0 7 4 6 4 7 6 126 0 2 0 5 15 2 5 101 0 15 0 10 4 15 10 101 13 1 1 1 14 93 0 14 14 17 75 0 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 67 values pushed */
0 0 1 3 1 0 3 126 0 7 4 6 4 7 6 126 0 2 0 5 15 2 5 101 0 15 0 10 4 15 10 101 13 1 1 1 14 93 0 14 14 17 75 0 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 26 values pushed */
62 61 58 56 55 53 43 42 41 39 35 34 30 29 34 17 50 34 17 18 33 34 16 16 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 847;
},
{
anchors = (
{
name = top;
position = "{477, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"786 599 LINE",
"770 597 OFFCURVE",
"745 597 QCURVE SMOOTH",
"275 597 LINE",
"275 558 LINE",
"326 560 LINE",
"333 560 OFFCURVE",
"343 551 OFFCURVE",
"343 544 QCURVE SMOOTH",
"343 539 OFFCURVE",
"341 536 QCURVE",
"71 94 LINE SMOOTH",
"50 59 OFFCURVE",
"25 33 OFFCURVE",
"11 35 QCURVE",
"-20 38 LINE",
"-20 0 LINE",
"166 0 LINE",
"166 38 LINE",
"115 35 LINE SMOOTH",
"95 34 OFFCURVE",
"95 49 QCURVE SMOOTH",
"95 62 OFFCURVE",
"109 88 QCURVE",
"167 186 LINE",
"397 186 LINE",
"421 60 LINE SMOOTH",
"423 50 OFFCURVE",
"411 34 OFFCURVE",
"399 35 QCURVE SMOOTH",
"342 38 LINE",
"342 0 LINE",
"711 0 LINE SMOOTH",
"767 0 OFFCURVE",
"806 -3 QCURVE",
"806 171 LINE",
"772 171 LINE",
"770 34 OFFCURVE",
"631 34 QCURVE SMOOTH",
"587 34 LINE SMOOTH",
"571 34 OFFCURVE",
"566 53 QCURVE",
"520 289 LINE",
"576 289 LINE SMOOTH",
"608 289 OFFCURVE",
"652 233 OFFCURVE",
"652 191 QCURVE",
"686 191 LINE",
"686 426 LINE",
"651 426 LINE",
"651 381 OFFCURVE",
"608 324 OFFCURVE",
"575 324 QCURVE SMOOTH",
"514 324 LINE",
"471 562 LINE",
"611 562 LINE SMOOTH",
"684 562 OFFCURVE",
"753 505 OFFCURVE",
"753 443 QCURVE",
"786 443 LINE"
);
},
{
closed = 1;
nodes = (
"390 221 LINE",
"189 221 LINE",
"343 473 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
45 1 6 7 1 74 60 1 14 72 26 1 8 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 65 values pushed */
0 0 1 3 1 0 112 0 7 4 6 4 7 6 126 0 2 0 5 15 2 5 103 0 15 4 4 15 85 13 1 1 1 14 93 0 14 14 17 75 10 1 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 67 values pushed */
0 0 1 3 1 0 3 126 0 7 10 6 10 7 6 126 0 2 0 5 15 2 5 103 0 15 0 10 7 15 10 101 13 1 1 1 14 93 0 14 14 17 75 0 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 66 values pushed */
0 0 1 3 1 0 3 126 0 7 4 6 4 7 6 126 0 2 0 5 15 2 5 103 0 15 4 4 15 85 13 1 1 1 14 93 0 14 14 17 75 10 1 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 67 values pushed */
0 0 1 3 1 0 3 126 0 7 10 6 10 7 6 126 0 2 0 5 15 2 5 103 0 15 0 10 7 15 10 101 13 1 1 1 14 93 0 14 14 17 75 0 4 4 3 93 0 3 3 20 75 11 9 2 6 6 8 93 12 1 8 8 21 8 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 26 values pushed */
63 62 59 57 56 54 44 43 42 40 36 35 31 30 34 18 50 34 17 18 33 34 16 16 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 850;
}
);
leftKerningGroup = A;
note = AE;
unicode = 00C6;
},
{
glyphname = AEacute;
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 634, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 847;
},
{
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 644, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 850;
}
);
unicode = 01FC;
},
{
glyphname = B;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"50 597 LINE",
"50 567 LINE",
"101 569 LINE",
"109 569 OFFCURVE",
"118 556 OFFCURVE",
"118 549 QCURVE SMOOTH",
"118 49 LINE SMOOTH",
"118 27 OFFCURVE",
"100 27 QCURVE",
"50 29 LINE",
"50 0 LINE",
"312 0 LINE SMOOTH",
"533 0 OFFCURVE",
"533 162 QCURVE SMOOTH",
"533 206 OFFCURVE",
"487 277 OFFCURVE",
"409 317 OFFCURVE",
"362 317 QCURVE",
"425 328 OFFCURVE",
"500 401 OFFCURVE",
"500 454 QCURVE SMOOTH",
"500 525 OFFCURVE",
"412 597 OFFCURVE",
"327 597 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"281 569 LINE SMOOTH",
"340 569 OFFCURVE",
"405 507 OFFCURVE",
"405 453 QCURVE SMOOTH",
"405 327 OFFCURVE",
"287 327 QCURVE SMOOTH",
"211 327 LINE",
"211 557 LINE",
"213 569 OFFCURVE",
"223 569 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"314 299 LINE SMOOTH",
"436 299 OFFCURVE",
"436 162 QCURVE SMOOTH",
"436 100 OFFCURVE",
"359 28 OFFCURVE",
"295 28 QCURVE SMOOTH",
"225 28 LINE SMOOTH",
"211 28 OFFCURVE",
"211 41 QCURVE SMOOTH",
"211 299 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 597 LINE",
"50 567 LINE",
"101 569 LINE",
"109 569 OFFCURVE",
"118 556 OFFCURVE",
"118 549 QCURVE SMOOTH",
"118 49 LINE SMOOTH",
"118 27 OFFCURVE",
"100 27 QCURVE",
"50 29 LINE",
"50 0 LINE",
"312 0 LINE SMOOTH",
"533 0 OFFCURVE",
"533 162 QCURVE SMOOTH",
"533 206 OFFCURVE",
"487 277 OFFCURVE",
"409 317 OFFCURVE",
"362 317 QCURVE",
"425 328 OFFCURVE",
"500 401 OFFCURVE",
"500 454 QCURVE SMOOTH",
"500 525 OFFCURVE",
"412 597 OFFCURVE",
"327 597 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"281 569 LINE SMOOTH",
"402 569 OFFCURVE",
"405 453 QCURVE SMOOTH",
"408 327 OFFCURVE",
"287 327 QCURVE SMOOTH",
"211 327 LINE",
"211 557 LINE",
"213 569 OFFCURVE",
"223 569 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"314 299 LINE SMOOTH",
"436 299 OFFCURVE",
"436 162 QCURVE SMOOTH",
"436 100 OFFCURVE",
"359 28 OFFCURVE",
"295 28 QCURVE SMOOTH",
"225 28 LINE SMOOTH",
"211 28 OFFCURVE",
"211 41 QCURVE SMOOTH",
"211 299 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
26 17 2 6 3 1 74 0 0 6 8 6 0 112 0 6 11 1 8 2 6 8 101 10 5 2 3 3 4 93 9 1 4 4 17 75 7 1 2 2 1 93 0 1 1 21 1 76 34 34 25 24 0 0 34 43 34 42 39 36 29 27 24 33 25 32 0 23 0 22 36 33 36 21 12 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 573;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"39 597 LINE",
"39 560 LINE",
"86 562 LINE",
"94 562 OFFCURVE",
"103 549 OFFCURVE",
"103 542 QCURVE SMOOTH",
"103 57 LINE SMOOTH",
"103 35 OFFCURVE",
"87 35 QCURVE",
"39 37 LINE",
"39 0 LINE",
"335 0 LINE SMOOTH",
"556 0 OFFCURVE",
"556 162 QCURVE SMOOTH",
"556 206 OFFCURVE",
"510 277 OFFCURVE",
"432 317 OFFCURVE",
"385 317 QCURVE",
"448 328 OFFCURVE",
"523 401 OFFCURVE",
"523 454 QCURVE SMOOTH",
"523 525 OFFCURVE",
"435 597 OFFCURVE",
"350 597 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"291 562 LINE SMOOTH",
"383 562 OFFCURVE",
"383 449 QCURVE SMOOTH",
"383 386 OFFCURVE",
"339 329 OFFCURVE",
"293 329 QCURVE SMOOTH",
"241 329 LINE",
"241 550 LINE",
"243 562 OFFCURVE",
"253 562 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 294 LINE SMOOTH",
"366 294 OFFCURVE",
"414 232 OFFCURVE",
"414 164 QCURVE SMOOTH",
"414 100 OFFCURVE",
"355 36 OFFCURVE",
"304 36 QCURVE SMOOTH",
"255 36 LINE SMOOTH",
"241 36 OFFCURVE",
"241 49 QCURVE SMOOTH",
"241 294 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 597 LINE",
"39 560 LINE",
"86 562 LINE",
"94 562 OFFCURVE",
"103 549 OFFCURVE",
"103 542 QCURVE SMOOTH",
"103 57 LINE SMOOTH",
"103 35 OFFCURVE",
"87 35 QCURVE",
"39 37 LINE",
"39 0 LINE",
"335 0 LINE SMOOTH",
"556 0 OFFCURVE",
"556 162 QCURVE SMOOTH",
"556 206 OFFCURVE",
"510 277 OFFCURVE",
"432 317 OFFCURVE",
"385 317 QCURVE",
"448 328 OFFCURVE",
"523 401 OFFCURVE",
"523 454 QCURVE SMOOTH",
"523 525 OFFCURVE",
"435 597 OFFCURVE",
"350 597 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"291 562 LINE SMOOTH",
"383 562 OFFCURVE",
"383 449 QCURVE SMOOTH",
"383 329 OFFCURVE",
"293 329 QCURVE SMOOTH",
"241 329 LINE",
"241 550 LINE",
"243 562 OFFCURVE",
"253 562 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 294 LINE SMOOTH",
"414 294 OFFCURVE",
"414 164 QCURVE SMOOTH",
"414 100 OFFCURVE",
"355 36 OFFCURVE",
"304 36 QCURVE SMOOTH",
"255 36 LINE SMOOTH",
"241 36 OFFCURVE",
"241 49 QCURVE SMOOTH",
"241 294 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 78 values pushed */
26 17 2 6 3 1 74 0 0 6 8 6 0 8 126 0 6 11 1 8 2 6 8 101 10 5 2 3 3 4 93 9 1 4 4 17 75 7 1 2 2 1 94 0 1 1 21 1 76 34 34 25 24 0 0 34 44 34 43 39 36 29 27 24 33 25 32 0 23 0 22 36 33 36 21 12 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 581;
}
);
note = B;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
anchors = (
{
name = bottom;
position = "{321, 0}";
},
{
name = top;
position = "{328, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"45 201 OFFCURVE",
"117 64 OFFCURVE",
"250 -10 OFFCURVE",
"340 -10 QCURVE SMOOTH",
"373 -10 OFFCURVE",
"435 4 OFFCURVE",
"473 17 QCURVE",
"478 18 OFFCURVE",
"501 26 OFFCURVE",
"539 35 OFFCURVE",
"553 35 QCURVE SMOOTH",
"559 35 LINE",
"556 53 OFFCURVE",
"556 82 QCURVE SMOOTH",
"556 120 OFFCURVE",
"562 167 QCURVE",
"534 167 LINE",
"520 102 OFFCURVE",
"414 17 OFFCURVE",
"345 17 QCURVE SMOOTH",
"286 17 OFFCURVE",
"196 87 OFFCURVE",
"147 214 OFFCURVE",
"147 295 QCURVE SMOOTH",
"147 381 OFFCURVE",
"194 511 OFFCURVE",
"281 582 OFFCURVE",
"340 582 QCURVE SMOOTH",
"384 582 OFFCURVE",
"464 542 OFFCURVE",
"520 474 OFFCURVE",
"529 433 QCURVE",
"553 433 LINE",
"551 435 OFFCURVE",
"549 468 OFFCURVE",
"549 489 QCURVE SMOOTH",
"549 533 OFFCURVE",
"553 564 QCURVE",
"529 564 OFFCURVE",
"492 574 OFFCURVE",
"467 583 QCURVE SMOOTH",
"431 595 OFFCURVE",
"382 607 OFFCURVE",
"345 607 QCURVE SMOOTH",
"204 607 OFFCURVE",
"45 442 OFFCURVE",
"45 295 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"45 201 OFFCURVE",
"117 64 OFFCURVE",
"250 -10 OFFCURVE",
"340 -10 QCURVE SMOOTH",
"373 -10 OFFCURVE",
"435 4 OFFCURVE",
"473 17 QCURVE",
"501 26 OFFCURVE",
"539 35 OFFCURVE",
"553 35 QCURVE SMOOTH",
"559 35 LINE",
"556 53 OFFCURVE",
"556 82 QCURVE SMOOTH",
"556 120 OFFCURVE",
"562 167 QCURVE",
"534 167 LINE",
"520 102 OFFCURVE",
"414 17 OFFCURVE",
"345 17 QCURVE SMOOTH",
"254 17 OFFCURVE",
"147 176 OFFCURVE",
"147 295 QCURVE SMOOTH",
"147 424 OFFCURVE",
"251 582 OFFCURVE",
"340 582 QCURVE SMOOTH",
"411 582 OFFCURVE",
"520 487 OFFCURVE",
"529 433 QCURVE",
"553 433 LINE",
"551 435 OFFCURVE",
"549 468 OFFCURVE",
"549 489 QCURVE SMOOTH",
"549 533 OFFCURVE",
"553 564 QCURVE",
"529 564 OFFCURVE",
"492 574 OFFCURVE",
"467 583 QCURVE SMOOTH",
"431 595 OFFCURVE",
"382 607 OFFCURVE",
"345 607 QCURVE SMOOTH",
"204 607 OFFCURVE",
"45 442 OFFCURVE",
"45 295 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
0 1 2 4 2 1 4 126 0 4 0 5 3 4 5 103 0 2 2 0 95 0 0 0 25 75 0 3 3 6 95 0 6 6 26 6 76 37 36 18 38 41 20 33 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 607;
},
{
anchors = (
{
name = bottom;
position = "{324, 0}";
},
{
name = top;
position = "{331, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"30 201 OFFCURVE",
"104 64 OFFCURVE",
"242 -10 OFFCURVE",
"336 -10 QCURVE SMOOTH",
"369 -10 OFFCURVE",
"424 3 OFFCURVE",
"469 16 QCURVE SMOOTH",
"500 26 OFFCURVE",
"539 35 OFFCURVE",
"557 35 QCURVE SMOOTH",
"563 35 LINE",
"560 53 OFFCURVE",
"560 82 QCURVE SMOOTH",
"560 118 OFFCURVE",
"566 167 QCURVE",
"530 167 LINE",
"517 106 OFFCURVE",
"422 25 OFFCURVE",
"359 25 QCURVE SMOOTH",
"277 25 OFFCURVE",
"181 166 OFFCURVE",
"181 295 QCURVE SMOOTH",
"181 430 OFFCURVE",
"272 575 OFFCURVE",
"355 575 QCURVE SMOOTH",
"415 575 OFFCURVE",
"513 492 OFFCURVE",
"525 433 QCURVE",
"557 433 LINE",
"555 435 OFFCURVE",
"553 468 OFFCURVE",
"553 489 QCURVE SMOOTH",
"553 533 OFFCURVE",
"557 564 QCURVE",
"534 564 OFFCURVE",
"496 573 OFFCURVE",
"470 583 QCURVE",
"433 595 OFFCURVE",
"381 607 OFFCURVE",
"341 607 QCURVE SMOOTH",
"195 607 OFFCURVE",
"30 443 OFFCURVE",
"30 295 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 201 OFFCURVE",
"104 64 OFFCURVE",
"242 -10 OFFCURVE",
"336 -10 QCURVE SMOOTH",
"369 -10 OFFCURVE",
"424 3 OFFCURVE",
"469 16 QCURVE SMOOTH",
"500 26 OFFCURVE",
"539 35 OFFCURVE",
"557 35 QCURVE SMOOTH",
"563 35 LINE",
"560 53 OFFCURVE",
"560 82 QCURVE SMOOTH",
"560 118 OFFCURVE",
"566 167 QCURVE",
"530 167 LINE",
"517 106 OFFCURVE",
"422 25 OFFCURVE",
"359 25 QCURVE SMOOTH",
"277 25 OFFCURVE",
"181 166 OFFCURVE",
"181 295 QCURVE SMOOTH",
"181 430 OFFCURVE",
"272 575 OFFCURVE",
"355 575 QCURVE SMOOTH",
"415 575 OFFCURVE",
"513 492 OFFCURVE",
"525 433 QCURVE",
"557 433 LINE",
"555 435 OFFCURVE",
"553 468 OFFCURVE",
"553 489 QCURVE SMOOTH",
"553 533 OFFCURVE",
"557 564 QCURVE",
"534 564 OFFCURVE",
"496 573 OFFCURVE",
"470 583 QCURVE",
"433 595 OFFCURVE",
"381 607 OFFCURVE",
"341 607 QCURVE SMOOTH",
"195 607 OFFCURVE",
"30 443 OFFCURVE",
"30 295 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
0 1 0 2 5 1 2 103 0 5 0 6 4 5 6 103 0 3 3 0 95 0 0 0 25 75 0 4 4 7 95 0 7 7 26 7 76 36 36 18 36 34 36 20 33 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 596;
}
);
leftKerningGroup = C;
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 495, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 607;
},
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 498, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 596;
}
);
leftKerningGroup = C;
note = Cacute;
unicode = 0106;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 519, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 607;
},
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 522, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 596;
}
);
leftKerningGroup = C;
note = Ccaron;
unicode = 010C;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
40 1 1 7 27 1 3 1 26 1 2 3 3 74 0 5 6 8 6 5 8 126 0 8 0 0 7 8 0 103 0 3 0 2 3 2 99 0 6 6 4 95 0 4 4 25 75 0 7 7 1 95 0 1 1 26 1 76 18 38 41 20 47 35 43 37 35 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 607;
},
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
24 1 3 1 23 1 2 3 2 74 0 6 0 7 10 6 7 103 0 10 0 0 9 10 0 103 0 3 0 2 3 2 99 0 8 8 5 95 0 5 5 25 75 0 9 9 1 95 4 1 1 1 26 1 76 68 67 65 63 34 36 20 36 26 35 43 19 35 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 596;
}
);
leftKerningGroup = C;
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 519, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 607;
},
{
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 522, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 596;
}
);
unicode = 0108;
},
{
glyphname = Cdotaccent;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 607;
},
{
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 596;
}
);
unicode = 010A;
},
{
glyphname = D;
layers = (
{
anchors = (
{
name = center;
position = "{207, 300}";
},
{
name = top;
position = "{317, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"287 0 LINE SMOOTH",
"588 0 OFFCURVE",
"588 299 QCURVE SMOOTH",
"588 458 OFFCURVE",
"435 597 OFFCURVE",
"275 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 569 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"93 27 QCURVE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 556 LINE SMOOTH",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"258 569 LINE SMOOTH",
"341 569 OFFCURVE",
"441 515 OFFCURVE",
"486 397 OFFCURVE",
"486 298 QCURVE SMOOTH",
"486 199 OFFCURVE",
"441 81 OFFCURVE",
"342 28 OFFCURVE",
"258 28 QCURVE SMOOTH",
"213 28 LINE SMOOTH",
"201 28 OFFCURVE",
"201 41 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
5 1 1 1 2 93 0 2 2 17 75 4 1 0 0 3 93 0 3 3 21 3 76 54 49 35 33 36 32 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 623;
},
{
anchors = (
{
name = center;
position = "{203, 300}";
},
{
name = top;
position = "{325, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"295 0 LINE SMOOTH",
"454 0 OFFCURVE",
"607 151 OFFCURVE",
"607 299 QCURVE SMOOTH",
"607 459 OFFCURVE",
"450 597 OFFCURVE",
"283 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"83 562 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 48 OFFCURVE",
"86 35 OFFCURVE",
"79 35 QCURVE SMOOTH",
"78 35 LINE",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"231 549 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"266 562 LINE SMOOTH",
"338 562 OFFCURVE",
"419 517 OFFCURVE",
"456 403 OFFCURVE",
"456 298 QCURVE SMOOTH",
"456 192 OFFCURVE",
"419 80 OFFCURVE",
"338 36 OFFCURVE",
"266 36 QCURVE SMOOTH",
"243 36 LINE SMOOTH",
"231 36 OFFCURVE",
"231 49 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"295 0 LINE SMOOTH",
"607 0 OFFCURVE",
"607 299 QCURVE SMOOTH",
"607 460 OFFCURVE",
"450 597 OFFCURVE",
"283 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"83 562 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 34 OFFCURVE",
"79 35 QCURVE SMOOTH",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"231 549 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"266 562 LINE SMOOTH",
"338 562 OFFCURVE",
"419 517 OFFCURVE",
"456 403 OFFCURVE",
"456 298 QCURVE SMOOTH",
"456 192 OFFCURVE",
"419 80 OFFCURVE",
"338 36 OFFCURVE",
"266 36 QCURVE SMOOTH",
"243 36 LINE SMOOTH",
"231 36 OFFCURVE",
"231 49 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
5 1 1 1 2 93 0 2 2 17 75 4 1 0 0 3 93 0 3 3 21 3 76 54 49 36 33 39 16 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 634;
}
);
note = D;
rightKerningGroup = D;
unicode = 0044;
},
{
glyphname = DZcaron;
layers = (
{
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 623, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 1135;
},
{
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 634, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 1181;
}
);
unicode = 01C4;
},
{
glyphname = Eth;
layers = (
{
components = (
{
name = D;
},
{
name = baraccentmediumcomb;
transform = "{1, 0, 0, 1, 481, 11}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
7 1 3 8 1 2 1 3 2 101 6 1 4 4 5 93 10 1 5 5 17 75 11 9 2 1 1 0 93 0 0 0 21 0 76 21 21 0 0 21 39 21 37 35 34 33 32 30 27 0 20 0 19 35 17 18 33 35 12 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 623;
},
{
components = (
{
name = D;
},
{
name = baraccentmediumcomb;
transform = "{1, 0, 0, 1, 477, 11}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
7 1 3 8 1 2 1 3 2 101 6 1 4 4 5 93 10 1 5 5 17 75 11 9 2 1 1 0 93 0 0 0 21 0 76 24 24 0 0 24 42 24 40 38 37 36 35 33 30 0 23 0 22 35 17 21 17 36 12 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 634;
}
);
note = Eth;
rightKerningGroup = D;
unicode = 00D0;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 508, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 623;
},
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 516, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 634;
}
);
note = Dcaron;
rightKerningGroup = D;
unicode = 010E;
},
{
glyphname = Dcroat;
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 623;
},
{
components = (
{
name = Eth;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 634;
}
);
note = Dcroat;
rightKerningGroup = D;
unicode = 0110;
},
{
glyphname = Dzcaron;
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 623, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 1064;
},
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 634, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 1077;
}
);
unicode = 01C5;
},
{
glyphname = E;
layers = (
{
anchors = (
{
name = bottom;
position = "{291, 0}";
},
{
name = ogonek;
position = "{430, 0}";
},
{
name = top;
position = "{294, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"431 0 LINE SMOOTH",
"497 0 OFFCURVE",
"519 -3 QCURVE",
"519 179 LINE",
"492 179 LINE",
"492 106 OFFCURVE",
"421 28 OFFCURVE",
"353 28 QCURVE SMOOTH",
"213 28 LINE SMOOTH",
"201 28 OFFCURVE",
"201 41 QCURVE SMOOTH",
"201 297 LINE",
"295 297 LINE SMOOTH",
"326 297 OFFCURVE",
"371 239 OFFCURVE",
"371 195 QCURVE",
"398 195 LINE",
"398 426 LINE",
"371 426 LINE",
"371 379 OFFCURVE",
"329 325 OFFCURVE",
"295 325 QCURVE SMOOTH",
"201 325 LINE",
"201 555 LINE SMOOTH",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"320 569 LINE SMOOTH",
"395 569 OFFCURVE",
"462 510 OFFCURVE",
"462 443 QCURVE",
"489 443 LINE",
"489 598 LINE",
"486 597 OFFCURVE",
"472 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"88 569 LINE",
"97 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"90 27 QCURVE",
"50 30 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
0 1 0 10 1 74 41 1 11 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 56 values pushed */
0 3 1 6 1 3 112 0 10 7 0 7 10 0 126 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 11 94 0 11 11 21 11 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 57 values pushed */
0 3 1 6 1 3 6 126 0 10 7 0 7 10 0 126 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 11 94 0 11 11 21 11 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
44 42 40 39 37 34 34 17 18 34 50 18 33 21 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 563;
},
{
anchors = (
{
name = bottom;
position = "{290, 0}";
},
{
name = ogonek;
position = "{429, 0}";
},
{
name = top;
position = "{293, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"431 0 LINE SMOOTH",
"505 0 OFFCURVE",
"527 -3 QCURVE",
"527 179 LINE",
"492 179 LINE",
"492 110 OFFCURVE",
"421 36 OFFCURVE",
"353 36 QCURVE SMOOTH",
"243 36 LINE SMOOTH",
"231 36 OFFCURVE",
"231 49 QCURVE SMOOTH",
"231 290 LINE",
"303 290 LINE SMOOTH",
"334 290 OFFCURVE",
"379 233 OFFCURVE",
"379 191 QCURVE",
"413 191 LINE",
"413 426 LINE",
"379 426 LINE",
"379 379 OFFCURVE",
"337 325 OFFCURVE",
"303 325 QCURVE SMOOTH",
"231 325 LINE",
"231 548 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"320 562 LINE SMOOTH",
"394 562 OFFCURVE",
"462 506 OFFCURVE",
"462 443 QCURVE",
"497 443 LINE",
"497 598 LINE",
"494 597 OFFCURVE",
"480 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"73 562 LINE",
"82 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"75 35 QCURVE",
"39 38 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
0 1 0 10 1 74 41 1 11 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 56 values pushed */
0 3 1 6 1 3 112 0 10 7 0 7 10 0 126 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 11 94 0 11 11 21 11 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 57 values pushed */
0 3 1 6 1 3 6 126 0 10 7 0 7 10 0 126 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 11 94 0 11 11 21 11 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
44 42 40 39 37 34 34 17 18 34 50 18 33 21 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 571;
}
);
note = E;
unicode = 0045;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 460, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 475, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 464, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 0114;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 463, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 493, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EC4;
},
{
glyphname = Edblgrave;
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 406, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 398, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 0204;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 502, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 383, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = Edotbelow;
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 463, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 493, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EB8;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 406, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Ehookabove;
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 465, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 464, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 0206;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = Eogonek;
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 581, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
11 1 2 12 61 52 2 14 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 67 values pushed */
0 5 3 8 3 5 112 0 7 0 10 9 7 10 101 0 14 0 0 14 0 99 6 1 3 3 4 93 0 4 4 17 75 0 9 9 8 93 0 8 8 20 75 0 12 12 1 95 13 1 1 1 21 75 11 1 2 2 1 95 13 1 1 1 21 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 68 values pushed */
0 5 3 8 3 5 8 126 0 7 0 10 9 7 10 101 0 14 0 0 14 0 99 6 1 3 3 4 93 0 4 4 17 75 0 9 9 8 93 0 8 8 20 75 0 12 12 1 95 13 1 1 1 21 75 11 1 2 2 1 95 13 1 1 1 21 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 24 values pushed */
60 58 54 53 51 50 48 45 43 41 39 38 18 34 50 18 33 21 18 21 34 15 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 563;
},
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 580, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
11 1 2 12 61 52 2 14 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 67 values pushed */
0 5 3 8 3 5 112 0 7 0 10 9 7 10 101 0 14 0 0 14 0 99 6 1 3 3 4 93 0 4 4 17 75 0 9 9 8 93 0 8 8 20 75 0 12 12 1 95 13 1 1 1 21 75 11 1 2 2 1 95 13 1 1 1 21 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 68 values pushed */
0 5 3 8 3 5 8 126 0 7 0 10 9 7 10 101 0 14 0 0 14 0 99 6 1 3 3 4 93 0 4 4 17 75 0 9 9 8 93 0 8 8 20 75 0 12 12 1 95 13 1 1 1 21 75 11 1 2 2 1 95 13 1 1 1 21 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 24 values pushed */
60 58 54 53 51 50 48 45 43 41 39 38 18 34 50 18 33 21 18 21 34 15 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 571;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = Etilde;
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 480, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 563;
},
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 479, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 571;
}
);
unicode = 1EBC;
},
{
glyphname = F;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"272 0 LINE",
"272 30 LINE",
"220 27 LINE",
"212 27 OFFCURVE",
"201 39 OFFCURVE",
"201 48 QCURVE SMOOTH",
"201 287 LINE",
"276 287 LINE SMOOTH",
"311 287 OFFCURVE",
"355 232 OFFCURVE",
"355 187 QCURVE",
"382 187 LINE",
"382 417 LINE",
"355 417 LINE",
"355 370 OFFCURVE",
"312 315 OFFCURVE",
"276 315 QCURVE SMOOTH",
"201 315 LINE",
"201 556 LINE SMOOTH",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"330 569 LINE SMOOTH",
"404 569 OFFCURVE",
"472 509 OFFCURVE",
"472 443 QCURVE",
"499 443 LINE",
"499 598 LINE",
"496 597 OFFCURVE",
"484 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"91 569 LINE SMOOTH",
"108 569 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"90 27 QCURVE",
"50 30 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
0 1 0 7 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 48 values pushed */
0 3 1 6 1 3 112 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 10 93 0 10 10 21 10 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 49 values pushed */
0 3 1 6 1 3 6 126 0 5 0 8 7 5 8 101 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 10 93 0 10 10 21 10 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
39 38 37 35 34 17 18 34 50 18 33 51 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 529;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"302 0 LINE",
"302 38 LINE",
"250 35 LINE",
"242 35 OFFCURVE",
"231 47 OFFCURVE",
"231 56 QCURVE SMOOTH",
"231 280 LINE",
"299 280 LINE SMOOTH",
"334 280 OFFCURVE",
"378 225 OFFCURVE",
"378 180 QCURVE",
"412 180 LINE",
"412 417 LINE",
"378 417 LINE",
"378 370 OFFCURVE",
"335 315 OFFCURVE",
"299 315 QCURVE SMOOTH",
"231 315 LINE",
"231 549 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"330 562 LINE SMOOTH",
"405 562 OFFCURVE",
"473 505 OFFCURVE",
"472 443 QCURVE",
"507 443 LINE",
"507 598 LINE",
"504 597 OFFCURVE",
"492 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"76 562 LINE SMOOTH",
"93 562 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"75 35 QCURVE",
"39 38 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
0 1 0 7 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 48 values pushed */
0 3 1 6 1 3 112 0 5 0 8 7 5 8 103 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 10 93 0 10 10 21 10 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
50 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 3 1 6 1 3 6 126 0 5 0 8 7 5 8 103 4 1 1 1 2 93 0 2 2 17 75 0 7 7 6 93 0 6 6 20 75 9 1 0 0 10 93 0 10 10 21 10 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 47 values pushed */
0 3 1 6 1 3 6 126 0 5 0 8 7 5 8 103 0 6 0 7 0 6 7 101 4 1 1 1 2 93 0 2 2 17 75 9 1 0 0 10 93 0 10 10 21 10 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
39 38 37 35 34 17 18 34 50 18 33 51 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 529;
}
);
note = F;
rightKerningGroup = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{330, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"45 145 OFFCURVE",
"202 -10 OFFCURVE",
"335 -10 QCURVE SMOOTH",
"382 -10 OFFCURVE",
"445 4 OFFCURVE",
"490 20 QCURVE SMOOTH",
"534 36 OFFCURVE",
"553 36 QCURVE SMOOTH",
"562 36 OFFCURVE",
"566 35 QCURVE",
"566 224 LINE SMOOTH",
"566 233 OFFCURVE",
"576 245 OFFCURVE",
"585 245 QCURVE",
"626 243 LINE",
"626 272 LINE",
"395 272 LINE",
"395 243 LINE",
"454 245 LINE SMOOTH",
"473 246 OFFCURVE",
"473 223 QCURVE SMOOTH",
"473 63 LINE",
"446 36 OFFCURVE",
"390 17 OFFCURVE",
"345 17 QCURVE SMOOTH",
"148 17 OFFCURVE",
"147 295 QCURVE SMOOTH",
"147 435 OFFCURVE",
"253 582 OFFCURVE",
"340 582 QCURVE SMOOTH",
"426 582 OFFCURVE",
"514 510 OFFCURVE",
"514 448 QCURVE SMOOTH",
"514 437 OFFCURVE",
"513 433 QCURVE",
"553 433 LINE",
"549 481 OFFCURVE",
"549 495 QCURVE SMOOTH",
"549 544 OFFCURVE",
"553 564 QCURVE",
"539 562 OFFCURVE",
"496 578 QCURVE SMOOTH",
"420 607 OFFCURVE",
"343 607 QCURVE SMOOTH",
"200 607 OFFCURVE",
"45 449 OFFCURVE",
"45 295 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
14 1 5 1 27 1 7 4 39 1 3 7 3 74 0 1 2 5 2 1 5 126 0 7 4 3 4 7 3 126 0 5 6 1 4 7 5 4 103 0 2 2 0 95 0 0 0 25 75 0 3 3 8 95 0 8 8 26 8 76 35 21 33 17 36 35 43 19 33 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 646;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{330, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"30 146 OFFCURVE",
"192 -10 OFFCURVE",
"335 -10 QCURVE SMOOTH",
"384 -10 OFFCURVE",
"457 7 OFFCURVE",
"497 21 QCURVE SMOOTH",
"547 37 OFFCURVE",
"561 37 QCURVE SMOOTH",
"570 37 OFFCURVE",
"580 35 QCURVE",
"580 217 LINE SMOOTH",
"580 226 OFFCURVE",
"590 238 OFFCURVE",
"599 238 QCURVE",
"631 236 LINE",
"631 272 LINE",
"364 272 LINE",
"364 236 LINE",
"423 238 LINE SMOOTH",
"442 238 OFFCURVE",
"442 216 QCURVE SMOOTH",
"442 68 LINE",
"421 44 OFFCURVE",
"375 25 OFFCURVE",
"344 25 QCURVE SMOOTH",
"181 25 OFFCURVE",
"181 288 QCURVE SMOOTH",
"181 428 OFFCURVE",
"271 575 OFFCURVE",
"354 575 QCURVE SMOOTH",
"430 575 OFFCURVE",
"513 506 OFFCURVE",
"515 444 QCURVE SMOOTH",
"515 433 OFFCURVE",
"514 426 QCURVE",
"564 426 LINE",
"560 486 OFFCURVE",
"560 504 QCURVE SMOOTH",
"560 538 OFFCURVE",
"564 564 QCURVE",
"552 564 OFFCURVE",
"499 579 QCURVE SMOOTH",
"454 592 OFFCURVE",
"386 607 OFFCURVE",
"343 607 QCURVE SMOOTH",
"193 607 OFFCURVE",
"30 449 OFFCURVE",
"30 297 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 146 OFFCURVE",
"192 -10 OFFCURVE",
"335 -10 QCURVE SMOOTH",
"384 -10 OFFCURVE",
"457 7 OFFCURVE",
"497 21 QCURVE SMOOTH",
"547 37 OFFCURVE",
"561 37 QCURVE SMOOTH",
"570 37 OFFCURVE",
"580 35 QCURVE",
"580 217 LINE SMOOTH",
"580 226 OFFCURVE",
"590 238 OFFCURVE",
"599 238 QCURVE",
"631 236 LINE",
"631 272 LINE",
"364 272 LINE",
"364 236 LINE",
"423 238 LINE SMOOTH",
"442 238 OFFCURVE",
"442 216 QCURVE SMOOTH",
"442 68 LINE",
"421 44 OFFCURVE",
"375 25 OFFCURVE",
"344 25 QCURVE SMOOTH",
"181 25 OFFCURVE",
"181 288 QCURVE SMOOTH",
"181 428 OFFCURVE",
"271 575 OFFCURVE",
"354 575 QCURVE SMOOTH",
"430 575 OFFCURVE",
"513 506 OFFCURVE",
"515 444 QCURVE SMOOTH",
"515 433 OFFCURVE",
"514 426 QCURVE",
"564 426 LINE",
"560 486 OFFCURVE",
"560 504 QCURVE SMOOTH",
"560 538 OFFCURVE",
"564 564 QCURVE",
"552 562 OFFCURVE",
"499 579 QCURVE SMOOTH",
"412 607 OFFCURVE",
"343 607 QCURVE SMOOTH",
"193 607 OFFCURVE",
"30 449 OFFCURVE",
"30 297 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
26 1 8 5 38 1 4 8 2 74 0 8 5 4 5 8 4 126 0 1 0 2 6 1 2 101 0 6 7 1 5 8 6 5 103 0 3 3 0 95 0 0 0 25 75 0 4 4 9 95 0 9 9 26 9 76 47 45 36 33 17 36 35 36 20 20 33 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 650;
}
);
leftKerningGroup = C;
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 511, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 646;
},
{
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 501, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 650;
}
);
leftKerningGroup = C;
note = Gbreve;
unicode = 011E;
},
{
glyphname = Gcaron;
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 646;
},
{
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 650;
}
);
unicode = 01E6;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 646;
},
{
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 650;
}
);
unicode = 011C;
},
{
glyphname = Gcommaaccent;
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 401, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 646;
},
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 650;
}
);
leftKerningGroup = C;
note = Gcommaaccent;
unicode = 0122;
},
{
glyphname = Gdotaccent;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 646;
},
{
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 451, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 650;
}
);
unicode = 0120;
},
{
glyphname = H;
layers = (
{
anchors = (
{
name = bottom;
position = "{348, 0}";
},
{
name = center;
position = "{347, 438}";
},
{
name = top;
position = "{346, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 294 LINE",
"495 294 LINE",
"495 49 LINE SMOOTH",
"495 27 OFFCURVE",
"476 27 QCURVE",
"427 29 LINE",
"427 0 LINE",
"646 0 LINE",
"646 29 LINE",
"607 27 LINE",
"588 27 OFFCURVE",
"588 49 QCURVE SMOOTH",
"588 548 LINE SMOOTH",
"588 557 OFFCURVE",
"597 569 OFFCURVE",
"605 569 QCURVE SMOOTH",
"607 569 LINE",
"646 567 LINE",
"646 597 LINE",
"427 597 LINE",
"427 567 LINE",
"476 569 LINE SMOOTH",
"495 570 OFFCURVE",
"495 548 QCURVE SMOOTH",
"495 322 LINE",
"201 322 LINE",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"210 569 OFFCURVE",
"219 569 QCURVE SMOOTH",
"221 569 LINE",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE SMOOTH",
"108 570 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
0 4 0 11 0 4 11 101 7 5 3 3 1 1 2 93 6 1 2 2 17 75 12 10 8 3 0 0 9 93 13 1 9 9 21 9 76 47 46 45 43 41 40 38 36 35 34 36 49 17 34 19 49 17 35 32 14 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 696;
},
{
anchors = (
{
name = bottom;
position = "{349, 0}";
},
{
name = center;
position = "{348, 438}";
},
{
name = top;
position = "{347, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"300 0 LINE",
"300 37 LINE",
"251 35 LINE",
"231 35 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 287 LINE",
"465 287 LINE",
"465 57 LINE SMOOTH",
"465 35 OFFCURVE",
"446 35 QCURVE",
"397 37 LINE",
"397 0 LINE",
"657 0 LINE",
"657 37 LINE",
"622 35 LINE SMOOTH",
"603 34 OFFCURVE",
"603 57 QCURVE SMOOTH",
"603 541 LINE SMOOTH",
"603 550 OFFCURVE",
"612 562 OFFCURVE",
"620 562 QCURVE SMOOTH",
"622 562 LINE",
"657 560 LINE",
"657 597 LINE",
"397 597 LINE",
"397 560 LINE",
"446 562 LINE SMOOTH",
"465 563 OFFCURVE",
"465 541 QCURVE SMOOTH",
"465 322 LINE",
"231 322 LINE",
"231 541 LINE SMOOTH",
"231 550 OFFCURVE",
"240 562 OFFCURVE",
"249 562 QCURVE SMOOTH",
"251 562 LINE",
"300 560 LINE",
"300 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE SMOOTH",
"93 563 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
0 4 0 11 0 4 11 101 7 5 3 3 1 1 2 93 6 1 2 2 17 75 12 10 8 3 0 0 9 93 13 1 9 9 21 9 76 48 47 46 44 42 41 39 37 36 35 36 49 17 34 19 49 17 35 48 14 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 696;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
layers = (
{
components = (
{
name = H;
},
{
name = baraccentlongcomb;
transform = "{1, 0, 0, 1, 723, 149}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 696;
},
{
components = (
{
name = H;
},
{
name = baraccentlongcomb;
transform = "{1, 0, 0, 1, 724, 149}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 696;
}
);
unicode = 0126;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 537, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 696;
},
{
components = (
{
name = H;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 538, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 696;
}
);
unicode = 0124;
},
{
glyphname = Hdotbelow;
layers = (
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 520, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 696;
},
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 552, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 696;
}
);
unicode = 1E24;
},
{
glyphname = I;
layers = (
{
anchors = (
{
name = bottom;
position = "{154, 0}";
},
{
name = ogonek;
position = "{155, 0}";
},
{
name = top;
position = "{154, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"260 0 LINE",
"260 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"211 569 OFFCURVE",
"219 569 QCURVE SMOOTH",
"221 569 LINE",
"260 567 LINE",
"260 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 5 93 0 5 5 21 5 76 17 36 49 17 21 32 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 310;
},
{
anchors = (
{
name = bottom;
position = "{162, 0}";
},
{
name = ogonek;
position = "{163, 0}";
},
{
name = top;
position = "{161, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"286 0 LINE",
"286 37 LINE",
"251 35 LINE",
"231 33 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 541 LINE SMOOTH",
"231 550 OFFCURVE",
"241 562 OFFCURVE",
"249 562 QCURVE SMOOTH",
"251 562 LINE",
"286 560 LINE",
"286 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"83 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 5 93 0 5 5 21 5 76 17 21 49 17 21 48 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 325;
}
);
note = I;
unicode = 0049;
},
{
glyphname = IJ;
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 310, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 761;
},
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 325, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 784;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 321, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 328, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 335, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 332, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 012C;
},
{
glyphname = Icaron;
layers = (
{
components = (
{
name = I;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 352, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 01CF;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 352, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idblgrave;
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 0208;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 344, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 370, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 243, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 282, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Idotbelow;
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 326, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 365, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 1ECA;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 267, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Ihookabove;
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 281, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 325, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 332, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 020A;
},
{
glyphname = Imacron;
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 316, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = Iogonek;
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 306, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
40 1 8 1 1 74 0 8 0 0 8 0 99 5 1 3 3 4 93 0 4 4 17 75 6 1 2 2 1 93 7 1 1 1 21 1 76 36 17 36 49 17 21 33 21 34 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 310;
},
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 314, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
41 1 8 1 1 74 0 8 0 0 8 0 99 5 1 3 3 4 93 0 4 4 17 75 6 1 2 2 1 93 7 1 1 1 21 1 76 36 17 21 49 17 21 49 21 34 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 325;
}
);
note = Iogonek;
unicode = 012E;
},
{
glyphname = Itilde;
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 310;
},
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 0128;
},
{
glyphname = J;
layers = (
{
anchors = (
{
name = top;
position = "{299, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"24 -1 LINE",
"30 5 OFFCURVE",
"51 5 QCURVE SMOOTH",
"59 5 LINE SMOOTH",
"68 5 OFFCURVE",
"100 -1 QCURVE SMOOTH",
"150 -10 OFFCURVE",
"181 -10 QCURVE SMOOTH",
"348 -10 OFFCURVE",
"348 179 QCURVE SMOOTH",
"348 549 LINE SMOOTH",
"348 557 OFFCURVE",
"358 569 OFFCURVE",
"366 569 QCURVE SMOOTH",
"368 569 LINE",
"406 567 LINE",
"406 597 LINE",
"167 597 LINE",
"167 567 LINE",
"236 569 LINE",
"244 570 OFFCURVE",
"255 557 OFFCURVE",
"255 548 QCURVE SMOOTH",
"255 179 LINE SMOOTH",
"255 90 OFFCURVE",
"213 16 OFFCURVE",
"165 16 QCURVE SMOOTH",
"109 16 OFFCURVE",
"60 114 OFFCURVE",
"60 172 QCURVE",
"24 172 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
30 1 5 6 1 74 4 1 2 2 3 93 0 3 3 17 75 0 0 0 6 95 0 6 6 21 75 0 1 1 5 95 0 5 5 26 5 76 50 36 49 17 22 34 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 451;
},
{
anchors = (
{
name = top;
position = "{299, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"24 -1 LINE",
"30 5 OFFCURVE",
"51 5 QCURVE SMOOTH",
"59 5 LINE SMOOTH",
"68 5 OFFCURVE",
"98 -1 QCURVE SMOOTH",
"148 -10 OFFCURVE",
"176 -10 QCURVE SMOOTH",
"371 -10 OFFCURVE",
"371 179 QCURVE SMOOTH",
"371 542 LINE SMOOTH",
"371 550 OFFCURVE",
"381 562 OFFCURVE",
"389 562 QCURVE SMOOTH",
"391 562 LINE",
"425 560 LINE",
"425 597 LINE",
"145 597 LINE",
"145 560 LINE",
"214 562 LINE",
"222 563 OFFCURVE",
"233 550 OFFCURVE",
"233 541 QCURVE SMOOTH",
"233 179 LINE SMOOTH",
"233 94 OFFCURVE",
"196 24 OFFCURVE",
"153 24 QCURVE SMOOTH",
"108 24 OFFCURVE",
"68 117 OFFCURVE",
"68 172 QCURVE",
"24 172 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
30 1 5 6 1 74 4 1 2 2 3 93 0 3 3 17 75 0 0 0 6 95 0 6 6 21 75 0 1 1 5 95 0 5 5 26 5 76 50 36 49 17 22 34 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 459;
}
);
note = J;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 490, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 451;
},
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 490, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 459;
}
);
unicode = 0134;
},
{
glyphname = K;
layers = (
{
anchors = (
{
name = bottom;
position = "{316, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"564 27 OFFCURVE",
"553 41 QCURVE SMOOTH",
"314 365 LINE",
"467 540 LINE SMOOTH",
"483 558 OFFCURVE",
"509 570 OFFCURVE",
"525 569 QCURVE SMOOTH",
"559 567 LINE",
"559 597 LINE",
"381 597 LINE",
"381 567 LINE",
"423 569 LINE",
"433 569 OFFCURVE",
"433 560 QCURVE SMOOTH",
"433 553 OFFCURVE",
"416 533 QCURVE SMOOTH",
"201 278 LINE",
"201 547 LINE SMOOTH",
"201 569 OFFCURVE",
"221 569 QCURVE",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 570 OFFCURVE",
"108 558 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE",
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 234 LINE",
"257 299 LINE",
"440 52 LINE SMOOTH",
"445 45 OFFCURVE",
"445 38 QCURVE SMOOTH",
"445 27 OFFCURVE",
"428 27 QCURVE SMOOTH",
"374 30 LINE",
"374 0 LINE",
"611 0 LINE",
"611 30 LINE",
"593 27 OFFCURVE",
"577 27 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
48 34 12 11 8 1 6 1 5 1 74 10 8 7 3 5 5 6 93 9 1 6 6 17 75 12 11 4 2 4 1 1 0 93 3 1 0 0 21 0 76 0 0 0 51 0 50 45 43 42 41 38 33 17 21 33 17 39 49 18 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 617;
},
{
anchors = (
{
name = bottom;
position = "{319, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"588 34 OFFCURVE",
"579 48 QCURVE SMOOTH",
"360 372 LINE",
"499 533 LINE SMOOTH",
"515 551 OFFCURVE",
"541 563 OFFCURVE",
"557 562 QCURVE SMOOTH",
"591 560 LINE",
"591 597 LINE",
"411 597 LINE",
"411 560 LINE",
"447 562 LINE",
"457 562 OFFCURVE",
"457 553 QCURVE SMOOTH",
"457 546 OFFCURVE",
"440 526 QCURVE SMOOTH",
"231 278 LINE",
"231 540 LINE SMOOTH",
"231 562 OFFCURVE",
"251 562 QCURVE",
"300 560 LINE",
"300 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"83 563 OFFCURVE",
"93 551 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE",
"39 0 LINE",
"296 0 LINE",
"296 37 LINE",
"251 35 LINE",
"231 33 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 224 LINE",
"267 266 LINE",
"406 59 LINE SMOOTH",
"411 52 OFFCURVE",
"411 45 QCURVE SMOOTH",
"411 34 OFFCURVE",
"394 34 QCURVE SMOOTH",
"348 37 LINE",
"348 0 LINE",
"633 0 LINE",
"633 37 LINE",
"620 34 OFFCURVE",
"603 34 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
49 35 12 11 8 1 6 1 5 1 74 10 8 7 3 5 5 6 93 9 1 6 6 17 75 12 11 4 2 4 1 1 0 93 3 1 0 0 21 0 76 0 0 0 52 0 51 46 44 43 42 38 33 17 21 49 17 24 49 18 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 639;
}
);
note = K;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 394, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 617;
},
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 639;
}
);
note = Kcommaaccent;
unicode = 0136;
},
{
glyphname = L;
layers = (
{
anchors = (
{
name = bottom;
position = "{263, 0}";
},
{
name = center;
position = "{152, 267}";
},
{
name = top;
position = "{150, 597}";
},
{
name = topright;
position = "{280, 424}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"368 0 LINE SMOOTH",
"474 0 OFFCURVE",
"492 -3 QCURVE",
"492 171 LINE",
"466 171 LINE",
"466 101 OFFCURVE",
"395 28 OFFCURVE",
"326 28 QCURVE SMOOTH",
"213 28 LINE SMOOTH",
"201 28 OFFCURVE",
"201 41 QCURVE SMOOTH",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"211 569 OFFCURVE",
"219 569 QCURVE SMOOTH",
"221 569 LINE",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"97 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"93 27 QCURVE",
"50 30 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
25 1 6 71 0 5 1 0 1 5 0 126 3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 6 94 0 6 6 21 6 76 34 18 52 49 17 21 32 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 514;
},
{
anchors = (
{
name = bottom;
position = "{273, 0}";
},
{
name = center;
position = "{162, 267}";
},
{
name = top;
position = "{160, 597}";
},
{
name = topright;
position = "{276, 423}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"368 0 LINE SMOOTH",
"474 0 OFFCURVE",
"492 -3 QCURVE",
"492 171 LINE",
"459 171 LINE",
"459 105 OFFCURVE",
"391 36 OFFCURVE",
"326 36 QCURVE SMOOTH",
"243 36 LINE SMOOTH",
"231 36 OFFCURVE",
"231 49 QCURVE SMOOTH",
"231 541 LINE SMOOTH",
"231 550 OFFCURVE",
"241 562 OFFCURVE",
"249 562 QCURVE SMOOTH",
"251 562 LINE",
"300 560 LINE",
"300 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"82 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"78 35 QCURVE",
"39 38 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
0 1 0 5 1 74 25 1 6 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 5 1 0 1 5 0 126 3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 6 94 0 6 6 21 6 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 5 1 0 0 5 112 3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 6 94 0 6 6 21 6 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 5 1 0 1 5 0 126 3 1 1 1 2 93 0 2 2 17 75 4 1 0 0 6 94 0 6 6 21 6 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
34 18 52 49 17 21 17 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 514;
}
);
note = L;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = LJ;
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 965;
},
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 973;
}
);
unicode = 01C7;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 514;
},
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 327, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 514;
}
);
note = Lacute;
rightKerningGroup = L;
unicode = 0139;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 587, 4}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 514;
},
{
components = (
{
name = L;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 591, -2}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 514;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = Lcommaaccent;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 514;
},
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 514;
}
);
note = Lcommaaccent;
rightKerningGroup = L;
unicode = 013B;
},
{
glyphname = Ldot;
layers = (
{
components = (
{
name = L;
},
{
alignment = 1;
name = periodcentered.loclCAT.case;
transform = "{1, 0, 0, 1, 46, -45}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 514;
},
{
components = (
{
name = L;
},
{
alignment = 1;
name = periodcentered.loclCAT.case;
transform = "{1, 0, 0, 1, 72, -46}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 514;
}
);
note = Ldot;
unicode = 013F;
},
{
glyphname = Lj;
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 765;
},
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 776;
}
);
unicode = 01C8;
},
{
glyphname = Lslash;
layers = (
{
components = (
{
name = L;
},
{
name = slashshortcomb.case;
transform = "{1, 0, 0, 1, -1, -12}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
29 28 27 26 12 11 10 9 8 6 2 1 74 1 1 0 71 7 1 6 2 1 2 6 1 126 4 1 2 2 3 93 0 3 3 17 75 5 1 1 1 0 94 0 0 0 21 0 76 0 0 0 36 0 36 56 49 17 25 33 34 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 514;
},
{
components = (
{
name = L;
},
{
name = slashshortcomb.case;
transform = "{1, 0, 0, 1, 0, -19}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
29 28 27 26 12 11 9 7 6 2 10 5 2 1 6 2 74 1 1 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
7 1 6 2 1 2 6 1 126 4 1 2 2 3 93 0 3 3 17 75 5 1 1 1 0 94 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
7 1 6 2 1 1 6 112 4 1 2 2 3 93 0 3 3 17 75 5 1 1 1 0 94 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
7 1 6 2 1 2 6 1 126 4 1 2 2 3 93 0 3 3 17 75 5 1 1 1 0 94 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
0 0 0 36 0 36 56 49 17 25 18 34 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 514;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = M;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"769 27 LINE",
"749 27 OFFCURVE",
"749 49 QCURVE SMOOTH",
"749 549 LINE SMOOTH",
"749 557 OFFCURVE",
"759 569 OFFCURVE",
"767 569 QCURVE SMOOTH",
"769 569 LINE",
"803 567 LINE",
"803 597 LINE",
"658 597 LINE",
"439 113 LINE",
"206 597 LINE",
"52 597 LINE",
"52 567 LINE",
"94 569 LINE",
"104 570 OFFCURVE",
"104 563 QCURVE SMOOTH",
"104 49 LINE SMOOTH",
"104 27 OFFCURVE",
"84 27 QCURVE",
"45 29 LINE",
"45 0 LINE",
"206 0 LINE",
"206 29 LINE",
"157 27 LINE",
"138 27 OFFCURVE",
"138 49 QCURVE SMOOTH",
"138 527 LINE",
"395 -10 LINE",
"419 -10 LINE",
"657 519 LINE",
"657 49 LINE SMOOTH",
"657 27 OFFCURVE",
"637 27 QCURVE",
"588 29 LINE",
"588 0 LINE",
"808 0 LINE",
"808 29 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
27 21 10 7 4 1 6 1 74 9 1 6 6 7 93 8 1 7 7 17 75 11 10 5 3 4 1 1 0 93 4 1 0 0 21 75 0 2 2 18 2 76 0 0 0 38 0 37 33 30 18 17 20 33 17 35 19 33 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 858;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"810 35 LINE",
"790 33 OFFCURVE",
"790 57 QCURVE SMOOTH",
"790 542 LINE SMOOTH",
"790 550 OFFCURVE",
"800 562 OFFCURVE",
"808 562 QCURVE SMOOTH",
"810 562 LINE",
"841 560 LINE",
"841 597 LINE",
"654 597 LINE",
"457 161 LINE",
"247 597 LINE",
"41 597 LINE",
"41 560 LINE",
"83 562 LINE",
"93 563 OFFCURVE",
"93 556 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"73 35 QCURVE",
"34 37 LINE",
"34 0 LINE",
"202 0 LINE",
"202 37 LINE",
"153 35 LINE",
"134 35 OFFCURVE",
"134 57 QCURVE SMOOTH",
"134 527 LINE",
"391 -10 LINE",
"423 -10 LINE",
"653 501 LINE",
"653 57 LINE SMOOTH",
"653 35 OFFCURVE",
"633 35 QCURVE",
"584 37 LINE",
"584 0 LINE",
"846 0 LINE",
"846 37 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
27 21 10 7 4 1 6 1 74 9 1 6 6 7 93 8 1 7 7 17 75 11 10 5 3 4 1 1 0 93 4 1 0 0 21 75 0 2 2 18 2 76 0 0 0 38 0 38 33 30 18 17 20 33 17 35 19 33 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 884;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
anchors = (
{
name = bottom;
position = "{335, 0}";
},
{
name = top;
position = "{334, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"456 597 LINE",
"456 567 LINE",
"505 569 LINE",
"508 569 LINE SMOOTH",
"525 569 OFFCURVE",
"525 549 QCURVE SMOOTH",
"525 155 LINE",
"200 597 LINE",
"45 597 LINE",
"45 567 LINE",
"84 569 LINE",
"93 570 OFFCURVE",
"104 557 OFFCURVE",
"104 548 QCURVE SMOOTH",
"104 49 LINE SMOOTH",
"104 27 OFFCURVE",
"84 27 QCURVE",
"45 29 LINE",
"45 0 LINE",
"206 0 LINE",
"206 29 LINE",
"157 27 LINE",
"138 27 OFFCURVE",
"138 49 QCURVE SMOOTH",
"138 525 LINE",
"529 -6 LINE",
"559 -6 LINE",
"559 548 LINE SMOOTH",
"559 569 OFFCURVE",
"576 569 QCURVE SMOOTH",
"578 569 LINE",
"617 567 LINE",
"617 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
26 8 2 2 0 1 74 7 5 2 0 0 6 93 9 8 2 6 6 17 75 4 1 2 2 3 93 0 3 3 21 75 0 1 1 18 1 76 0 0 0 32 0 32 51 17 21 33 17 35 18 49 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 662;
},
{
anchors = (
{
name = bottom;
position = "{346, 0}";
},
{
name = top;
position = "{345, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"475 597 LINE",
"475 567 LINE",
"524 569 LINE",
"527 569 LINE SMOOTH",
"544 569 OFFCURVE",
"544 549 QCURVE SMOOTH",
"544 183 LINE",
"240 597 LINE",
"34 597 LINE",
"34 567 LINE",
"73 569 LINE",
"82 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE SMOOTH",
"93 49 LINE SMOOTH",
"93 27 OFFCURVE",
"73 27 QCURVE",
"34 29 LINE",
"34 0 LINE",
"202 0 LINE",
"202 29 LINE",
"153 27 LINE",
"134 27 OFFCURVE",
"134 49 QCURVE SMOOTH",
"134 525 LINE",
"525 -6 LINE",
"585 -6 LINE",
"585 548 LINE SMOOTH",
"585 569 OFFCURVE",
"602 569 QCURVE SMOOTH",
"604 569 LINE",
"643 567 LINE",
"643 597 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
26 8 2 2 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
7 5 2 0 0 6 93 9 8 2 6 6 17 75 4 1 2 2 1 93 3 1 1 1 18 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
7 5 2 0 0 6 93 9 8 2 6 6 17 75 4 1 2 2 3 93 0 3 3 21 75 0 1 1 18 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
0 0 0 32 0 32 51 17 21 33 17 35 18 49 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 677;
}
);
note = N;
unicode = 004E;
},
{
glyphname = NJ;
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 662, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 1113;
},
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 677, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 1136;
}
);
unicode = 01CA;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 501, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 662;
},
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 512, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 677;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 662;
},
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 536, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 677;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = Ncommaaccent;
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 662;
},
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 440, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 677;
}
);
note = Ncommaaccent;
unicode = 0145;
},
{
glyphname = Eng;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"456 597 LINE",
"456 567 LINE",
"505 569 LINE",
"508 569 LINE SMOOTH",
"525 569 OFFCURVE",
"525 549 QCURVE SMOOTH",
"525 155 LINE",
"200 597 LINE",
"45 597 LINE",
"45 567 LINE",
"84 569 LINE",
"93 570 OFFCURVE",
"104 557 OFFCURVE",
"104 548 QCURVE SMOOTH",
"104 49 LINE SMOOTH",
"104 27 OFFCURVE",
"84 27 QCURVE",
"45 29 LINE",
"45 0 LINE",
"206 0 LINE",
"206 29 LINE",
"157 27 LINE",
"138 27 OFFCURVE",
"138 49 QCURVE SMOOTH",
"138 525 LINE",
"529 -6 LINE",
"559 -6 LINE",
"559 548 LINE SMOOTH",
"559 569 OFFCURVE",
"576 569 QCURVE SMOOTH",
"578 569 LINE",
"617 567 LINE",
"617 597 LINE"
);
},
{
closed = 1;
nodes = (
"473 100 LINE",
"473 -59 LINE SMOOTH",
"473 -90 OFFCURVE",
"475 -133 QCURVE SMOOTH",
"479 -216 OFFCURVE",
"422 -216 QCURVE SMOOTH",
"391 -216 OFFCURVE",
"391 -191 QCURVE SMOOTH",
"391 -187 OFFCURVE",
"397 -165 OFFCURVE",
"397 -160 QCURVE SMOOTH",
"397 -144 OFFCURVE",
"374 -132 OFFCURVE",
"362 -132 QCURVE SMOOTH",
"341 -132 OFFCURVE",
"315 -156 OFFCURVE",
"315 -176 QCURVE SMOOTH",
"315 -204 OFFCURVE",
"370 -243 OFFCURVE",
"416 -243 QCURVE SMOOTH",
"559 -243 OFFCURVE",
"559 -4 QCURVE SMOOTH",
"559 100 LINE"
);
}
);
width = 662;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"475 597 LINE",
"475 567 LINE",
"524 569 LINE",
"527 569 LINE SMOOTH",
"544 569 OFFCURVE",
"544 549 QCURVE SMOOTH",
"544 183 LINE",
"240 597 LINE",
"34 597 LINE",
"34 567 LINE",
"73 569 LINE",
"82 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE SMOOTH",
"93 49 LINE SMOOTH",
"93 27 OFFCURVE",
"73 27 QCURVE",
"34 29 LINE",
"34 0 LINE",
"202 0 LINE",
"202 29 LINE",
"153 27 LINE",
"134 27 OFFCURVE",
"134 49 QCURVE SMOOTH",
"134 525 LINE",
"525 -6 LINE",
"585 -6 LINE",
"585 548 LINE SMOOTH",
"585 569 OFFCURVE",
"602 569 QCURVE SMOOTH",
"604 569 LINE",
"643 567 LINE",
"643 597 LINE"
);
},
{
closed = 1;
nodes = (
"454 132 LINE",
"454 -37 LINE SMOOTH",
"454 -100 OFFCURVE",
"464 -156 QCURVE SMOOTH",
"473 -207 OFFCURVE",
"432 -209 QCURVE SMOOTH",
"410 -210 OFFCURVE",
"410 -184 QCURVE SMOOTH",
"410 -180 OFFCURVE",
"416 -158 OFFCURVE",
"416 -153 QCURVE SMOOTH",
"416 -128 OFFCURVE",
"379 -108 OFFCURVE",
"361 -108 QCURVE SMOOTH",
"332 -108 OFFCURVE",
"298 -140 OFFCURVE",
"298 -166 QCURVE SMOOTH",
"298 -201 OFFCURVE",
"366 -243 OFFCURVE",
"427 -243 QCURVE SMOOTH",
"585 -243 OFFCURVE",
"585 -12 QCURVE SMOOTH",
"585 132 LINE"
);
}
);
width = 677;
}
);
unicode = 014A;
},
{
glyphname = Nhookleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"456 597 LINE",
"456 567 LINE",
"505 569 LINE",
"508 569 LINE SMOOTH",
"525 569 OFFCURVE",
"525 549 QCURVE SMOOTH",
"525 155 LINE",
"200 597 LINE",
"45 597 LINE",
"45 567 LINE",
"84 569 LINE",
"93 570 OFFCURVE",
"104 557 OFFCURVE",
"104 548 QCURVE",
"138 525 LINE",
"529 -6 LINE",
"559 -6 LINE",
"559 548 LINE SMOOTH",
"559 569 OFFCURVE",
"576 569 QCURVE SMOOTH",
"578 569 LINE",
"617 567 LINE",
"617 597 LINE"
);
},
{
closed = 1;
nodes = (
"104 597 LINE",
"104 -46 LINE SMOOTH",
"104 -77 OFFCURVE",
"106 -120 QCURVE SMOOTH",
"110 -216 OFFCURVE",
"53 -216 QCURVE SMOOTH",
"23 -216 OFFCURVE",
"22 -191 QCURVE SMOOTH",
"22 -187 OFFCURVE",
"28 -165 OFFCURVE",
"28 -160 QCURVE SMOOTH",
"28 -144 OFFCURVE",
"5 -132 OFFCURVE",
"-7 -132 QCURVE SMOOTH",
"-28 -132 OFFCURVE",
"-54 -156 OFFCURVE",
"-54 -176 QCURVE SMOOTH",
"-54 -204 OFFCURVE",
"-9 -243 OFFCURVE",
"37 -243 QCURVE SMOOTH",
"138 -243 OFFCURVE",
"138 -109 QCURVE SMOOTH",
"138 597 LINE"
);
}
);
width = 662;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"475 597 LINE",
"475 567 LINE",
"524 569 LINE",
"527 569 LINE SMOOTH",
"544 569 OFFCURVE",
"544 549 QCURVE SMOOTH",
"544 183 LINE",
"240 597 LINE",
"34 597 LINE",
"34 567 LINE",
"73 569 LINE",
"82 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE",
"134 525 LINE",
"525 -6 LINE",
"585 -6 LINE",
"585 548 LINE SMOOTH",
"585 569 OFFCURVE",
"602 569 QCURVE SMOOTH",
"604 569 LINE",
"643 567 LINE",
"643 597 LINE"
);
},
{
closed = 1;
nodes = (
"93 597 LINE",
"93 3 LINE",
"95 -60 OFFCURVE",
"103 -116 QCURVE",
"116 -209 OFFCURVE",
"71 -209 QCURVE",
"50 -209 OFFCURVE",
"49 -184 QCURVE",
"49 -180 OFFCURVE",
"55 -158 OFFCURVE",
"55 -153 QCURVE",
"55 -128 OFFCURVE",
"18 -108 OFFCURVE",
"0 -108 QCURVE",
"-29 -108 OFFCURVE",
"-63 -140 OFFCURVE",
"-63 -166 QCURVE",
"-63 -196 OFFCURVE",
"-14 -243 OFFCURVE",
"36 -243 QCURVE",
"134 -243 OFFCURVE",
"134 -132 QCURVE",
"134 597 LINE"
);
}
);
width = 677;
}
);
unicode = 019D;
},
{
glyphname = Nj;
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 662, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 913;
},
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 677, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 939;
}
);
unicode = 01CB;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 520, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 662;
},
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 531, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 677;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
layers = (
{
anchors = (
{
name = bottom;
position = "{335, 0}";
},
{
name = center;
position = "{335, 299}";
},
{
name = ogonek;
position = "{429, 0}";
},
{
name = top;
position = "{335, 597}";
},
{
name = topright;
position = "{365, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"45 152 OFFCURVE",
"198 -10 OFFCURVE",
"335 -10 QCURVE SMOOTH",
"472 -10 OFFCURVE",
"625 152 OFFCURVE",
"625 299 QCURVE SMOOTH",
"625 445 OFFCURVE",
"474 607 OFFCURVE",
"335 607 QCURVE SMOOTH",
"198 607 OFFCURVE",
"45 448 OFFCURVE",
"45 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"147 448 OFFCURVE",
"238 580 OFFCURVE",
"335 580 QCURVE SMOOTH",
"432 580 OFFCURVE",
"523 448 OFFCURVE",
"523 299 QCURVE SMOOTH",
"523 149 OFFCURVE",
"432 17 OFFCURVE",
"335 17 QCURVE SMOOTH",
"238 17 OFFCURVE",
"147 149 OFFCURVE",
"147 299 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 25 75 0 2 2 1 95 0 1 1 26 1 76 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 670;
},
{
anchors = (
{
name = bottom;
position = "{339, 0}";
},
{
name = center;
position = "{339, 299}";
},
{
name = ogonek;
position = "{442, 0}";
},
{
name = top;
position = "{339, 597}";
},
{
name = topright;
position = "{371, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"30 152 OFFCURVE",
"192 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"486 -10 OFFCURVE",
"648 152 OFFCURVE",
"648 299 QCURVE SMOOTH",
"648 445 OFFCURVE",
"488 607 OFFCURVE",
"339 607 QCURVE SMOOTH",
"192 607 OFFCURVE",
"30 448 OFFCURVE",
"30 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 403 OFFCURVE",
"215 523 OFFCURVE",
"283 573 OFFCURVE",
"339 573 QCURVE SMOOTH",
"395 573 OFFCURVE",
"463 523 OFFCURVE",
"497 403 OFFCURVE",
"497 299 QCURVE SMOOTH",
"497 194 OFFCURVE",
"463 75 OFFCURVE",
"395 25 OFFCURVE",
"339 25 QCURVE SMOOTH",
"283 25 OFFCURVE",
"215 75 OFFCURVE",
"181 194 OFFCURVE",
"181 299 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 152 OFFCURVE",
"192 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"486 -10 OFFCURVE",
"648 152 OFFCURVE",
"648 299 QCURVE SMOOTH",
"648 445 OFFCURVE",
"488 607 OFFCURVE",
"339 607 QCURVE SMOOTH",
"192 607 OFFCURVE",
"30 448 OFFCURVE",
"30 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 453 OFFCURVE",
"253 573 OFFCURVE",
"339 573 QCURVE SMOOTH",
"425 573 OFFCURVE",
"497 453 OFFCURVE",
"497 299 QCURVE SMOOTH",
"497 144 OFFCURVE",
"425 25 OFFCURVE",
"339 25 QCURVE SMOOTH",
"253 25 OFFCURVE",
"181 144 OFFCURVE",
"181 299 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 25 75 0 2 2 1 95 0 1 1 26 1 76 38 37 36 33 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 678;
}
);
leftKerningGroup = C;
note = O;
rightKerningGroup = D;
unicode = 004F;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 502, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 506, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Oacute;
rightKerningGroup = D;
unicode = 00D3;
},
{
glyphname = Obreve;
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 516, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 510, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 014E;
},
{
glyphname = Ocaron;
layers = (
{
components = (
{
name = O;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 01D1;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Ocircumflex;
rightKerningGroup = D;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 144, 177}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 507, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 172}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookcomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 526, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ED6;
},
{
glyphname = Odblgrave;
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 447, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 444, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 020C;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 548, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Odieresis;
rightKerningGroup = D;
unicode = 00D6;
},
{
glyphname = Odieresismacron;
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb_macroncomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb_macroncomb.case;
transform = "{1, 0, 0, 1, 548, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 022A;
},
{
glyphname = Odotaccentmacron;
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb_macroncomb.case;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = dotaccentcomb_macroncomb.case;
transform = "{1, 0, 0, 1, 460, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 0230;
},
{
glyphname = Odotbelow;
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 507, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ECC;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Ograve;
rightKerningGroup = D;
unicode = 00D2;
},
{
glyphname = Ohookabove;
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 455, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 459, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
layers = (
{
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 647, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 664, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 502, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 506, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 507, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 455, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 459, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 571, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 588, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Ohungarumlaut;
rightKerningGroup = D;
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 506, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 510, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 020E;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 490, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 494, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Omacron;
rightKerningGroup = D;
unicode = 014C;
},
{
glyphname = Oogonek;
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 580, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 593, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 01EA;
},
{
glyphname = Oslash;
layers = (
{
components = (
{
name = O;
},
{
name = slashlongcomb.case;
transform = "{1, 0, 0, 1, -5, -8}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
35 34 24 23 21 10 7 7 3 2 1 74 18 1 2 1 73 20 19 2 1 72 9 8 2 0 71 0 2 2 1 95 0 1 1 25 75 4 1 3 3 0 95 0 0 0 26 0 76 30 30 30 37 30 36 40 41 36 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 670;
},
{
components = (
{
name = O;
},
{
name = slashlongcomb.case;
transform = "{1, 0, 0, 1, -1, -8}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
18 1 2 1 37 36 24 23 21 10 6 3 2 7 1 0 3 3 74 20 19 2 1 72 9 8 2 0 71 0 2 2 1 95 0 1 1 25 75 4 1 3 3 0 95 0 0 0 26 0 76 31 31 31 39 31 38 40 41 36 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 678;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Oslashacute;
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 502, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 506, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 01FE;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
leftKerningGroup = C;
note = Otilde;
rightKerningGroup = D;
unicode = 00D5;
},
{
glyphname = Otildemacron;
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb.case;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb.case;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
unicode = 022C;
},
{
glyphname = OE;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"45 146 OFFCURVE",
"197 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"341 -10 OFFCURVE",
"419 0 OFFCURVE",
"479 0 QCURVE SMOOTH",
"729 0 LINE SMOOTH",
"793 0 OFFCURVE",
"817 -3 QCURVE",
"817 179 LINE",
"790 179 LINE",
"790 106 OFFCURVE",
"719 27 OFFCURVE",
"650 27 QCURVE SMOOTH",
"535 27 LINE SMOOTH",
"522 27 OFFCURVE",
"522 40 QCURVE SMOOTH",
"522 297 LINE",
"598 297 LINE SMOOTH",
"630 297 OFFCURVE",
"675 239 OFFCURVE",
"675 195 QCURVE",
"702 195 LINE",
"702 426 LINE",
"675 426 LINE",
"675 379 OFFCURVE",
"631 324 OFFCURVE",
"598 324 QCURVE SMOOTH",
"522 324 LINE",
"522 555 LINE SMOOTH",
"522 569 OFFCURVE",
"535 569 QCURVE SMOOTH",
"629 569 LINE SMOOTH",
"704 569 OFFCURVE",
"771 511 OFFCURVE",
"771 443 QCURVE",
"798 443 LINE",
"798 597 LINE",
"471 597 LINE SMOOTH",
"443 597 OFFCURVE",
"411 602 QCURVE SMOOTH",
"404 603 OFFCURVE",
"363 607 OFFCURVE",
"342 607 QCURVE SMOOTH",
"45 607 OFFCURVE",
"45 292 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"142 446 OFFCURVE",
"233 581 OFFCURVE",
"335 581 QCURVE SMOOTH",
"376 581 OFFCURVE",
"434 549 OFFCURVE",
"434 526 QCURVE SMOOTH",
"434 90 LINE SMOOTH",
"434 59 OFFCURVE",
"390 18 OFFCURVE",
"335 18 QCURVE SMOOTH",
"232 18 OFFCURVE",
"142 148 OFFCURVE",
"142 296 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
36 1 11 10 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 74 values pushed */
0 2 3 5 3 2 112 0 9 6 8 6 9 8 126 0 4 0 7 6 4 7 101 0 13 13 0 95 0 0 0 25 75 0 3 3 1 93 0 1 1 17 75 0 6 6 5 93 0 5 5 20 75 0 8 8 10 94 0 10 10 21 75 0 12 12 11 95 0 11 11 26 11 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 75 values pushed */
0 2 3 5 3 2 5 126 0 9 6 8 6 9 8 126 0 4 0 7 6 4 7 101 0 13 13 0 95 0 0 0 25 75 0 3 3 1 93 0 1 1 17 75 0 6 6 5 93 0 5 5 20 75 0 8 8 10 94 0 10 10 21 75 0 12 12 11 95 0 11 11 26 11 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 22 values pushed */
56 54 49 47 43 41 40 37 35 34 50 34 17 18 34 50 17 35 32 14 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 861;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"30 151 OFFCURVE",
"192 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"341 -10 OFFCURVE",
"419 0 OFFCURVE",
"479 0 QCURVE SMOOTH",
"766 0 LINE SMOOTH",
"836 0 OFFCURVE",
"861 -3 QCURVE",
"861 179 LINE",
"827 179 LINE",
"827 109 OFFCURVE",
"756 35 OFFCURVE",
"687 35 QCURVE SMOOTH",
"585 35 LINE SMOOTH",
"572 35 OFFCURVE",
"572 48 QCURVE SMOOTH",
"572 290 LINE",
"638 290 LINE SMOOTH",
"669 290 OFFCURVE",
"715 233 OFFCURVE",
"715 191 QCURVE",
"749 191 LINE",
"749 426 LINE",
"715 426 LINE",
"715 379 OFFCURVE",
"672 325 OFFCURVE",
"638 325 QCURVE SMOOTH",
"572 325 LINE",
"572 548 LINE SMOOTH",
"572 562 OFFCURVE",
"585 562 QCURVE SMOOTH",
"658 562 LINE SMOOTH",
"733 562 OFFCURVE",
"800 507 OFFCURVE",
"800 443 QCURVE",
"834 443 LINE",
"834 597 LINE",
"471 597 LINE SMOOTH",
"443 597 OFFCURVE",
"411 602 QCURVE SMOOTH",
"404 603 OFFCURVE",
"363 607 OFFCURVE",
"342 607 QCURVE SMOOTH",
"185 607 OFFCURVE",
"30 442 OFFCURVE",
"30 292 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180 397 OFFCURVE",
"212 519 OFFCURVE",
"279 574 OFFCURVE",
"335 574 QCURVE SMOOTH",
"376 574 OFFCURVE",
"434 546 OFFCURVE",
"434 526 QCURVE SMOOTH",
"434 90 LINE SMOOTH",
"434 63 OFFCURVE",
"390 26 OFFCURVE",
"335 26 QCURVE SMOOTH",
"279 26 OFFCURVE",
"211 78 OFFCURVE",
"180 196 OFFCURVE",
"180 296 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 151 OFFCURVE",
"192 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"341 -10 OFFCURVE",
"419 0 OFFCURVE",
"479 0 QCURVE SMOOTH",
"766 0 LINE SMOOTH",
"836 0 OFFCURVE",
"861 -3 QCURVE",
"861 179 LINE",
"827 179 LINE",
"827 109 OFFCURVE",
"756 35 OFFCURVE",
"687 35 QCURVE SMOOTH",
"585 35 LINE SMOOTH",
"572 35 OFFCURVE",
"572 48 QCURVE SMOOTH",
"572 290 LINE",
"638 290 LINE SMOOTH",
"669 290 OFFCURVE",
"715 233 OFFCURVE",
"715 191 QCURVE",
"749 191 LINE",
"749 426 LINE",
"715 426 LINE",
"715 379 OFFCURVE",
"672 325 OFFCURVE",
"638 325 QCURVE SMOOTH",
"572 325 LINE",
"572 548 LINE SMOOTH",
"572 562 OFFCURVE",
"585 562 QCURVE SMOOTH",
"658 562 LINE SMOOTH",
"733 562 OFFCURVE",
"800 507 OFFCURVE",
"800 443 QCURVE",
"834 443 LINE",
"834 597 LINE",
"471 597 LINE SMOOTH",
"443 597 OFFCURVE",
"411 602 QCURVE SMOOTH",
"404 603 OFFCURVE",
"361 607 OFFCURVE",
"342 607 QCURVE SMOOTH",
"30 607 OFFCURVE",
"30 292 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180 437 OFFCURVE",
"248 574 OFFCURVE",
"335 574 QCURVE SMOOTH",
"376 574 OFFCURVE",
"434 546 OFFCURVE",
"434 526 QCURVE SMOOTH",
"434 90 LINE SMOOTH",
"434 63 OFFCURVE",
"390 26 OFFCURVE",
"335 26 QCURVE SMOOTH",
"249 26 OFFCURVE",
"180 148 OFFCURVE",
"180 296 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
37 1 11 10 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 74 values pushed */
0 2 3 5 3 2 112 0 9 6 8 6 9 8 126 0 4 0 7 6 4 7 103 0 13 13 0 95 0 0 0 25 75 0 3 3 1 93 0 1 1 17 75 0 6 6 5 93 0 5 5 20 75 0 8 8 10 94 0 10 10 21 75 0 12 12 11 95 0 11 11 26 11 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 75 values pushed */
0 2 3 5 3 2 5 126 0 9 6 8 6 9 8 126 0 4 0 7 6 4 7 103 0 13 13 0 95 0 0 0 25 75 0 3 3 1 93 0 1 1 17 75 0 6 6 5 93 0 5 5 20 75 0 8 8 10 94 0 10 10 21 75 0 12 12 11 95 0 11 11 26 11 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 22 values pushed */
58 56 51 49 44 42 41 38 36 35 50 34 17 18 34 50 17 35 33 14 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 905;
}
);
leftKerningGroup = C;
note = OE;
unicode = 0152;
},
{
glyphname = P;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 263 LINE",
"306 263 LINE SMOOTH",
"390 263 OFFCURVE",
"488 357 OFFCURVE",
"488 436 QCURVE SMOOTH",
"488 518 OFFCURVE",
"389 597 OFFCURVE",
"285 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"85 569 LINE SMOOTH",
"98 570 OFFCURVE",
"108 559 OFFCURVE",
"108 547 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 291 LINE",
"201 557 LINE SMOOTH",
"201 562 OFFCURVE",
"209 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"269 569 LINE SMOOTH",
"325 569 OFFCURVE",
"392 496 OFFCURVE",
"392 436 QCURVE SMOOTH",
"392 373 OFFCURVE",
"331 291 OFFCURVE",
"285 291 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
8 1 6 0 3 0 6 3 101 7 1 1 1 2 93 0 2 2 17 75 4 1 0 0 5 93 0 5 5 21 5 76 25 24 31 29 24 35 25 35 17 34 36 33 21 32 9 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 523;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"300 0 LINE",
"300 37 LINE",
"251 35 LINE",
"231 35 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 248 LINE",
"329 248 LINE SMOOTH",
"418 248 OFFCURVE",
"523 347 OFFCURVE",
"523 429 QCURVE SMOOTH",
"523 514 OFFCURVE",
"415 597 OFFCURVE",
"302 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"70 562 LINE SMOOTH",
"83 563 OFFCURVE",
"93 552 OFFCURVE",
"93 540 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"231 284 LINE",
"231 550 LINE SMOOTH",
"231 555 OFFCURVE",
"239 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"283 562 LINE SMOOTH",
"326 562 OFFCURVE",
"379 488 OFFCURVE",
"379 429 QCURVE SMOOTH",
"379 366 OFFCURVE",
"326 284 OFFCURVE",
"286 284 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
8 1 6 0 3 0 6 3 101 7 1 1 1 2 93 0 2 2 17 75 4 1 0 0 5 93 0 5 5 21 5 76 26 25 32 30 25 36 26 36 17 34 36 33 21 48 9 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 547;
}
);
note = P;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Thorn;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE SMOOTH",
"201 26 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 162 LINE",
"304 162 LINE SMOOTH",
"391 162 OFFCURVE",
"489 255 OFFCURVE",
"489 334 QCURVE SMOOTH",
"489 418 OFFCURVE",
"389 496 OFFCURVE",
"283 496 QCURVE SMOOTH",
"201 496 LINE",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"212 569 OFFCURVE",
"221 569 QCURVE",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 569 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 39 OFFCURVE",
"100 27 OFFCURVE",
"91 27 QCURVE SMOOTH",
"89 27 LINE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 471 LINE",
"267 471 LINE SMOOTH",
"325 471 OFFCURVE",
"393 396 OFFCURVE",
"393 334 QCURVE SMOOTH",
"393 294 OFFCURVE",
"363 227 OFFCURVE",
"312 188 OFFCURVE",
"283 188 QCURVE SMOOTH",
"214 188 LINE SMOOTH",
"209 188 OFFCURVE",
"201 196 OFFCURVE",
"201 201 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE SMOOTH",
"201 26 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 162 LINE",
"304 162 LINE SMOOTH",
"391 162 OFFCURVE",
"489 255 OFFCURVE",
"489 334 QCURVE SMOOTH",
"489 418 OFFCURVE",
"389 496 OFFCURVE",
"283 496 QCURVE SMOOTH",
"201 496 LINE",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"212 569 OFFCURVE",
"221 569 QCURVE",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 569 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 39 OFFCURVE",
"100 27 OFFCURVE",
"91 27 QCURVE SMOOTH",
"89 27 LINE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 471 LINE",
"267 471 LINE SMOOTH",
"325 471 OFFCURVE",
"393 396 OFFCURVE",
"393 334 QCURVE SMOOTH",
"393 275 OFFCURVE",
"329 188 OFFCURVE",
"283 188 QCURVE SMOOTH",
"214 188 LINE SMOOTH",
"209 188 OFFCURVE",
"201 196 OFFCURVE",
"201 201 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
45 1 8 9 1 74 0 4 0 9 8 4 9 103 0 8 0 5 0 8 5 101 3 1 1 1 2 93 0 2 2 17 75 6 1 0 0 7 93 0 7 7 21 7 76 44 42 50 17 34 36 35 33 17 37 48 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 524;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"300 0 LINE",
"300 29 LINE",
"251 27 LINE SMOOTH",
"231 26 OFFCURVE",
"231 49 QCURVE SMOOTH",
"231 162 LINE",
"327 162 LINE SMOOTH",
"418 162 OFFCURVE",
"519 251 OFFCURVE",
"519 334 QCURVE SMOOTH",
"519 422 OFFCURVE",
"418 496 OFFCURVE",
"306 496 QCURVE SMOOTH",
"231 496 LINE",
"231 548 LINE SMOOTH",
"231 557 OFFCURVE",
"242 569 OFFCURVE",
"251 569 QCURVE",
"300 567 LINE",
"300 597 LINE",
"39 597 LINE",
"39 567 LINE",
"74 569 LINE",
"83 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE SMOOTH",
"93 49 LINE SMOOTH",
"93 39 OFFCURVE",
"85 27 OFFCURVE",
"76 27 QCURVE SMOOTH",
"74 27 LINE",
"39 29 LINE"
);
},
{
closed = 1;
nodes = (
"231 471 LINE",
"275 471 LINE SMOOTH",
"324 471 OFFCURVE",
"378 400 OFFCURVE",
"378 334 QCURVE SMOOTH",
"378 269 OFFCURVE",
"327 188 OFFCURVE",
"291 188 QCURVE SMOOTH",
"244 188 LINE SMOOTH",
"239 188 OFFCURVE",
"231 196 OFFCURVE",
"231 201 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
44 1 8 9 1 74 0 4 0 9 8 4 9 103 0 8 0 5 0 8 5 101 3 1 1 1 2 93 0 2 2 17 75 6 1 0 0 7 93 0 7 7 21 7 76 43 41 50 17 34 36 35 33 17 22 48 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 543;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = Q;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"500 7 OFFCURVE",
"625 166 OFFCURVE",
"625 299 QCURVE SMOOTH",
"625 445 OFFCURVE",
"474 607 OFFCURVE",
"335 607 QCURVE SMOOTH",
"198 607 OFFCURVE",
"45 448 OFFCURVE",
"45 299 QCURVE SMOOTH",
"45 167 OFFCURVE",
"170 8 OFFCURVE",
"284 -7 QCURVE",
"284 -62 OFFCURVE",
"350 -148 OFFCURVE",
"467 -196 OFFCURVE",
"541 -196 QCURVE",
"554 -166 LINE",
"473 -164 OFFCURVE",
"385 -72 OFFCURVE",
"385 -7 QCURVE"
);
},
{
closed = 1;
nodes = (
"147 448 OFFCURVE",
"238 580 OFFCURVE",
"335 580 QCURVE SMOOTH",
"432 580 OFFCURVE",
"523 448 OFFCURVE",
"523 299 QCURVE SMOOTH",
"523 149 OFFCURVE",
"432 17 OFFCURVE",
"335 17 QCURVE SMOOTH",
"238 17 OFFCURVE",
"147 149 OFFCURVE",
"147 299 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"45 152 OFFCURVE",
"198 -10 OFFCURVE",
"335 -10 QCURVE SMOOTH",
"472 -10 OFFCURVE",
"625 152 OFFCURVE",
"625 299 QCURVE SMOOTH",
"625 445 OFFCURVE",
"474 607 OFFCURVE",
"335 607 QCURVE SMOOTH",
"198 607 OFFCURVE",
"45 448 OFFCURVE",
"45 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"147 448 OFFCURVE",
"238 580 OFFCURVE",
"335 580 QCURVE SMOOTH",
"432 580 OFFCURVE",
"523 448 OFFCURVE",
"523 299 QCURVE SMOOTH",
"523 149 OFFCURVE",
"432 17 OFFCURVE",
"335 17 QCURVE SMOOTH",
"238 17 OFFCURVE",
"147 149 OFFCURVE",
"147 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 0 LINE",
"371 -109 OFFCURVE",
"417 -194 OFFCURVE",
"478 -194 CURVE SMOOTH",
"502 -194 OFFCURVE",
"542 -191 OFFCURVE",
"584 -166 CURVE",
"575 -140 LINE",
"461 -176 OFFCURVE",
"449 -37 OFFCURVE",
"335 -10 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
20 8 2 0 3 1 74 0 3 4 0 4 3 0 126 0 0 0 1 0 1 99 0 4 4 2 95 0 2 2 25 4 76 36 39 40 17 18 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 670;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"523 13 OFFCURVE",
"648 170 OFFCURVE",
"648 299 QCURVE SMOOTH",
"648 445 OFFCURVE",
"488 607 OFFCURVE",
"339 607 QCURVE SMOOTH",
"192 607 OFFCURVE",
"30 448 OFFCURVE",
"30 299 QCURVE SMOOTH",
"30 173 OFFCURVE",
"151 17 OFFCURVE",
"262 -3 QCURVE",
"261 -59 OFFCURVE",
"329 -147 OFFCURVE",
"457 -196 OFFCURVE",
"541 -196 QCURVE",
"551 -160 LINE",
"485 -160 OFFCURVE",
"406 -73 OFFCURVE",
"408 -5 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 443 OFFCURVE",
"249 573 OFFCURVE",
"339 573 QCURVE SMOOTH",
"432 573 OFFCURVE",
"497 435 OFFCURVE",
"497 299 QCURVE SMOOTH",
"497 149 OFFCURVE",
"425 25 OFFCURVE",
"339 25 QCURVE SMOOTH",
"253 25 OFFCURVE",
"181 149 OFFCURVE",
"181 299 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 152 OFFCURVE",
"192 -10 OFFCURVE",
"339 -10 QCURVE SMOOTH",
"486 -10 OFFCURVE",
"648 152 OFFCURVE",
"648 299 QCURVE SMOOTH",
"648 445 OFFCURVE",
"488 607 OFFCURVE",
"339 607 QCURVE SMOOTH",
"192 607 OFFCURVE",
"30 448 OFFCURVE",
"30 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 453 OFFCURVE",
"253 573 OFFCURVE",
"339 573 QCURVE SMOOTH",
"425 573 OFFCURVE",
"497 453 OFFCURVE",
"497 299 QCURVE SMOOTH",
"497 144 OFFCURVE",
"425 25 OFFCURVE",
"339 25 QCURVE SMOOTH",
"253 25 OFFCURVE",
"181 144 OFFCURVE",
"181 299 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 0 LINE",
"373 -109 OFFCURVE",
"429 -203 OFFCURVE",
"490 -203 CURVE SMOOTH",
"514 -203 OFFCURVE",
"561 -193 OFFCURVE",
"603 -168 CURVE",
"587 -133 LINE",
"465 -181 OFFCURVE",
"494 -29 OFFCURVE",
"339 -10 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
10 2 2 0 3 1 74 0 3 4 0 4 3 0 126 0 0 0 1 0 1 99 0 4 4 2 95 0 2 2 25 4 76 38 37 40 17 20 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 678;
}
);
leftKerningGroup = C;
note = Q;
rightKerningGroup = D;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
anchors = (
{
name = bottom;
position = "{296, 0}";
},
{
name = top;
position = "{295, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 286 LINE",
"243 286 LINE SMOOTH",
"313 286 OFFCURVE",
"410 212 OFFCURVE",
"410 137 QCURVE SMOOTH",
"410 104 LINE SMOOTH",
"410 92 OFFCURVE",
"412 66 QCURVE SMOOTH",
"414 25 OFFCURVE",
"426 0 QCURVE",
"562 0 LINE",
"562 30 LINE",
"555 26 OFFCURVE",
"543 26 QCURVE SMOOTH",
"535 26 OFFCURVE",
"529 28 QCURVE",
"515 30 OFFCURVE",
"500 92 OFFCURVE",
"500 122 QCURVE SMOOTH",
"500 175 OFFCURVE",
"458 255 OFFCURVE",
"395 297 OFFCURVE",
"364 297 QCURVE",
"419 312 OFFCURVE",
"486 387 OFFCURVE",
"486 438 QCURVE SMOOTH",
"486 522 OFFCURVE",
"386 597 OFFCURVE",
"275 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"86 569 LINE",
"97 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 313 LINE",
"201 559 LINE SMOOTH",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"275 569 LINE SMOOTH",
"335 569 OFFCURVE",
"392 507 OFFCURVE",
"392 438 QCURVE SMOOTH",
"392 379 OFFCURVE",
"340 313 OFFCURVE",
"294 313 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
31 27 2 0 6 1 74 0 3 9 6 9 3 6 126 11 1 9 0 6 0 9 6 103 10 1 1 1 2 93 0 2 2 17 75 7 4 2 0 0 5 93 8 1 5 5 21 5 76 46 45 53 50 45 55 46 55 17 34 39 18 24 21 33 21 32 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 581;
},
{
anchors = (
{
name = bottom;
position = "{300, 0}";
},
{
name = top;
position = "{299, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"300 0 LINE",
"300 37 LINE",
"251 35 LINE",
"231 35 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 271 LINE",
"258 271 LINE SMOOTH",
"312 271 OFFCURVE",
"388 205 OFFCURVE",
"388 137 QCURVE SMOOTH",
"388 104 LINE SMOOTH",
"388 92 OFFCURVE",
"390 66 QCURVE SMOOTH",
"392 25 OFFCURVE",
"404 0 QCURVE",
"581 0 LINE",
"581 30 LINE",
"574 26 OFFCURVE",
"565 26 QCURVE SMOOTH",
"558 26 OFFCURVE",
"552 28 QCURVE",
"540 31 OFFCURVE",
"523 94 OFFCURVE",
"523 122 QCURVE SMOOTH",
"523 173 OFFCURVE",
"474 250 OFFCURVE",
"400 290 OFFCURVE",
"364 290 QCURVE",
"432 304 OFFCURVE",
"509 386 OFFCURVE",
"509 447 QCURVE SMOOTH",
"509 524 OFFCURVE",
"406 597 OFFCURVE",
"298 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"71 562 LINE SMOOTH",
"82 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"231 306 LINE",
"231 552 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"275 562 LINE SMOOTH",
"325 562 OFFCURVE",
"373 501 OFFCURVE",
"373 434 QCURVE SMOOTH",
"373 375 OFFCURVE",
"330 306 OFFCURVE",
"294 306 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 82 values pushed */
32 1 0 6 28 1 4 0 2 74 0 3 9 6 9 3 6 126 11 1 9 0 6 0 9 6 103 10 1 1 1 2 93 0 2 2 17 75 7 1 0 0 5 93 8 1 5 5 21 75 0 4 4 5 93 8 1 5 5 21 5 76 47 46 54 51 46 56 47 56 17 34 39 18 24 21 33 21 48 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 597;
}
);
note = R;
rightKerningGroup = R;
unicode = 0052;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 462, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 581;
},
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 597;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 486, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 581;
},
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 490, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 597;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = Rcommaaccent;
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 374, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 581;
},
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 394, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 597;
}
);
note = Rcommaaccent;
unicode = 0156;
},
{
glyphname = Rdblgrave;
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 581;
},
{
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 597;
}
);
unicode = 0210;
},
{
glyphname = Rinvertedbreve;
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 581;
},
{
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 470, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 597;
}
);
unicode = 0212;
},
{
glyphname = S;
layers = (
{
anchors = (
{
name = bottom;
position = "{251, 0}";
},
{
name = top;
position = "{250, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"48 203 LINE",
"56 177 OFFCURVE",
"56 96 QCURVE SMOOTH",
"56 34 OFFCURVE",
"52 13 QCURVE",
"57 14 OFFCURVE",
"77 18 OFFCURVE",
"86 18 QCURVE SMOOTH",
"112 18 OFFCURVE",
"165 3 QCURVE SMOOTH",
"191 -5 OFFCURVE",
"237 -10 OFFCURVE",
"268 -10 QCURVE SMOOTH",
"319 -10 OFFCURVE",
"406 35 OFFCURVE",
"457 116 OFFCURVE",
"457 168 QCURVE SMOOTH",
"457 227 OFFCURVE",
"392 302 OFFCURVE",
"316 333 QCURVE SMOOTH",
"224 370 LINE SMOOTH",
"184 386 OFFCURVE",
"138 439 OFFCURVE",
"138 472 QCURVE SMOOTH",
"138 523 OFFCURVE",
"202 580 OFFCURVE",
"254 580 QCURVE SMOOTH",
"318 580 OFFCURVE",
"403 499 OFFCURVE",
"403 434 QCURVE",
"429 434 LINE",
"425 445 OFFCURVE",
"423 471 OFFCURVE",
"423 501 QCURVE SMOOTH",
"423 552 OFFCURVE",
"426 576 QCURVE",
"415 572 OFFCURVE",
"397 572 QCURVE SMOOTH",
"386 572 OFFCURVE",
"370 578 QCURVE SMOOTH",
"362 581 OFFCURVE",
"318 596 OFFCURVE",
"273 607 OFFCURVE",
"241 607 QCURVE SMOOTH",
"182 607 OFFCURVE",
"98 562 OFFCURVE",
"56 486 OFFCURVE",
"56 441 QCURVE SMOOTH",
"56 391 OFFCURVE",
"112 317 OFFCURVE",
"166 295 QCURVE SMOOTH",
"268 254 LINE SMOOTH",
"314 236 OFFCURVE",
"367 177 OFFCURVE",
"367 138 QCURVE SMOOTH",
"366 84 OFFCURVE",
"307 18 OFFCURVE",
"257 18 QCURVE SMOOTH",
"96 18 OFFCURVE",
"73 203 QCURVE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"48 203 LINE",
"56 177 OFFCURVE",
"56 96 QCURVE SMOOTH",
"56 34 OFFCURVE",
"52 13 QCURVE",
"57 14 OFFCURVE",
"77 18 OFFCURVE",
"86 18 QCURVE SMOOTH",
"113 18 OFFCURVE",
"165 3 QCURVE SMOOTH",
"209 -10 OFFCURVE",
"268 -10 QCURVE SMOOTH",
"319 -10 OFFCURVE",
"406 35 OFFCURVE",
"457 116 OFFCURVE",
"457 168 QCURVE SMOOTH",
"457 227 OFFCURVE",
"392 302 OFFCURVE",
"316 333 QCURVE SMOOTH",
"224 370 LINE SMOOTH",
"184 386 OFFCURVE",
"138 439 OFFCURVE",
"138 472 QCURVE SMOOTH",
"138 523 OFFCURVE",
"202 580 OFFCURVE",
"254 580 QCURVE SMOOTH",
"318 580 OFFCURVE",
"403 499 OFFCURVE",
"403 434 QCURVE",
"429 434 LINE",
"425 445 OFFCURVE",
"423 471 OFFCURVE",
"423 501 QCURVE SMOOTH",
"423 552 OFFCURVE",
"426 576 QCURVE",
"415 572 OFFCURVE",
"397 572 QCURVE SMOOTH",
"386 572 OFFCURVE",
"370 578 QCURVE SMOOTH",
"362 581 OFFCURVE",
"318 596 OFFCURVE",
"273 607 OFFCURVE",
"241 607 QCURVE SMOOTH",
"182 607 OFFCURVE",
"98 562 OFFCURVE",
"56 485 OFFCURVE",
"56 441 QCURVE SMOOTH",
"57 339 OFFCURVE",
"166 295 QCURVE SMOOTH",
"268 254 LINE SMOOTH",
"367 214 OFFCURVE",
"367 138 QCURVE SMOOTH",
"367 85 OFFCURVE",
"307 18 OFFCURVE",
"257 18 QCURVE SMOOTH",
"96 18 OFFCURVE",
"73 203 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
24 1 2 4 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
8 1 7 3 6 3 7 6 126 0 2 0 3 7 2 3 101 0 4 4 1 95 0 1 1 25 75 0 6 6 21 75 0 0 0 5 95 0 5 5 26 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 45 values pushed */
8 1 7 3 6 3 7 6 126 0 6 0 3 6 0 124 0 2 0 3 7 2 3 101 0 4 4 1 95 0 1 1 25 75 0 0 0 5 95 0 5 5 26 5 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 59 0 59 35 44 34 22 36 44 33 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 494;
},
{
anchors = (
{
name = bottom;
position = "{259, 0}";
},
{
name = top;
position = "{258, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"41 200 LINE",
"49 160 OFFCURVE",
"49 90 QCURVE SMOOTH",
"49 34 OFFCURVE",
"45 13 QCURVE",
"49 15 OFFCURVE",
"74 18 OFFCURVE",
"83 18 QCURVE SMOOTH",
"104 18 OFFCURVE",
"161 3 QCURVE SMOOTH",
"212 -10 OFFCURVE",
"256 -10 QCURVE SMOOTH",
"326 -10 OFFCURVE",
"424 41 OFFCURVE",
"474 128 OFFCURVE",
"474 182 QCURVE SMOOTH",
"474 245 OFFCURVE",
"407 322 OFFCURVE",
"329 356 QCURVE SMOOTH",
"244 392 LINE SMOOTH",
"199 410 OFFCURVE",
"158 455 OFFCURVE",
"158 483 QCURVE SMOOTH",
"158 523 OFFCURVE",
"220 573 OFFCURVE",
"268 573 QCURVE SMOOTH",
"329 573 OFFCURVE",
"414 496 OFFCURVE",
"414 434 QCURVE",
"448 434 LINE",
"444 445 OFFCURVE",
"442 471 OFFCURVE",
"442 500 QCURVE SMOOTH",
"442 552 OFFCURVE",
"445 576 QCURVE",
"434 572 OFFCURVE",
"417 572 QCURVE SMOOTH",
"404 572 OFFCURVE",
"387 578 QCURVE",
"377 581 OFFCURVE",
"331 597 OFFCURVE",
"285 607 OFFCURVE",
"252 607 QCURVE SMOOTH",
"186 607 OFFCURVE",
"94 559 OFFCURVE",
"48 479 OFFCURVE",
"48 431 QCURVE SMOOTH",
"48 323 OFFCURVE",
"162 276 QCURVE SMOOTH",
"260 235 LINE SMOOTH",
"355 198 OFFCURVE",
"355 128 QCURVE SMOOTH",
"355 82 OFFCURVE",
"296 26 OFFCURVE",
"245 26 QCURVE SMOOTH",
"176 26 OFFCURVE",
"83 116 OFFCURVE",
"73 203 QCURVE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"41 200 LINE",
"49 160 OFFCURVE",
"49 90 QCURVE SMOOTH",
"49 34 OFFCURVE",
"45 13 QCURVE",
"49 15 OFFCURVE",
"74 18 OFFCURVE",
"83 18 QCURVE SMOOTH",
"104 18 OFFCURVE",
"161 3 QCURVE SMOOTH",
"212 -10 OFFCURVE",
"256 -10 QCURVE SMOOTH",
"326 -10 OFFCURVE",
"424 41 OFFCURVE",
"474 128 OFFCURVE",
"474 182 QCURVE SMOOTH",
"474 245 OFFCURVE",
"407 322 OFFCURVE",
"329 356 QCURVE SMOOTH",
"244 392 LINE SMOOTH",
"199 410 OFFCURVE",
"158 455 OFFCURVE",
"158 483 QCURVE SMOOTH",
"158 523 OFFCURVE",
"220 573 OFFCURVE",
"268 573 QCURVE SMOOTH",
"329 573 OFFCURVE",
"414 496 OFFCURVE",
"414 434 QCURVE",
"448 434 LINE",
"444 445 OFFCURVE",
"442 471 OFFCURVE",
"442 500 QCURVE SMOOTH",
"442 552 OFFCURVE",
"445 576 QCURVE",
"434 572 OFFCURVE",
"417 572 QCURVE SMOOTH",
"404 572 OFFCURVE",
"387 578 QCURVE",
"377 581 OFFCURVE",
"331 597 OFFCURVE",
"285 607 OFFCURVE",
"252 607 QCURVE SMOOTH",
"186 607 OFFCURVE",
"94 559 OFFCURVE",
"48 479 OFFCURVE",
"48 431 QCURVE SMOOTH",
"48 323 OFFCURVE",
"162 276 QCURVE SMOOTH",
"260 235 LINE SMOOTH",
"355 198 OFFCURVE",
"355 128 QCURVE SMOOTH",
"355 82 OFFCURVE",
"296 26 OFFCURVE",
"245 26 QCURVE SMOOTH",
"100 26 OFFCURVE",
"73 203 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
23 1 4 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 2 0 3 0 2 3 101 0 4 4 1 95 0 1 1 25 75 0 6 6 21 75 0 0 0 5 95 0 5 5 26 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 6 0 5 0 6 5 126 0 2 0 3 0 2 3 101 0 4 4 1 95 0 1 1 25 75 0 0 0 5 95 0 5 5 26 5 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
34 44 34 22 36 42 34 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 498;
}
);
note = S;
unicode = 0053;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 355, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
63 1 7 9 14 1 1 2 13 1 0 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 4 8 3 8 4 3 126 0 7 0 8 4 7 8 101 0 1 0 0 1 0 99 0 9 9 6 95 0 6 6 25 75 0 3 3 21 75 0 5 5 2 95 10 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 52 values pushed */
0 4 8 3 8 4 3 126 0 3 5 8 3 5 124 0 7 0 8 4 7 8 101 0 1 0 0 1 0 99 0 9 9 6 95 0 6 6 25 75 0 5 5 2 95 10 1 2 2 26 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
86 85 73 71 22 36 44 33 22 34 26 35 42 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 494;
},
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 383, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
63 1 8 5 14 1 1 2 13 1 0 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 6 0 7 4 6 7 101 0 1 0 0 1 0 99 0 8 8 5 95 0 5 5 25 75 0 3 3 21 75 0 4 4 2 95 9 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 45 values pushed */
0 3 4 2 4 3 2 126 0 6 0 7 4 6 7 101 0 1 0 0 1 0 99 0 8 8 5 95 0 5 5 25 75 0 4 4 2 95 9 1 2 2 26 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
85 84 34 22 36 42 42 34 26 35 42 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 498;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
unicode = 015C;
},
{
glyphname = Scommaaccent;
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 329, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
note = Scommaaccent;
unicode = 0218;
},
{
glyphname = Sdotbelow;
layers = (
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 423, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 462, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
unicode = 1E62;
},
{
glyphname = Germandbls;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"201 0 LINE",
"201 556 LINE",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"478 569 LINE",
"480 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"91 569 LINE SMOOTH",
"108 569 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"90 27 QCURVE",
"50 30 LINE"
);
},
{
closed = 1;
nodes = (
"270 340 LINE",
"270 319 LINE",
"381 315 OFFCURVE",
"463 244 OFFCURVE",
"463 179 QCURVE SMOOTH",
"463 94 OFFCURVE",
"412 17 OFFCURVE",
"370 17 QCURVE SMOOTH",
"331 17 OFFCURVE",
"311 49 OFFCURVE",
"311 77 QCURVE SMOOTH",
"311 91 OFFCURVE",
"316 102 QCURVE",
"321 114 OFFCURVE",
"321 126 QCURVE SMOOTH",
"321 143 OFFCURVE",
"296 165 OFFCURVE",
"274 165 QCURVE SMOOTH",
"250 165 OFFCURVE",
"225 138 OFFCURVE",
"225 115 QCURVE SMOOTH",
"225 61 OFFCURVE",
"305 -10 OFFCURVE",
"378 -10 QCURVE SMOOTH",
"453 -10 OFFCURVE",
"552 102 OFFCURVE",
"552 177 QCURVE SMOOTH",
"552 337 OFFCURVE",
"328 340 QCURVE"
);
},
{
closed = 1;
nodes = (
"300 325 LINE",
"504 569 LINE",
"480 597 LINE",
"270 340 LINE"
);
}
);
width = 582;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"231 0 LINE",
"231 549 LINE",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"539 562 LINE",
"554 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"76 562 LINE SMOOTH",
"93 562 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"75 35 QCURVE",
"39 38 LINE"
);
},
{
closed = 1;
nodes = (
"327 340 LINE",
"327 308 LINE",
"442 299 OFFCURVE",
"519 226 OFFCURVE",
"519 161 QCURVE SMOOTH",
"519 116 OFFCURVE",
"477 25 OFFCURVE",
"430 25 QCURVE SMOOTH",
"407 25 OFFCURVE",
"378 52 OFFCURVE",
"378 78 QCURVE SMOOTH",
"378 90 OFFCURVE",
"383 103 QCURVE",
"387 119 OFFCURVE",
"387 126 QCURVE SMOOTH",
"387 149 OFFCURVE",
"354 177 OFFCURVE",
"327 177 QCURVE SMOOTH",
"294 177 OFFCURVE",
"258 140 OFFCURVE",
"258 111 QCURVE SMOOTH",
"258 46 OFFCURVE",
"358 -10 OFFCURVE",
"436 -10 QCURVE SMOOTH",
"547 -10 OFFCURVE",
"653 98 OFFCURVE",
"653 167 QCURVE SMOOTH",
"653 340 OFFCURVE",
"416 340 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"369 325 LINE",
"583 562 LINE",
"554 597 LINE",
"327 340 LINE"
);
}
);
width = 668;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"450 -10 OFFCURVE",
"593 147 OFFCURVE",
"593 299 QCURVE SMOOTH",
"593 606 OFFCURVE",
"318 606 QCURVE SMOOTH",
"239 606 OFFCURVE",
"106 529 OFFCURVE",
"78 462 QCURVE",
"110 438 LINE",
"132 490 OFFCURVE",
"229 560 OFFCURVE",
"299 560 QCURVE SMOOTH",
"397 560 OFFCURVE",
"492 433 OFFCURVE",
"492 295 QCURVE",
"62 295 LINE",
"62 255 LINE",
"65 131 OFFCURVE",
"194 -10 OFFCURVE",
"311 -10 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 17 OFFCURVE",
"161 117 OFFCURVE",
"161 217 QCURVE SMOOTH",
"161 244 OFFCURVE",
"175 263 OFFCURVE",
"189 263 QCURVE SMOOTH",
"491 263 LINE",
"491 155 OFFCURVE",
"399 17 OFFCURVE",
"315 17 QCURVE SMOOTH"
);
}
);
width = 638;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"459 -10 OFFCURVE",
"628 149 OFFCURVE",
"628 300 QCURVE SMOOTH",
"628 606 OFFCURVE",
"341 606 QCURVE SMOOTH",
"253 606 OFFCURVE",
"108 531 OFFCURVE",
"76 464 QCURVE",
"103 437 LINE",
"135 484 OFFCURVE",
"230 549 OFFCURVE",
"305 549 QCURVE SMOOTH",
"404 549 OFFCURVE",
"477 435 OFFCURVE",
"477 304 QCURVE",
"50 304 LINE",
"50 253 LINE",
"52 127 OFFCURVE",
"184 -10 OFFCURVE",
"310 -10 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 25 OFFCURVE",
"190 127 OFFCURVE",
"190 213 QCURVE SMOOTH",
"190 239 OFFCURVE",
"204 259 OFFCURVE",
"218 259 QCURVE SMOOTH",
"476 259 LINE",
"476 160 OFFCURVE",
"411 25 OFFCURVE",
"323 25 QCURVE SMOOTH"
);
}
);
width = 658;
}
);
unicode = 018F;
},
{
glyphname = T;
layers = (
{
anchors = (
{
name = bottom;
position = "{265, 0}";
},
{
name = center;
position = "{265, 303}";
},
{
name = top;
position = "{265, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"15 444 LINE",
"41 444 LINE",
"41 509 OFFCURVE",
"99 570 OFFCURVE",
"165 570 QCURVE SMOOTH",
"206 570 LINE SMOOTH",
"218 570 OFFCURVE",
"218 558 QCURVE SMOOTH",
"218 52 LINE SMOOTH",
"218 42 OFFCURVE",
"208 27 OFFCURVE",
"199 27 QCURVE",
"145 29 LINE",
"145 0 LINE",
"384 0 LINE",
"384 29 LINE",
"331 27 LINE",
"311 27 OFFCURVE",
"311 49 QCURVE SMOOTH",
"311 559 LINE",
"313 570 OFFCURVE",
"323 570 QCURVE SMOOTH",
"365 570 LINE SMOOTH",
"431 570 OFFCURVE",
"488 509 OFFCURVE",
"488 444 QCURVE",
"514 444 LINE",
"514 600 LINE",
"506 598 OFFCURVE",
"474 598 QCURVE SMOOTH",
"55 598 LINE SMOOTH",
"29 598 OFFCURVE",
"15 600 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
13 1 1 2 1 74 5 0 2 0 72 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
7 1 1 2 3 2 1 112 6 1 2 2 0 93 0 0 0 17 75 5 1 3 3 4 93 0 4 4 21 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
7 1 1 2 3 2 1 3 126 6 1 2 2 0 93 0 0 0 17 75 5 1 3 3 4 93 0 4 4 21 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
18 52 33 17 35 50 18 49 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 529;
},
{
anchors = (
{
name = bottom;
position = "{273, 0}";
},
{
name = center;
position = "{273, 303}";
},
{
name = top;
position = "{273, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"15 444 LINE",
"49 444 LINE",
"49 505 OFFCURVE",
"107 563 OFFCURVE",
"173 563 QCURVE SMOOTH",
"191 563 LINE SMOOTH",
"203 563 OFFCURVE",
"203 551 QCURVE SMOOTH",
"203 60 LINE SMOOTH",
"203 50 OFFCURVE",
"193 35 OFFCURVE",
"184 35 QCURVE",
"130 37 LINE",
"130 0 LINE",
"414 0 LINE",
"414 37 LINE",
"361 35 LINE",
"341 35 OFFCURVE",
"341 57 QCURVE SMOOTH",
"341 552 LINE",
"343 563 OFFCURVE",
"353 563 QCURVE SMOOTH",
"373 563 LINE SMOOTH",
"439 563 OFFCURVE",
"496 505 OFFCURVE",
"496 444 QCURVE",
"529 444 LINE",
"529 600 LINE",
"519 598 OFFCURVE",
"482 598 QCURVE SMOOTH",
"63 598 LINE SMOOTH",
"33 598 OFFCURVE",
"15 600 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
13 1 1 2 1 74 5 0 2 0 72 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
7 1 1 2 3 2 1 112 6 1 2 2 0 93 0 0 0 17 75 5 1 3 3 4 93 0 4 4 21 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
7 1 1 2 3 2 1 3 126 6 1 2 2 0 93 0 0 0 17 75 5 1 3 3 4 93 0 4 4 21 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
18 52 33 17 35 50 18 49 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 544;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = Tbar;
layers = (
{
components = (
{
name = T;
},
{
name = baraccentmediumcomb;
transform = "{1, 0, 0, 1, 539, 14}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 529;
},
{
components = (
{
name = T;
},
{
name = baraccentmediumcomb;
transform = "{1, 0, 0, 1, 547, 14}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 544;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 529;
},
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 464, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 544;
}
);
leftKerningGroup = T;
note = Tcaron;
rightKerningGroup = T;
unicode = 0164;
},
{
glyphname = Tcedilla;
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 369, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 529;
},
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 544;
}
);
leftKerningGroup = T;
note = uni0162;
rightKerningGroup = T;
unicode = 0162;
},
{
glyphname = Tcommaaccent;
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 343, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 529;
},
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 544;
}
);
leftKerningGroup = T;
note = uni021A;
rightKerningGroup = T;
unicode = 021A;
},
{
glyphname = Tdotbelow;
layers = (
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 437, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 529;
},
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 544;
}
);
unicode = 1E6C;
},
{
glyphname = U;
layers = (
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = ogonek;
position = "{419, 0}";
},
{
name = top;
position = "{356, 597}";
},
{
name = topright;
position = "{493, 618}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"35 567 LINE",
"73 569 LINE",
"81 570 OFFCURVE",
"92 557 OFFCURVE",
"92 548 QCURVE SMOOTH",
"92 199 LINE SMOOTH",
"92 97 OFFCURVE",
"222 -10 OFFCURVE",
"344 -10 QCURVE SMOOTH",
"408 -10 OFFCURVE",
"509 41 OFFCURVE",
"567 132 OFFCURVE",
"567 189 QCURVE SMOOTH",
"567 549 LINE SMOOTH",
"567 557 OFFCURVE",
"577 569 OFFCURVE",
"585 569 QCURVE SMOOTH",
"587 569 LINE",
"626 567 LINE",
"626 597 LINE",
"465 597 LINE",
"465 567 LINE",
"514 569 LINE",
"522 570 OFFCURVE",
"532 558 OFFCURVE",
"532 548 QCURVE SMOOTH",
"532 198 LINE SMOOTH",
"532 148 OFFCURVE",
"488 67 OFFCURVE",
"410 21 OFFCURVE",
"362 21 QCURVE SMOOTH",
"278 21 OFFCURVE",
"185 115 OFFCURVE",
"185 199 QCURVE SMOOTH",
"185 549 LINE SMOOTH",
"185 557 OFFCURVE",
"195 569 OFFCURVE",
"203 569 QCURVE SMOOTH",
"205 569 LINE",
"254 567 LINE",
"254 597 LINE",
"35 597 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 567 LINE",
"73 569 LINE",
"81 570 OFFCURVE",
"92 557 OFFCURVE",
"92 548 QCURVE SMOOTH",
"92 202 LINE SMOOTH",
"92 -10 OFFCURVE",
"344 -10 QCURVE SMOOTH",
"443 -10 OFFCURVE",
"567 106 OFFCURVE",
"567 189 QCURVE SMOOTH",
"567 549 LINE SMOOTH",
"567 557 OFFCURVE",
"577 569 OFFCURVE",
"585 569 QCURVE SMOOTH",
"587 569 LINE",
"626 567 LINE",
"626 597 LINE",
"465 597 LINE",
"465 567 LINE",
"514 569 LINE",
"522 570 OFFCURVE",
"532 558 OFFCURVE",
"532 548 QCURVE SMOOTH",
"532 198 LINE SMOOTH",
"532 123 OFFCURVE",
"436 21 OFFCURVE",
"362 21 QCURVE SMOOTH",
"278 21 OFFCURVE",
"185 115 OFFCURVE",
"185 199 QCURVE SMOOTH",
"185 549 LINE SMOOTH",
"185 557 OFFCURVE",
"195 569 OFFCURVE",
"203 569 QCURVE SMOOTH",
"205 569 LINE",
"254 567 LINE",
"254 597 LINE",
"35 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
7 5 3 3 1 1 0 93 4 1 0 0 17 75 0 2 2 6 95 0 6 6 26 6 76 22 38 49 17 23 37 49 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 651;
},
{
anchors = (
{
name = bottom;
position = "{375, 0}";
},
{
name = ogonek;
position = "{440, 0}";
},
{
name = top;
position = "{372, 597}";
},
{
name = topright;
position = "{483, 620}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 560 LINE",
"73 562 LINE",
"81 563 OFFCURVE",
"92 550 OFFCURVE",
"92 541 QCURVE SMOOTH",
"92 199 LINE SMOOTH",
"92 -10 OFFCURVE",
"358 -10 QCURVE SMOOTH",
"467 -10 OFFCURVE",
"575 102 OFFCURVE",
"575 203 QCURVE SMOOTH",
"575 542 LINE SMOOTH",
"575 550 OFFCURVE",
"585 562 OFFCURVE",
"593 562 QCURVE SMOOTH",
"595 562 LINE",
"634 560 LINE",
"634 597 LINE",
"465 597 LINE",
"465 560 LINE",
"514 562 LINE",
"522 563 OFFCURVE",
"532 551 OFFCURVE",
"532 541 QCURVE SMOOTH",
"532 203 LINE SMOOTH",
"532 123 OFFCURVE",
"461 31 OFFCURVE",
"384 31 QCURVE SMOOTH",
"309 31 OFFCURVE",
"230 114 OFFCURVE",
"230 199 QCURVE SMOOTH",
"230 542 LINE SMOOTH",
"230 550 OFFCURVE",
"240 562 OFFCURVE",
"248 562 QCURVE SMOOTH",
"250 562 LINE",
"299 560 LINE",
"299 597 LINE",
"35 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
7 5 3 3 1 1 0 93 4 1 0 0 17 75 0 2 2 6 95 0 6 6 26 6 76 21 37 49 17 22 37 49 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 659;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = U;
unicode = 0055;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 523, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 539, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Uacute;
rightKerningGroup = U;
unicode = 00DA;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 537, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 543, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 016C;
},
{
glyphname = Ucaron;
layers = (
{
components = (
{
name = U;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 547, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 563, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 01D3;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 547, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 563, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Ucircumflex;
rightKerningGroup = U;
unicode = 00DB;
},
{
glyphname = Udblgrave;
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 468, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 0214;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 546, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 581, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Udieresis;
rightKerningGroup = U;
unicode = 00DC;
},
{
glyphname = Udieresisacute;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb_acutecomb.case;
transform = "{1, 0, 0, 1, 546, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb_acutecomb.case;
transform = "{1, 0, 0, 1, 581, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 01D7;
},
{
glyphname = Udieresiscaron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb_caroncomb.case;
transform = "{1, 0, 0, 1, 546, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb_caroncomb.case;
transform = "{1, 0, 0, 1, 581, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 01D9;
},
{
glyphname = Udieresisgrave;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb_gravecomb.case;
transform = "{1, 0, 0, 1, 539, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb_gravecomb.case;
transform = "{1, 0, 0, 1, 583, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 01DB;
},
{
glyphname = Udieresismacron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb_macroncomb.case;
transform = "{1, 0, 0, 1, 546, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb_macroncomb.case;
transform = "{1, 0, 0, 1, 581, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 01D5;
},
{
glyphname = Udotbelow;
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 531, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 578, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 1EE4;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 469, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Ugrave;
rightKerningGroup = U;
unicode = 00D9;
},
{
glyphname = Uhookabove;
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 492, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
layers = (
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = top;
position = "{356, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 567 LINE",
"73 569 LINE",
"81 570 OFFCURVE",
"92 557 OFFCURVE",
"92 548 QCURVE SMOOTH",
"92 202 LINE SMOOTH",
"92 -10 OFFCURVE",
"344 -10 QCURVE SMOOTH",
"443 -10 OFFCURVE",
"567 106 OFFCURVE",
"567 189 QCURVE SMOOTH",
"567 597 LINE",
"465 597 LINE",
"465 567 LINE",
"514 569 LINE",
"522 570 OFFCURVE",
"532 558 OFFCURVE",
"532 548 QCURVE SMOOTH",
"532 198 LINE SMOOTH",
"532 123 OFFCURVE",
"436 21 OFFCURVE",
"362 21 QCURVE SMOOTH",
"278 21 OFFCURVE",
"185 115 OFFCURVE",
"185 199 QCURVE SMOOTH",
"185 549 LINE SMOOTH",
"185 557 OFFCURVE",
"195 569 OFFCURVE",
"203 569 QCURVE SMOOTH",
"205 569 LINE",
"254 567 LINE",
"254 597 LINE",
"35 597 LINE"
);
},
{
closed = 1;
nodes = (
"566 566 LINE",
"703 568 OFFCURVE",
"703 679 QCURVE SMOOTH",
"703 702 OFFCURVE",
"675 732 OFFCURVE",
"652 732 QCURVE SMOOTH",
"633 732 OFFCURVE",
"606 709 OFFCURVE",
"606 688 QCURVE SMOOTH",
"606 667 OFFCURVE",
"648 653 OFFCURVE",
"648 636 QCURVE SMOOTH",
"648 597 OFFCURVE",
"556 597 QCURVE"
);
}
);
width = 681;
},
{
anchors = (
{
name = bottom;
position = "{379, 0}";
},
{
name = top;
position = "{376, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 560 LINE",
"73 562 LINE",
"81 563 OFFCURVE",
"92 550 OFFCURVE",
"92 541 QCURVE SMOOTH",
"92 199 LINE SMOOTH",
"92 -10 OFFCURVE",
"358 -10 QCURVE SMOOTH",
"467 -10 OFFCURVE",
"575 102 OFFCURVE",
"575 203 QCURVE SMOOTH",
"575 597 LINE",
"465 597 LINE",
"465 560 LINE",
"514 562 LINE",
"522 563 OFFCURVE",
"532 551 OFFCURVE",
"532 541 QCURVE SMOOTH",
"532 203 LINE SMOOTH",
"532 123 OFFCURVE",
"461 31 OFFCURVE",
"384 31 QCURVE SMOOTH",
"309 31 OFFCURVE",
"230 114 OFFCURVE",
"230 199 QCURVE SMOOTH",
"230 542 LINE SMOOTH",
"230 550 OFFCURVE",
"240 562 OFFCURVE",
"248 562 QCURVE SMOOTH",
"250 562 LINE",
"299 560 LINE",
"299 597 LINE",
"35 597 LINE"
);
},
{
closed = 1;
nodes = (
"570 558 LINE",
"714 560 OFFCURVE",
"714 691 QCURVE SMOOTH",
"714 718 OFFCURVE",
"682 753 OFFCURVE",
"655 753 QCURVE SMOOTH",
"633 753 OFFCURVE",
"600 727 OFFCURVE",
"600 702 QCURVE SMOOTH",
"600 677 OFFCURVE",
"639 660 OFFCURVE",
"639 641 QCURVE SMOOTH",
"639 597 OFFCURVE",
"558 597 QCURVE"
);
}
);
width = 689;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 523, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 681;
},
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 543, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 689;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 531, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 681;
},
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 582, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 689;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 469, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 681;
},
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 489, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 689;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 681;
},
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 496, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 689;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 681;
},
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 562, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 689;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 592, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 621, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Uhungarumlaut;
rightKerningGroup = U;
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 527, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 543, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 0216;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 511, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 527, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Umacron;
rightKerningGroup = U;
unicode = 016A;
},
{
glyphname = Uogonek;
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 570, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
27 1 3 7 19 18 2 1 3 2 74 0 1 0 2 1 2 99 8 6 4 3 0 0 5 93 10 9 2 5 5 17 75 0 7 7 3 95 0 3 3 26 3 76 0 0 0 59 0 59 23 37 49 17 22 37 36 43 49 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 651;
},
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 591, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
27 1 3 7 19 18 2 1 3 2 74 0 1 0 2 1 2 99 8 6 4 3 0 0 5 93 10 9 2 5 5 17 75 0 7 7 3 95 0 3 3 26 3 76 0 0 0 57 0 57 22 37 49 17 21 37 36 43 49 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 659;
}
);
leftKerningGroup = U;
note = Uogonek;
unicode = 0172;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 475, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 491, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
leftKerningGroup = U;
note = Uring;
rightKerningGroup = U;
unicode = 016E;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 651;
},
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 558, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 659;
}
);
unicode = 0168;
},
{
glyphname = V;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"447 597 LINE",
"447 567 LINE",
"498 569 LINE",
"510 569 OFFCURVE",
"510 558 QCURVE SMOOTH",
"510 552 OFFCURVE",
"503 534 QCURVE SMOOTH",
"329 129 LINE",
"148 545 LINE",
"146 551 OFFCURVE",
"146 554 QCURVE SMOOTH",
"146 560 OFFCURVE",
"152 569 OFFCURVE",
"157 569 QCURVE",
"210 567 LINE",
"210 597 LINE",
"-5 597 LINE",
"-5 567 LINE",
"23 569 LINE",
"35 569 OFFCURVE",
"46 546 QCURVE",
"283 -4 LINE",
"309 -4 LINE",
"547 546 LINE SMOOTH",
"553 560 OFFCURVE",
"560 570 OFFCURVE",
"568 569 QCURVE",
"604 567 LINE",
"604 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
21 11 2 1 0 1 74 5 4 2 3 0 0 3 93 7 6 2 3 3 17 75 0 1 1 18 1 76 0 0 0 28 0 28 42 17 18 18 20 17 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 584;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"466 597 LINE",
"466 560 LINE",
"514 562 LINE",
"526 562 OFFCURVE",
"526 551 QCURVE SMOOTH",
"526 542 OFFCURVE",
"519 527 QCURVE SMOOTH",
"359 159 LINE",
"195 538 LINE",
"193 544 OFFCURVE",
"193 547 QCURVE SMOOTH",
"193 553 OFFCURVE",
"199 562 OFFCURVE",
"204 562 QCURVE",
"254 560 LINE",
"254 597 LINE",
"-2 597 LINE",
"-2 560 LINE",
"26 562 LINE",
"38 562 OFFCURVE",
"49 539 QCURVE",
"283 -4 LINE",
"335 -4 LINE",
"570 539 LINE SMOOTH",
"576 553 OFFCURVE",
"583 563 OFFCURVE",
"591 562 QCURVE",
"627 560 LINE",
"627 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
21 11 2 1 0 1 74 5 4 2 3 0 0 3 93 7 6 2 3 3 17 75 0 1 1 18 1 76 0 0 0 28 0 28 42 17 18 18 20 17 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 607;
}
);
leftKerningGroup = V;
note = V;
rightKerningGroup = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
anchors = (
{
name = top;
position = "{467, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"751 597 LINE",
"751 567 LINE",
"803 569 LINE",
"809 570 OFFCURVE",
"816 563 OFFCURVE",
"816 557 QCURVE",
"814 549 LINE",
"684 143 LINE",
"521 547 LINE SMOOTH",
"518 554 OFFCURVE",
"523 569 OFFCURVE",
"531 569 QCURVE",
"573 567 LINE",
"573 597 LINE",
"365 597 LINE",
"365 567 LINE",
"406 569 LINE",
"414 570 OFFCURVE",
"423 564 OFFCURVE",
"427 556 QCURVE",
"297 155 LINE",
"148 547 LINE",
"145 558 LINE",
"145 564 OFFCURVE",
"151 569 OFFCURVE",
"158 569 QCURVE",
"211 567 LINE",
"211 597 LINE",
"-5 597 LINE",
"-5 567 LINE",
"25 569 LINE",
"39 569 OFFCURVE",
"46 547 QCURVE",
"257 -10 LINE",
"276 -10 LINE",
"446 509 LINE",
"652 -10 LINE",
"668 -10 LINE",
"849 548 LINE",
"853 561 OFFCURVE",
"865 570 OFFCURVE",
"874 569 QCURVE",
"904 567 LINE",
"904 597 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"751 597 LINE",
"751 567 LINE",
"803 569 LINE",
"809 570 OFFCURVE",
"816 563 OFFCURVE",
"816 557 QCURVE",
"814 549 LINE",
"684 143 LINE",
"501 597 LINE SMOOTH",
"440 597 LINE",
"297 155 LINE",
"148 547 LINE",
"145 558 LINE",
"145 564 OFFCURVE",
"151 569 OFFCURVE",
"158 569 QCURVE",
"211 567 LINE",
"211 597 LINE",
"-5 597 LINE",
"-5 567 LINE",
"25 569 LINE",
"39 569 OFFCURVE",
"46 547 QCURVE",
"257 -10 LINE",
"276 -10 LINE",
"446 509 LINE",
"652 -10 LINE",
"668 -10 LINE",
"849 548 LINE",
"853 561 OFFCURVE",
"865 570 OFFCURVE",
"874 569 QCURVE",
"904 567 LINE",
"904 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
36 23 8 3 1 0 1 74 9 8 6 5 3 5 0 0 4 93 11 10 7 3 4 4 17 75 2 1 1 1 18 1 76 0 0 0 43 0 43 42 40 17 17 25 17 17 34 18 20 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 884;
},
{
anchors = (
{
name = top;
position = "{488, 597}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"771 597 LINE",
"771 560 LINE",
"823 562 LINE",
"829 563 OFFCURVE",
"836 556 OFFCURVE",
"836 550 QCURVE",
"834 542 LINE",
"705 159 LINE",
"565 540 LINE",
"562 547 OFFCURVE",
"567 562 OFFCURVE",
"575 562 QCURVE",
"617 560 LINE",
"617 597 LINE",
"370 597 LINE",
"370 560 LINE",
"411 562 LINE",
"422 562 OFFCURVE",
"431 548 OFFCURVE",
"439 526 QCURVE",
"321 182 LINE",
"192 540 LINE",
"189 551 LINE",
"189 557 OFFCURVE",
"195 562 OFFCURVE",
"202 562 QCURVE",
"252 560 LINE",
"252 597 LINE",
"-3 597 LINE",
"-3 560 LINE",
"27 562 LINE",
"41 562 OFFCURVE",
"48 540 QCURVE",
"250 -10 LINE",
"299 -10 LINE",
"461 468 LINE",
"645 -10 LINE",
"691 -10 LINE",
"876 541 LINE SMOOTH",
"879 549 OFFCURVE",
"892 563 OFFCURVE",
"901 562 QCURVE",
"931 560 LINE",
"931 597 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"771 597 LINE",
"771 560 LINE",
"823 562 LINE",
"829 563 OFFCURVE",
"836 556 OFFCURVE",
"836 550 QCURVE",
"834 542 LINE",
"705 159 LINE",
"544 597 LINE",
"463 597 LINE",
"321 182 LINE",
"192 540 LINE",
"189 551 LINE",
"189 557 OFFCURVE",
"195 562 OFFCURVE",
"202 562 QCURVE",
"252 560 LINE",
"252 597 LINE",
"-3 597 LINE",
"-3 560 LINE",
"27 562 LINE",
"41 562 OFFCURVE",
"48 540 QCURVE",
"250 -10 LINE",
"299 -10 LINE",
"461 468 LINE",
"645 -10 LINE",
"691 -10 LINE",
"876 541 LINE SMOOTH",
"879 549 OFFCURVE",
"892 563 OFFCURVE",
"901 562 QCURVE",
"931 560 LINE",
"931 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
37 24 23 8 4 1 0 1 74 9 8 6 5 3 5 0 0 4 93 11 10 7 3 4 4 17 75 2 1 1 1 18 1 76 0 0 0 44 0 44 43 41 17 17 26 17 17 34 18 20 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 911;
}
);
leftKerningGroup = V;
note = W;
rightKerningGroup = V;
unicode = 0057;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 634, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 884;
},
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 655, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 911;
}
);
leftKerningGroup = V;
note = Wacute;
rightKerningGroup = V;
unicode = 1E82;
},
{
glyphname = Wcircumflex;
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 658, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 884;
},
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 679, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 911;
}
);
leftKerningGroup = V;
note = Wcircumflex;
rightKerningGroup = V;
unicode = 0174;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 657, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 884;
},
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 697, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 911;
}
);
leftKerningGroup = V;
note = Wdieresis;
rightKerningGroup = V;
unicode = 1E84;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 580, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 884;
},
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 601, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 911;
}
);
leftKerningGroup = V;
note = Wgrave;
rightKerningGroup = V;
unicode = 1E80;
},
{
glyphname = X;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"539 27 LINE SMOOTH",
"519 26 OFFCURVE",
"509 44 QCURVE SMOOTH",
"340 328 LINE",
"478 549 LINE",
"492 569 OFFCURVE",
"509 569 QCURVE",
"540 567 LINE",
"540 597 LINE",
"388 597 LINE",
"388 567 LINE",
"431 569 LINE SMOOTH",
"444 570 OFFCURVE",
"444 561 QCURVE SMOOTH",
"444 556 OFFCURVE",
"439 549 QCURVE",
"320 361 LINE",
"211 548 LINE SMOOTH",
"208 553 OFFCURVE",
"208 557 QCURVE SMOOTH",
"208 562 OFFCURVE",
"216 569 OFFCURVE",
"223 569 QCURVE SMOOTH",
"225 569 LINE",
"267 567 LINE",
"267 597 LINE",
"39 597 LINE",
"39 567 LINE",
"71 569 LINE",
"93 569 OFFCURVE",
"103 550 QCURVE",
"254 296 LINE",
"100 50 LINE SMOOTH",
"87 28 OFFCURVE",
"66 28 QCURVE",
"30 30 LINE",
"30 0 LINE",
"189 0 LINE",
"189 30 LINE",
"144 27 LINE",
"140 26 OFFCURVE",
"135 32 OFFCURVE",
"135 36 QCURVE SMOOTH",
"135 41 OFFCURVE",
"138 47 QCURVE",
"273 262 LINE",
"399 50 LINE",
"404 44 OFFCURVE",
"404 36 QCURVE SMOOTH",
"404 27 OFFCURVE",
"394 27 QCURVE SMOOTH",
"392 27 LINE",
"343 30 LINE",
"343 0 LINE",
"578 0 LINE",
"578 30 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
52 39 24 17 10 7 0 7 1 4 1 74 9 7 6 3 4 4 5 93 8 1 5 5 17 75 10 3 2 1 1 0 93 2 1 0 0 21 0 76 55 54 50 48 17 26 49 17 36 33 28 49 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 566;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"562 34 LINE",
"543 31 OFFCURVE",
"532 51 QCURVE",
"364 330 LINE",
"496 542 LINE SMOOTH",
"508 562 OFFCURVE",
"527 562 QCURVE",
"562 560 LINE",
"562 597 LINE",
"399 597 LINE",
"399 560 LINE",
"442 562 LINE SMOOTH",
"455 563 OFFCURVE",
"455 554 QCURVE SMOOTH",
"455 549 OFFCURVE",
"450 542 QCURVE",
"342 372 LINE",
"246 541 LINE SMOOTH",
"243 546 OFFCURVE",
"243 550 QCURVE SMOOTH",
"243 555 OFFCURVE",
"251 562 OFFCURVE",
"258 562 QCURVE SMOOTH",
"260 562 LINE",
"302 560 LINE",
"302 597 LINE",
"32 597 LINE",
"32 560 LINE",
"57 562 LINE",
"78 562 OFFCURVE",
"89 543 QCURVE SMOOTH",
"237 293 LINE",
"90 58 LINE SMOOTH",
"77 36 OFFCURVE",
"56 36 QCURVE",
"20 38 LINE",
"20 0 LINE",
"186 0 LINE",
"186 38 LINE",
"141 35 LINE",
"137 34 OFFCURVE",
"132 40 OFFCURVE",
"132 44 QCURVE SMOOTH",
"132 49 OFFCURVE",
"135 55 QCURVE",
"258 250 LINE",
"373 57 LINE SMOOTH",
"378 49 OFFCURVE",
"378 42 QCURVE SMOOTH",
"378 34 OFFCURVE",
"368 34 QCURVE SMOOTH",
"366 34 LINE",
"317 37 LINE",
"317 0 LINE",
"593 0 LINE",
"593 37 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
52 39 28 24 17 10 0 7 1 4 1 74 9 7 6 3 4 4 5 93 8 1 5 5 17 75 3 1 1 1 0 93 2 1 0 0 21 0 76 50 48 17 26 49 18 20 33 28 49 17 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 585;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
anchors = (
{
name = bottom;
position = "{267, 0}";
},
{
name = top;
position = "{266, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"365 597 LINE",
"365 567 LINE",
"417 569 LINE",
"427 569 OFFCURVE",
"427 559 QCURVE SMOOTH",
"427 554 OFFCURVE",
"424 549 QCURVE SMOOTH",
"293 317 LINE",
"156 545 LINE SMOOTH",
"151 553 OFFCURVE",
"151 559 QCURVE SMOOTH",
"151 569 OFFCURVE",
"162 569 QCURVE SMOOTH",
"163 569 LINE",
"216 567 LINE",
"216 597 LINE",
"-5 597 LINE",
"-5 567 LINE",
"23 569 LINE",
"37 569 OFFCURVE",
"47 550 QCURVE",
"220 263 LINE",
"220 49 LINE SMOOTH",
"220 27 OFFCURVE",
"201 27 QCURVE",
"152 29 LINE",
"152 0 LINE",
"381 0 LINE",
"381 29 LINE",
"333 27 LINE",
"313 27 OFFCURVE",
"313 48 QCURVE SMOOTH",
"313 287 LINE",
"459 548 LINE SMOOTH",
"471 569 OFFCURVE",
"487 569 QCURVE",
"517 567 LINE",
"517 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
33 30 27 20 16 5 6 1 0 1 74 7 6 4 3 0 0 5 93 9 8 2 5 5 17 75 3 1 1 1 2 93 0 2 2 21 2 76 0 0 0 37 0 37 40 49 18 20 33 17 36 33 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 507;
},
{
anchors = (
{
name = bottom;
position = "{295, 0}";
},
{
name = top;
position = "{294, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"409 597 LINE",
"409 560 LINE",
"461 562 LINE",
"471 562 OFFCURVE",
"471 552 QCURVE SMOOTH",
"471 547 OFFCURVE",
"468 542 QCURVE SMOOTH",
"342 317 LINE",
"209 538 LINE SMOOTH",
"204 546 OFFCURVE",
"204 552 QCURVE SMOOTH",
"204 562 OFFCURVE",
"215 562 QCURVE SMOOTH",
"216 562 LINE",
"269 560 LINE",
"269 597 LINE",
"-1 597 LINE",
"-1 560 LINE",
"28 562 LINE",
"40 562 OFFCURVE",
"52 543 QCURVE SMOOTH",
"224 256 LINE",
"224 57 LINE SMOOTH",
"224 35 OFFCURVE",
"205 35 QCURVE",
"156 37 LINE",
"156 0 LINE",
"430 0 LINE",
"430 37 LINE",
"382 35 LINE",
"362 35 OFFCURVE",
"362 56 QCURVE SMOOTH",
"362 275 LINE",
"511 541 LINE SMOOTH",
"523 562 OFFCURVE",
"539 562 QCURVE",
"569 560 LINE",
"569 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
33 30 27 16 5 5 1 0 1 74 7 6 4 3 0 0 5 93 9 8 2 5 5 17 75 3 1 1 1 2 93 0 2 2 21 2 76 0 0 0 37 0 37 40 49 17 36 33 17 36 33 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 559;
}
);
leftKerningGroup = Y;
note = Y;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 433, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
leftKerningGroup = Y;
note = Yacute;
rightKerningGroup = Y;
unicode = 00DD;
},
{
glyphname = Ycircumflex;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 457, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 485, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
leftKerningGroup = Y;
note = Ycircumflex;
rightKerningGroup = Y;
unicode = 0176;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 503, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
leftKerningGroup = Y;
note = Ydieresis;
rightKerningGroup = Y;
unicode = 0178;
},
{
glyphname = Ydotbelow;
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 498, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 379, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
leftKerningGroup = Y;
note = Ygrave;
rightKerningGroup = Y;
unicode = 1EF2;
},
{
glyphname = Yhookabove;
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 386, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
unicode = 1EF6;
},
{
glyphname = Ymacron;
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 421, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
unicode = 0232;
},
{
glyphname = Ytilde;
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 507;
},
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 480, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 559;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
layers = (
{
anchors = (
{
name = top;
position = "{247, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"465 167 LINE",
"465 102 OFFCURVE",
"384 27 OFFCURVE",
"315 27 QCURVE SMOOTH",
"141 27 LINE",
"464 573 LINE",
"464 597 LINE",
"144 597 LINE SMOOTH",
"122 597 OFFCURVE",
"86 599 QCURVE",
"35 600 LINE",
"35 443 LINE",
"62 443 LINE",
"62 508 OFFCURVE",
"131 569 OFFCURVE",
"203 569 QCURVE SMOOTH",
"355 569 LINE",
"34 27 LINE",
"34 0 LINE",
"371 0 LINE SMOOTH",
"472 0 OFFCURVE",
"484 -4 QCURVE",
"492 167 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
17 1 1 3 1 74 5 1 4 1 73 1 1 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 2 1 5 1 2 112 6 1 5 4 1 5 4 124 0 1 1 3 93 0 3 3 17 75 0 4 4 0 94 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 2 1 5 1 2 5 126 6 1 5 4 1 5 4 124 0 1 1 3 93 0 3 3 17 75 0 4 4 0 94 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 22 0 22 34 65 18 34 34 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 512;
},
{
anchors = (
{
name = top;
position = "{279, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"492 167 LINE",
"492 105 OFFCURVE",
"411 35 OFFCURVE",
"342 35 QCURVE SMOOTH",
"201 35 LINE",
"517 573 LINE",
"517 597 LINE",
"164 597 LINE SMOOTH",
"135 597 OFFCURVE",
"93 599 QCURVE SMOOTH",
"55 600 LINE",
"55 443 LINE",
"89 443 LINE",
"89 504 OFFCURVE",
"158 562 OFFCURVE",
"230 562 QCURVE SMOOTH",
"350 562 LINE",
"31 27 LINE",
"31 0 LINE",
"406 0 LINE SMOOTH",
"507 0 OFFCURVE",
"519 -4 QCURVE",
"527 167 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
17 1 1 3 5 1 0 4 2 74 1 1 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 2 1 5 1 2 112 6 1 5 4 4 5 110 0 1 1 3 93 0 3 3 17 75 0 4 4 0 94 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 2 1 5 1 2 5 126 6 1 5 4 1 5 4 124 0 1 1 3 93 0 3 3 17 75 0 4 4 0 94 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 22 0 22 34 65 18 34 34 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 547;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 512;
},
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 446, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 547;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 438, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 512;
},
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 470, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 547;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = Zdotaccent;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 336, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 512;
},
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 400, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 547;
}
);
note = Zdotaccent;
unicode = 017B;
},
{
glyphname = Cacute.loclPLK;
layers = (
{
components = (
{
name = C;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 475, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 607;
},
{
components = (
{
name = C;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 478, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 596;
}
);
},
{
glyphname = Nacute.loclPLK;
layers = (
{
components = (
{
name = N;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 662;
},
{
components = (
{
name = N;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 492, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 677;
}
);
},
{
glyphname = Oacute.loclPLK;
layers = (
{
components = (
{
name = O;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 482, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = O;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 486, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 678;
}
);
},
{
glyphname = Sacute.loclPLK;
layers = (
{
components = (
{
name = S;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 494;
},
{
components = (
{
name = S;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 405, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
},
{
glyphname = Zacute.loclPLK;
layers = (
{
components = (
{
name = Z;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 394, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 512;
},
{
components = (
{
name = Z;
},
{
name = acute.loclPLK.case.comb;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 547;
}
);
},
{
glyphname = a;
layers = (
{
anchors = (
{
name = bottom;
position = "{208, 0}";
},
{
name = ogonek;
position = "{344, 0}";
},
{
name = top;
position = "{221, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"393 24 LINE",
"380 24 OFFCURVE",
"380 43 QCURVE SMOOTH",
"380 289 LINE SMOOTH",
"380 430 OFFCURVE",
"213 430 QCURVE SMOOTH",
"139 430 OFFCURVE",
"51 378 OFFCURVE",
"51 336 QCURVE SMOOTH",
"51 315 OFFCURVE",
"74 289 OFFCURVE",
"95 289 QCURVE SMOOTH",
"112 289 OFFCURVE",
"134 306 OFFCURVE",
"134 323 QCURVE SMOOTH",
"134 332 OFFCURVE",
"125 353 OFFCURVE",
"125 361 QCURVE SMOOTH",
"125 403 OFFCURVE",
"201 403 QCURVE SMOOTH",
"250 403 OFFCURVE",
"294 363 OFFCURVE",
"294 316 QCURVE SMOOTH",
"294 258 LINE",
"156 258 OFFCURVE",
"27 185 OFFCURVE",
"27 108 QCURVE SMOOTH",
"27 52 OFFCURVE",
"92 -5 OFFCURVE",
"155 -5 QCURVE SMOOTH",
"203 -5 OFFCURVE",
"272 33 OFFCURVE",
"294 76 QCURVE",
"292 37 LINE",
"292 30 OFFCURVE",
"289 7 OFFCURVE",
"288 0 QCURVE",
"430 0 LINE",
"430 26 LINE"
);
},
{
closed = 1;
nodes = (
"153 31 OFFCURVE",
"118 74 OFFCURVE",
"118 116 QCURVE SMOOTH",
"118 176 OFFCURVE",
"200 231 OFFCURVE",
"294 231 QCURVE",
"294 162 LINE",
"291 104 OFFCURVE",
"229 31 OFFCURVE",
"185 31 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"393 24 LINE",
"380 24 OFFCURVE",
"380 43 QCURVE SMOOTH",
"380 289 LINE SMOOTH",
"380 430 OFFCURVE",
"213 430 QCURVE SMOOTH",
"139 430 OFFCURVE",
"51 378 OFFCURVE",
"51 336 QCURVE SMOOTH",
"51 315 OFFCURVE",
"74 289 OFFCURVE",
"95 289 QCURVE SMOOTH",
"112 289 OFFCURVE",
"134 306 OFFCURVE",
"134 323 QCURVE SMOOTH",
"134 332 OFFCURVE",
"125 353 OFFCURVE",
"125 361 QCURVE SMOOTH",
"125 403 OFFCURVE",
"201 403 QCURVE SMOOTH",
"250 403 OFFCURVE",
"294 363 OFFCURVE",
"294 316 QCURVE SMOOTH",
"294 253 LINE",
"156 253 OFFCURVE",
"27 180 OFFCURVE",
"27 103 QCURVE SMOOTH",
"27 47 OFFCURVE",
"92 -10 OFFCURVE",
"155 -10 QCURVE SMOOTH",
"254 -10 OFFCURVE",
"294 76 QCURVE",
"292 37 LINE",
"292 20 OFFCURVE",
"288 0 QCURVE",
"430 0 LINE",
"430 26 LINE"
);
},
{
closed = 1;
nodes = (
"118 21 OFFCURVE",
"118 111 QCURVE SMOOTH",
"118 172 OFFCURVE",
"200 226 OFFCURVE",
"294 226 QCURVE",
"294 162 LINE",
"291 104 OFFCURVE",
"229 26 OFFCURVE",
"185 26 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 82 values pushed */
21 1 4 3 6 1 8 7 2 74 0 4 3 2 3 4 2 126 0 2 0 7 8 2 7 103 0 3 3 5 95 0 5 5 28 75 9 1 6 6 0 93 0 0 0 21 75 10 1 8 8 1 95 0 1 1 18 1 76 39 39 0 0 39 48 39 47 43 42 0 38 0 37 36 38 35 20 38 17 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 450;
},
{
anchors = (
{
name = bottom;
position = "{213, 0}";
},
{
name = ogonek;
position = "{349, 0}";
},
{
name = top;
position = "{226, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"423 32 LINE",
"410 32 OFFCURVE",
"410 51 QCURVE SMOOTH",
"410 302 LINE SMOOTH",
"410 435 OFFCURVE",
"224 435 QCURVE SMOOTH",
"139 435 OFFCURVE",
"39 377 OFFCURVE",
"39 329 QCURVE SMOOTH",
"39 304 OFFCURVE",
"74 271 OFFCURVE",
"102 271 QCURVE SMOOTH",
"126 271 OFFCURVE",
"157 295 OFFCURVE",
"157 317 QCURVE SMOOTH",
"157 323 OFFCURVE",
"153 337 QCURVE",
"148 347 OFFCURVE",
"148 360 QCURVE SMOOTH",
"148 377 OFFCURVE",
"177 401 OFFCURVE",
"212 401 QCURVE SMOOTH",
"253 401 OFFCURVE",
"279 359 OFFCURVE",
"279 321 QCURVE SMOOTH",
"279 251 LINE",
"141 251 OFFCURVE",
"13 181 OFFCURVE",
"13 108 QCURVE SMOOTH",
"13 52 OFFCURVE",
"78 -5 OFFCURVE",
"141 -5 QCURVE SMOOTH",
"235 -5 OFFCURVE",
"279 64 QCURVE",
"278 37 LINE",
"278 24 OFFCURVE",
"274 0 QCURVE",
"456 0 LINE",
"456 34 LINE"
);
},
{
closed = 1;
nodes = (
"149 54 OFFCURVE",
"149 120 QCURVE SMOOTH",
"149 168 OFFCURVE",
"211 216 OFFCURVE",
"279 216 QCURVE",
"279 150 LINE",
"274 107 OFFCURVE",
"229 54 OFFCURVE",
"198 54 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"423 32 LINE",
"410 32 OFFCURVE",
"410 51 QCURVE SMOOTH",
"410 302 LINE SMOOTH",
"410 435 OFFCURVE",
"224 435 QCURVE SMOOTH",
"139 435 OFFCURVE",
"39 377 OFFCURVE",
"39 329 QCURVE SMOOTH",
"39 304 OFFCURVE",
"74 271 OFFCURVE",
"102 271 QCURVE SMOOTH",
"126 271 OFFCURVE",
"157 295 OFFCURVE",
"157 317 QCURVE SMOOTH",
"157 323 OFFCURVE",
"148 346 OFFCURVE",
"148 359 QCURVE SMOOTH",
"148 401 OFFCURVE",
"212 401 QCURVE SMOOTH",
"253 401 OFFCURVE",
"279 359 OFFCURVE",
"279 321 QCURVE SMOOTH",
"279 246 LINE",
"141 246 OFFCURVE",
"13 176 OFFCURVE",
"13 103 QCURVE SMOOTH",
"13 47 OFFCURVE",
"78 -10 OFFCURVE",
"141 -10 QCURVE SMOOTH",
"235 -10 OFFCURVE",
"279 62 QCURVE",
"278 37 LINE",
"278 24 OFFCURVE",
"274 0 QCURVE",
"456 0 LINE",
"456 34 LINE"
);
},
{
closed = 1;
nodes = (
"149 49 OFFCURVE",
"149 115 QCURVE SMOOTH",
"149 163 OFFCURVE",
"211 211 OFFCURVE",
"279 211 QCURVE",
"279 148 LINE",
"274 105 OFFCURVE",
"229 54 OFFCURVE",
"198 54 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
41 5 2 8 7 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 4 3 2 3 4 2 126 0 2 0 7 8 2 7 103 0 3 3 5 95 0 5 5 28 75 10 1 8 8 0 95 1 1 0 0 21 75 9 1 6 6 0 95 1 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 4 3 2 3 4 2 126 0 2 0 7 8 2 7 103 0 3 3 5 95 0 5 5 28 75 9 1 6 6 0 93 0 0 0 21 75 10 1 8 8 1 95 0 1 1 18 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 4 3 2 3 4 2 126 0 2 0 7 8 2 7 103 0 3 3 5 95 0 5 5 28 75 10 1 8 8 0 95 1 1 0 0 21 75 9 1 6 6 0 95 1 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 49 values pushed */
0 4 3 2 3 4 2 126 0 2 0 7 8 2 7 103 0 3 3 5 95 0 5 5 28 75 9 1 6 6 0 93 0 0 0 21 75 10 1 8 8 1 95 0 1 1 18 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 23 values pushed */
39 39 0 0 39 47 39 46 43 42 0 38 0 37 36 40 35 20 36 17 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 467;
}
);
leftKerningGroup = a;
note = a;
rightKerningGroup = a;
unicode = 0061;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 388, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 386, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = aacute;
rightKerningGroup = a;
unicode = 00E1;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = abreve;
rightKerningGroup = a;
unicode = 0103;
},
{
glyphname = abreveacute;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 392, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 397, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 391, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EB5;
},
{
glyphname = acaron;
layers = (
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 417, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 01CE;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = acircumflex;
rightKerningGroup = a;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 412, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 417, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EAB;
},
{
glyphname = adblgrave;
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 331, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 330, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 0201;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 434, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = adieresis;
rightKerningGroup = a;
unicode = 00E4;
},
{
glyphname = adotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EA1;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 330, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 335, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = agrave;
rightKerningGroup = a;
unicode = 00E0;
},
{
glyphname = ahookabove;
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 346, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 0203;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 443, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = amacron;
rightKerningGroup = a;
unicode = 0101;
},
{
glyphname = aogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 495, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 92 values pushed */
29 1 5 4 14 1 11 10 56 1 9 2 3 74 0 5 4 3 4 5 3 126 0 3 0 10 11 3 10 103 0 9 0 0 9 0 99 0 4 4 6 95 0 6 6 28 75 0 7 7 1 93 8 1 1 1 21 75 12 1 11 11 2 95 0 2 2 18 2 76 57 57 57 66 57 65 61 60 55 53 17 35 36 38 35 20 38 21 34 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 450;
},
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 500, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
59 13 2 11 10 56 1 9 1 2 74 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
59 13 2 11 10 56 1 9 2 2 74 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
59 13 2 11 10 56 1 9 1 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
59 13 2 11 10 56 1 9 2 2 74 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 59 values pushed */
0 5 4 3 4 5 3 126 0 3 0 10 11 3 10 103 0 9 0 0 9 0 99 0 4 4 6 95 0 6 6 28 75 12 1 11 11 1 93 8 2 2 1 1 21 75 0 7 7 1 93 8 2 2 1 1 21 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 56 values pushed */
0 5 4 3 4 5 3 126 0 3 0 10 11 3 10 103 0 9 0 0 9 0 99 0 4 4 6 95 0 6 6 28 75 0 7 7 1 93 8 1 1 1 21 75 12 1 11 11 2 95 0 2 2 18 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 59 values pushed */
0 5 4 3 4 5 3 126 0 3 0 10 11 3 10 103 0 9 0 0 9 0 99 0 4 4 6 95 0 6 6 28 75 12 1 11 11 1 93 8 2 2 1 1 21 75 0 7 7 1 93 8 2 2 1 1 21 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 56 values pushed */
0 5 4 3 4 5 3 126 0 3 0 10 11 3 10 103 0 9 0 0 9 0 99 0 4 4 6 95 0 6 6 28 75 0 7 7 1 93 8 1 1 1 21 75 12 1 11 11 2 95 0 2 2 18 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 22 values pushed */
57 57 57 65 57 64 61 60 55 53 17 35 36 40 35 20 36 21 34 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 467;
}
);
leftKerningGroup = a;
note = aogonek;
unicode = 0105;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = aring;
rightKerningGroup = a;
unicode = 00E5;
},
{
glyphname = aringacute;
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb_acutecomb;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = ringcomb_acutecomb;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
unicode = 01FB;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 450;
},
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 467;
}
);
leftKerningGroup = a;
note = atilde;
rightKerningGroup = a;
unicode = 00E3;
},
{
glyphname = ae;
layers = (
{
anchors = (
{
name = top;
position = "{353, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"418 430 OFFCURVE",
"352 381 QCURVE",
"312 430 OFFCURVE",
"213 430 QCURVE SMOOTH",
"139 430 OFFCURVE",
"51 378 OFFCURVE",
"51 336 QCURVE SMOOTH",
"51 315 OFFCURVE",
"74 289 OFFCURVE",
"95 289 QCURVE SMOOTH",
"112 289 OFFCURVE",
"134 306 OFFCURVE",
"134 323 QCURVE SMOOTH",
"134 332 OFFCURVE",
"125 353 OFFCURVE",
"125 361 QCURVE SMOOTH",
"125 403 OFFCURVE",
"201 403 QCURVE SMOOTH",
"250 403 OFFCURVE",
"294 363 OFFCURVE",
"294 316 QCURVE SMOOTH",
"294 242 LINE",
"155 242 OFFCURVE",
"27 178 OFFCURVE",
"27 98 QCURVE SMOOTH",
"27 46 OFFCURVE",
"106 -5 OFFCURVE",
"172 -5 QCURVE SMOOTH",
"271 -5 OFFCURVE",
"318 87 QCURVE",
"341 40 OFFCURVE",
"431 -10 OFFCURVE",
"508 -10 QCURVE SMOOTH",
"562 -10 OFFCURVE",
"653 45 OFFCURVE",
"674 92 QCURVE",
"650 110 LINE",
"632 73 OFFCURVE",
"553 23 OFFCURVE",
"514 23 QCURVE SMOOTH",
"449 23 OFFCURVE",
"381 127 OFFCURVE",
"381 217 QCURVE",
"675 217 LINE",
"675 321 OFFCURVE",
"587 430 OFFCURVE",
"500 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"590 403 OFFCURVE",
"590 270 QCURVE SMOOTH",
"590 242 OFFCURVE",
"580 242 QCURVE SMOOTH",
"381 242 LINE",
"381 324 OFFCURVE",
"439 403 OFFCURVE",
"501 403 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 177 LINE SMOOTH",
"294 104 OFFCURVE",
"238 28 OFFCURVE",
"191 28 QCURVE SMOOTH",
"158 28 OFFCURVE",
"118 60 OFFCURVE",
"118 93 QCURVE SMOOTH",
"118 155 OFFCURVE",
"202 217 OFFCURVE",
"294 217 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 100 values pushed */
45 31 2 6 5 16 10 9 3 11 0 2 74 0 6 5 4 5 6 4 126 9 1 4 15 12 2 0 11 4 0 103 14 10 2 5 5 7 95 13 8 2 7 7 28 75 0 11 11 3 95 0 3 3 18 75 0 1 1 2 95 0 2 2 26 2 76 57 57 49 49 0 0 57 67 57 67 63 61 49 56 49 55 53 51 0 48 0 47 36 38 35 20 36 37 34 18 16 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 710;
},
{
anchors = (
{
name = top;
position = "{361, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"411 435 OFFCURVE",
"360 403 QCURVE",
"315 435 OFFCURVE",
"224 435 QCURVE SMOOTH",
"139 435 OFFCURVE",
"39 377 OFFCURVE",
"39 329 QCURVE SMOOTH",
"39 304 OFFCURVE",
"74 271 OFFCURVE",
"102 271 QCURVE SMOOTH",
"126 271 OFFCURVE",
"157 295 OFFCURVE",
"157 317 QCURVE SMOOTH",
"157 323 OFFCURVE",
"148 347 OFFCURVE",
"148 360 QCURVE SMOOTH",
"149 401 OFFCURVE",
"212 401 QCURVE SMOOTH",
"253 401 OFFCURVE",
"279 359 OFFCURVE",
"279 321 QCURVE SMOOTH",
"279 242 LINE",
"141 242 OFFCURVE",
"13 178 OFFCURVE",
"13 106 QCURVE SMOOTH",
"13 51 OFFCURVE",
"82 -5 OFFCURVE",
"145 -5 QCURVE SMOOTH",
"252 -5 OFFCURVE",
"301 77 QCURVE",
"327 33 OFFCURVE",
"426 -10 OFFCURVE",
"503 -10 QCURVE SMOOTH",
"573 -10 OFFCURVE",
"673 44 OFFCURVE",
"696 93 QCURVE",
"669 112 LINE",
"653 78 OFFCURVE",
"582 31 OFFCURVE",
"537 31 QCURVE SMOOTH",
"474 31 OFFCURVE",
"410 123 OFFCURVE",
"410 210 QCURVE",
"699 210 LINE",
"699 328 OFFCURVE",
"598 435 OFFCURVE",
"499 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"565 401 OFFCURVE",
"565 274 QCURVE SMOOTH",
"565 242 OFFCURVE",
"548 242 QCURVE SMOOTH",
"410 242 LINE",
"410 315 OFFCURVE",
"452 401 OFFCURVE",
"496 401 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 156 LINE",
"275 111 OFFCURVE",
"229 53 OFFCURVE",
"199 53 QCURVE SMOOTH",
"175 53 OFFCURVE",
"149 83 OFFCURVE",
"149 114 QCURVE SMOOTH",
"149 160 OFFCURVE",
"211 208 OFFCURVE",
"279 208 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
46 1 5 7 66 16 10 9 4 11 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 56 values pushed */
0 6 5 4 5 6 4 126 9 1 4 15 12 2 0 11 4 0 103 14 10 2 5 5 7 95 13 8 2 7 7 28 75 0 11 11 2 95 3 1 2 2 26 75 0 1 1 2 95 3 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 54 values pushed */
0 6 5 4 5 6 4 126 9 1 4 15 12 2 0 11 4 0 103 14 10 2 5 5 7 95 13 8 2 7 7 28 75 0 11 11 3 95 0 3 3 18 75 0 1 1 2 95 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 56 values pushed */
0 6 5 4 5 6 4 126 9 1 4 15 12 2 0 11 4 0 103 14 10 2 5 5 7 95 13 8 2 7 7 28 75 0 11 11 2 95 3 1 2 2 26 75 0 1 1 2 95 3 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 54 values pushed */
0 6 5 4 5 6 4 126 9 1 4 15 12 2 0 11 4 0 103 14 10 2 5 5 7 95 13 8 2 7 7 28 75 0 11 11 3 95 0 3 3 18 75 0 1 1 2 95 0 2 2 26 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 33 values pushed */
58 58 49 49 0 0 58 67 58 67 64 62 49 57 49 56 53 51 0 48 0 47 36 40 35 20 35 37 34 18 16 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 719;
}
);
leftKerningGroup = a;
note = ae;
rightKerningGroup = ae;
unicode = 00E6;
},
{
glyphname = aeacute;
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 520, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 710;
},
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 521, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 719;
}
);
unicode = 01FD;
},
{
glyphname = b;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"21 705 LINE",
"57 707 LINE",
"70 707 OFFCURVE",
"70 687 QCURVE SMOOTH",
"70 -5 LINE",
"103 -5 LINE",
"103 25 OFFCURVE",
"117 61 OFFCURVE",
"131 61 QCURVE SMOOTH",
"145 61 OFFCURVE",
"149 52 QCURVE",
"172 22 OFFCURVE",
"222 -10 OFFCURVE",
"271 -10 QCURVE SMOOTH",
"367 -10 OFFCURVE",
"461 100 OFFCURVE",
"461 209 QCURVE SMOOTH",
"461 430 OFFCURVE",
"288 430 QCURVE SMOOTH",
"194 430 OFFCURVE",
"157 342 QCURVE",
"157 730 LINE",
"21 730 LINE"
);
},
{
closed = 1;
nodes = (
"159 226 LINE SMOOTH",
"159 308 OFFCURVE",
"221 403 OFFCURVE",
"277 403 QCURVE SMOOTH",
"315 403 OFFCURVE",
"355 368 OFFCURVE",
"370 287 OFFCURVE",
"370 209 QCURVE SMOOTH",
"370 134 OFFCURVE",
"352 52 OFFCURVE",
"310 17 OFFCURVE",
"271 17 QCURVE SMOOTH",
"211 17 OFFCURVE",
"159 105 OFFCURVE",
"159 184 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"21 705 LINE",
"57 707 LINE",
"70 707 OFFCURVE",
"70 687 QCURVE SMOOTH",
"70 -5 LINE",
"103 -5 LINE",
"103 25 OFFCURVE",
"117 61 OFFCURVE",
"131 61 QCURVE SMOOTH",
"145 61 OFFCURVE",
"149 52 QCURVE",
"172 22 OFFCURVE",
"222 -10 OFFCURVE",
"271 -10 QCURVE SMOOTH",
"367 -10 OFFCURVE",
"461 100 OFFCURVE",
"461 209 QCURVE SMOOTH",
"461 430 OFFCURVE",
"288 430 QCURVE SMOOTH",
"194 430 OFFCURVE",
"157 342 QCURVE",
"157 730 LINE",
"21 730 LINE"
);
},
{
closed = 1;
nodes = (
"159 226 LINE SMOOTH",
"159 308 OFFCURVE",
"221 403 OFFCURVE",
"277 403 QCURVE SMOOTH",
"335 403 OFFCURVE",
"370 319 OFFCURVE",
"370 209 QCURVE SMOOTH",
"370 134 OFFCURVE",
"352 52 OFFCURVE",
"310 17 OFFCURVE",
"271 17 QCURVE SMOOTH",
"159 17 OFFCURVE",
"159 184 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
2 1 3 7 1 74 0 3 7 6 7 3 6 126 0 0 0 5 1 0 5 103 0 7 7 1 95 0 1 1 28 75 0 4 4 18 75 0 6 6 2 95 0 2 2 26 2 76 38 34 34 18 35 35 34 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 481;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"17 698 LINE",
"50 700 LINE",
"57 700 OFFCURVE",
"63 688 OFFCURVE",
"63 680 QCURVE SMOOTH",
"63 -5 LINE",
"132 -5 LINE",
"132 25 OFFCURVE",
"150 61 OFFCURVE",
"168 61 QCURVE SMOOTH",
"179 61 OFFCURVE",
"186 52 QCURVE SMOOTH",
"209 22 OFFCURVE",
"263 -10 OFFCURVE",
"315 -10 QCURVE SMOOTH",
"404 -10 OFFCURVE",
"498 102 OFFCURVE",
"498 211 QCURVE SMOOTH",
"498 322 OFFCURVE",
"409 435 OFFCURVE",
"322 435 QCURVE SMOOTH",
"276 435 OFFCURVE",
"208 392 OFFCURVE",
"194 356 QCURVE",
"194 730 LINE",
"17 730 LINE"
);
},
{
closed = 1;
nodes = (
"196 229 LINE SMOOTH",
"196 303 OFFCURVE",
"243 390 OFFCURVE",
"286 390 QCURVE SMOOTH",
"328 390 OFFCURVE",
"358 303 OFFCURVE",
"358 211 QCURVE SMOOTH",
"358 144 OFFCURVE",
"344 69 OFFCURVE",
"312 36 OFFCURVE",
"284 36 QCURVE SMOOTH",
"196 36 OFFCURVE",
"196 186 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"17 698 LINE",
"50 700 LINE",
"63 700 OFFCURVE",
"63 680 QCURVE SMOOTH",
"63 -5 LINE",
"132 -5 LINE",
"132 25 OFFCURVE",
"150 61 OFFCURVE",
"168 61 QCURVE SMOOTH",
"179 61 OFFCURVE",
"186 52 QCURVE SMOOTH",
"209 22 OFFCURVE",
"263 -10 OFFCURVE",
"315 -10 QCURVE SMOOTH",
"404 -10 OFFCURVE",
"498 102 OFFCURVE",
"498 211 QCURVE SMOOTH",
"498 435 OFFCURVE",
"322 435 QCURVE SMOOTH",
"230 435 OFFCURVE",
"194 356 QCURVE",
"194 730 LINE",
"17 730 LINE"
);
},
{
closed = 1;
nodes = (
"196 229 LINE SMOOTH",
"196 303 OFFCURVE",
"243 390 OFFCURVE",
"286 390 QCURVE SMOOTH",
"328 390 OFFCURVE",
"358 303 OFFCURVE",
"358 211 QCURVE SMOOTH",
"358 144 OFFCURVE",
"344 69 OFFCURVE",
"312 36 OFFCURVE",
"284 36 QCURVE SMOOTH",
"196 36 OFFCURVE",
"196 186 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
21 1 1 5 2 1 3 7 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 3 7 6 7 3 6 126 0 0 0 5 1 0 5 103 0 7 7 1 95 0 1 1 28 75 0 6 6 2 95 4 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 3 7 6 7 3 6 126 0 0 0 5 1 0 5 103 0 7 7 1 95 0 1 1 28 75 0 4 4 18 75 0 6 6 2 95 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 3 7 6 7 3 6 126 0 0 0 5 1 0 5 103 0 7 7 1 95 0 1 1 28 75 0 6 6 2 95 4 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 3 7 6 7 3 6 126 0 0 0 5 1 0 5 103 0 7 7 1 95 0 1 1 28 75 0 4 4 18 75 0 6 6 2 95 0 2 2 26 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
37 33 35 18 35 36 35 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 514;
}
);
note = b;
rightKerningGroup = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
anchors = (
{
name = bottom;
position = "{233, 0}";
},
{
name = top;
position = "{235, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"174 430 OFFCURVE",
"85 375 OFFCURVE",
"36 274 OFFCURVE",
"36 206 QCURVE SMOOTH",
"36 105 OFFCURVE",
"143 -10 OFFCURVE",
"237 -10 QCURVE SMOOTH",
"302 -10 OFFCURVE",
"389 52 OFFCURVE",
"407 106 QCURVE",
"383 124 LINE",
"371 73 OFFCURVE",
"292 17 OFFCURVE",
"242 17 QCURVE SMOOTH",
"185 17 OFFCURVE",
"129 116 OFFCURVE",
"129 217 QCURVE SMOOTH",
"129 319 OFFCURVE",
"183 403 OFFCURVE",
"235 403 QCURVE SMOOTH",
"267 403 OFFCURVE",
"313 376 OFFCURVE",
"313 351 QCURVE SMOOTH",
"313 340 OFFCURVE",
"308 328 QCURVE",
"304 316 OFFCURVE",
"304 308 QCURVE SMOOTH",
"304 278 OFFCURVE",
"339 278 QCURVE SMOOTH",
"364 278 OFFCURVE",
"387 307 OFFCURVE",
"387 328 QCURVE SMOOTH",
"387 356 OFFCURVE",
"344 403 OFFCURVE",
"273 430 OFFCURVE",
"232 430 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"142 430 OFFCURVE",
"36 306 OFFCURVE",
"36 206 QCURVE SMOOTH",
"36 105 OFFCURVE",
"143 -10 OFFCURVE",
"237 -10 QCURVE SMOOTH",
"365 -10 OFFCURVE",
"407 106 QCURVE",
"382 118 LINE",
"366 69 OFFCURVE",
"292 17 OFFCURVE",
"242 17 QCURVE SMOOTH",
"185 17 OFFCURVE",
"129 116 OFFCURVE",
"129 217 QCURVE SMOOTH",
"129 319 OFFCURVE",
"183 403 OFFCURVE",
"235 403 QCURVE SMOOTH",
"267 403 OFFCURVE",
"313 376 OFFCURVE",
"313 351 QCURVE SMOOTH",
"313 340 OFFCURVE",
"308 328 QCURVE",
"304 316 OFFCURVE",
"304 308 QCURVE SMOOTH",
"304 278 OFFCURVE",
"339 278 QCURVE SMOOTH",
"364 278 OFFCURVE",
"387 307 OFFCURVE",
"387 328 QCURVE SMOOTH",
"387 356 OFFCURVE",
"344 403 OFFCURVE",
"273 430 OFFCURVE",
"232 430 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
8 1 0 1 25 24 2 2 0 2 74 0 0 1 2 1 0 2 126 0 1 1 4 95 5 1 4 4 28 75 0 2 2 3 95 0 3 3 26 3 76 0 0 0 35 0 34 37 36 39 37 6 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 425;
},
{
anchors = (
{
name = bottom;
position = "{242, 0}";
},
{
name = top;
position = "{244, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"144 435 OFFCURVE",
"20 320 OFFCURVE",
"20 209 QCURVE SMOOTH",
"20 98 OFFCURVE",
"147 -10 OFFCURVE",
"245 -10 QCURVE SMOOTH",
"383 -10 OFFCURVE",
"426 108 QCURVE",
"395 123 LINE",
"377 72 OFFCURVE",
"310 27 OFFCURVE",
"269 27 QCURVE SMOOTH",
"217 27 OFFCURVE",
"158 115 OFFCURVE",
"158 223 QCURVE SMOOTH",
"158 320 OFFCURVE",
"206 401 OFFCURVE",
"249 401 QCURVE SMOOTH",
"275 401 OFFCURVE",
"310 378 OFFCURVE",
"310 356 QCURVE SMOOTH",
"310 344 OFFCURVE",
"305 334 QCURVE",
"301 322 OFFCURVE",
"301 313 QCURVE SMOOTH",
"301 291 OFFCURVE",
"332 268 OFFCURVE",
"356 268 QCURVE SMOOTH",
"386 268 OFFCURVE",
"419 304 OFFCURVE",
"419 330 QCURVE SMOOTH",
"419 359 OFFCURVE",
"374 407 OFFCURVE",
"294 435 OFFCURVE",
"244 435 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"144 435 OFFCURVE",
"20 320 OFFCURVE",
"20 209 QCURVE SMOOTH",
"20 98 OFFCURVE",
"147 -10 OFFCURVE",
"245 -10 QCURVE SMOOTH",
"383 -10 OFFCURVE",
"426 108 QCURVE",
"395 123 LINE",
"377 72 OFFCURVE",
"310 27 OFFCURVE",
"269 27 QCURVE SMOOTH",
"217 27 OFFCURVE",
"158 115 OFFCURVE",
"158 223 QCURVE SMOOTH",
"158 320 OFFCURVE",
"206 401 OFFCURVE",
"249 401 QCURVE SMOOTH",
"275 401 OFFCURVE",
"310 378 OFFCURVE",
"310 356 QCURVE SMOOTH",
"310 344 OFFCURVE",
"305 334 QCURVE",
"301 322 OFFCURVE",
"301 313 QCURVE SMOOTH",
"301 268 OFFCURVE",
"356 268 QCURVE SMOOTH",
"386 268 OFFCURVE",
"419 304 OFFCURVE",
"419 330 QCURVE SMOOTH",
"419 359 OFFCURVE",
"374 407 OFFCURVE",
"294 435 OFFCURVE",
"244 435 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
26 25 2 2 0 1 74 0 0 1 2 1 0 2 126 0 1 1 4 95 5 1 4 4 28 75 0 2 2 3 95 0 3 3 26 3 76 0 0 0 34 0 33 36 36 40 37 6 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 439;
}
);
leftKerningGroup = c;
note = c;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 402, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 425;
},
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 439;
}
);
leftKerningGroup = c;
note = cacute;
unicode = 0107;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 425;
},
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 435, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 439;
}
);
leftKerningGroup = c;
note = ccaron;
unicode = 010D;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 337, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 74 values pushed */
43 1 3 4 60 59 2 5 3 27 1 6 5 14 1 1 6 13 1 0 1 5 74 0 3 4 5 4 3 5 126 0 1 0 0 1 0 99 0 4 4 2 95 0 2 2 28 75 0 5 5 6 95 0 6 6 26 6 76 63 62 57 55 51 49 42 40 35 33 35 42 7 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 425;
},
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 366, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
60 59 2 5 3 27 1 6 5 14 1 1 6 13 1 0 1 4 74 0 3 4 5 4 3 5 126 0 1 0 0 1 0 99 0 4 4 2 95 0 2 2 28 75 0 5 5 6 95 0 6 6 26 6 76 20 36 40 37 47 35 42 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 439;
}
);
leftKerningGroup = c;
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 425;
},
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 439;
}
);
unicode = 0109;
},
{
glyphname = cdotaccent;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 324, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 425;
},
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 365, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 439;
}
);
unicode = 010B;
},
{
glyphname = d;
layers = (
{
anchors = (
{
name = center;
position = "{352, 568}";
},
{
name = topright;
position = "{360, 546}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 97 OFFCURVE",
"123 -10 OFFCURVE",
"225 -10 QCURVE SMOOTH",
"271 -10 OFFCURVE",
"324 30 OFFCURVE",
"336 67 QCURVE",
"336 65 OFFCURVE",
"334 51 OFFCURVE",
"334 38 QCURVE SMOOTH",
"334 16 LINE SMOOTH",
"334 8 OFFCURVE",
"332 0 QCURVE",
"476 0 LINE",
"476 26 LINE",
"439 24 LINE",
"426 24 OFFCURVE",
"426 43 QCURVE SMOOTH",
"426 730 LINE",
"280 730 LINE",
"280 705 LINE",
"326 707 LINE",
"339 707 OFFCURVE",
"339 687 QCURVE SMOOTH",
"339 348 LINE",
"329 384 OFFCURVE",
"270 430 OFFCURVE",
"224 430 QCURVE SMOOTH",
"130 430 OFFCURVE",
"35 318 OFFCURVE",
"35 209 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 303 OFFCURVE",
"170 403 OFFCURVE",
"224 403 QCURVE SMOOTH",
"281 403 OFFCURVE",
"337 310 OFFCURVE",
"337 226 QCURVE SMOOTH",
"337 184 LINE SMOOTH",
"337 97 OFFCURVE",
"286 17 OFFCURVE",
"225 17 QCURVE SMOOTH",
"186 17 OFFCURVE",
"144 54 OFFCURVE",
"127 136 OFFCURVE",
"127 209 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
5 1 3 7 1 74 0 2 0 1 0 2 1 103 0 7 7 0 95 0 0 0 28 75 0 3 3 4 93 0 4 4 21 75 0 6 6 5 95 0 5 5 26 5 76 37 37 40 17 34 17 36 33 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 496;
},
{
anchors = (
{
name = center;
position = "{371, 568}";
},
{
name = topright;
position = "{388, 539}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"24 98 OFFCURVE",
"108 -10 OFFCURVE",
"205 -10 QCURVE SMOOTH",
"252 -10 OFFCURVE",
"312 29 OFFCURVE",
"325 63 QCURVE",
"325 61 OFFCURVE",
"323 49 OFFCURVE",
"323 38 QCURVE SMOOTH",
"323 16 LINE SMOOTH",
"323 8 OFFCURVE",
"321 0 QCURVE",
"505 0 LINE",
"505 34 LINE",
"472 32 LINE",
"459 32 OFFCURVE",
"459 51 QCURVE SMOOTH",
"459 730 LINE",
"269 730 LINE",
"269 698 LINE",
"315 700 LINE",
"328 700 OFFCURVE",
"328 680 QCURVE SMOOTH",
"328 357 LINE",
"317 390 OFFCURVE",
"250 435 OFFCURVE",
"204 435 QCURVE SMOOTH",
"115 435 OFFCURVE",
"24 322 OFFCURVE",
"24 211 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 299 OFFCURVE",
"197 390 OFFCURVE",
"237 390 QCURVE SMOOTH",
"280 390 OFFCURVE",
"326 305 OFFCURVE",
"326 229 QCURVE SMOOTH",
"326 186 LINE SMOOTH",
"326 111 OFFCURVE",
"283 36 OFFCURVE",
"238 36 QCURVE SMOOTH",
"209 36 OFFCURVE",
"177 70 OFFCURVE",
"164 144 OFFCURVE",
"164 211 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
5 1 3 7 1 74 0 2 0 1 0 2 1 103 0 7 7 0 95 0 0 0 28 75 6 1 3 3 4 93 0 4 4 21 75 6 1 3 3 5 95 0 5 5 26 5 76 37 37 40 17 34 17 36 33 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 522;
}
);
leftKerningGroup = c;
note = d;
unicode = 0064;
},
{
glyphname = eth;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"378 594 LINE",
"364 620 LINE",
"269 565 LINE",
"203 604 OFFCURVE",
"132 607 QCURVE",
"112 585 LINE",
"173 580 OFFCURVE",
"221 538 QCURVE",
"125 483 LINE",
"140 457 LINE",
"246 518 LINE",
"292 487 OFFCURVE",
"328 404 QCURVE",
"286 429 OFFCURVE",
"246 429 QCURVE SMOOTH",
"143 429 OFFCURVE",
"35 317 OFFCURVE",
"35 209 QCURVE SMOOTH",
"35 101 OFFCURVE",
"143 -11 OFFCURVE",
"246 -11 QCURVE SMOOTH",
"347 -11 OFFCURVE",
"457 109 OFFCURVE",
"457 213 QCURVE SMOOTH",
"457 324 OFFCURVE",
"369 495 OFFCURVE",
"297 547 QCURVE"
);
},
{
closed = 1;
nodes = (
"182 14 OFFCURVE",
"126 108 OFFCURVE",
"126 209 QCURVE SMOOTH",
"126 304 OFFCURVE",
"180 404 OFFCURVE",
"246 404 QCURVE SMOOTH",
"310 404 OFFCURVE",
"366 314 OFFCURVE",
"366 209 QCURVE SMOOTH",
"366 105 OFFCURVE",
"311 14 OFFCURVE",
"246 14 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
28 1 2 3 29 26 20 19 18 17 6 1 2 2 74 14 1 4 1 73 27 1 3 72 0 2 3 1 3 2 1 126 0 3 3 25 75 0 4 4 1 95 0 1 1 28 75 6 1 5 5 0 95 0 0 0 26 0 76 30 30 30 43 30 42 41 17 26 36 36 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 492;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"380 590 LINE",
"364 620 LINE",
"281 572 LINE",
"212 604 OFFCURVE",
"132 607 QCURVE",
"112 578 LINE",
"161 571 OFFCURVE",
"215 535 QCURVE",
"125 483 LINE",
"142 453 LINE",
"244 512 LINE",
"295 468 OFFCURVE",
"317 414 QCURVE",
"285 435 OFFCURVE",
"232 435 QCURVE SMOOTH",
"136 435 OFFCURVE",
"20 323 OFFCURVE",
"20 212 QCURVE SMOOTH",
"20 103 OFFCURVE",
"140 -11 OFFCURVE",
"254 -11 QCURVE SMOOTH",
"369 -11 OFFCURVE",
"487 115 OFFCURVE",
"487 224 QCURVE SMOOTH",
"487 343 OFFCURVE",
"395 507 OFFCURVE",
"317 554 QCURVE"
);
},
{
closed = 1;
nodes = (
"205 22 OFFCURVE",
"160 108 OFFCURVE",
"160 212 QCURVE SMOOTH",
"160 318 OFFCURVE",
"204 403 OFFCURVE",
"254 403 QCURVE SMOOTH",
"304 403 OFFCURVE",
"347 315 OFFCURVE",
"347 212 QCURVE SMOOTH",
"347 111 OFFCURVE",
"305 22 OFFCURVE",
"254 22 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
26 25 23 20 18 17 16 15 8 1 2 13 1 3 1 2 74 24 1 2 72 0 2 2 25 75 0 3 3 1 95 0 1 1 28 75 5 1 4 4 0 95 0 0 0 26 0 76 27 27 27 38 27 37 41 25 36 36 6 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 507;
}
);
leftKerningGroup = c;
note = eth;
rightKerningGroup = eth;
unicode = 00F0;
},
{
glyphname = dcaron;
layers = (
{
components = (
{
name = d;
},
{
name = caron.alt;
transform = "{1, 0, 0, 1, 347, 126}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 496;
},
{
components = (
{
name = d;
},
{
name = caron.alt;
transform = "{1, 0, 0, 1, 375, 114}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
46 30 2 7 6 39 1 3 7 38 1 8 3 23 1 0 8 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 5 0 4 6 5 4 103 0 7 7 6 95 0 6 6 25 75 0 8 8 3 95 0 3 3 28 75 9 1 0 0 1 93 0 1 1 21 75 9 1 0 0 2 95 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 49 values pushed */
0 5 0 4 6 5 4 103 0 6 0 7 3 6 7 103 0 8 8 3 95 0 3 3 28 75 9 1 0 0 1 93 0 1 1 21 75 9 1 0 0 2 95 0 2 2 26 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
58 56 37 26 34 17 36 36 40 17 33 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 522;
}
);
leftKerningGroup = c;
note = dcaron;
unicode = 010F;
},
{
glyphname = dcroat;
layers = (
{
components = (
{
name = d;
},
{
name = baraccent;
transform = "{1, 0, 0, 1, 152, 279}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 80 values pushed */
24 1 0 10 1 74 0 7 0 6 5 7 6 103 12 9 2 4 4 5 93 8 1 5 5 17 75 0 10 10 3 95 0 3 3 28 75 0 0 0 1 93 0 1 1 21 75 0 11 11 2 95 0 2 2 26 2 76 0 0 49 47 42 40 0 37 0 37 17 17 34 17 19 36 40 17 34 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 496;
},
{
components = (
{
name = d;
},
{
name = baraccent;
transform = "{1, 0, 0, 1, 171, 279}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 82 values pushed */
24 1 0 10 1 74 0 7 0 6 5 7 6 103 12 9 2 4 4 5 93 8 1 5 5 17 75 0 10 10 3 95 0 3 3 28 75 11 1 0 0 1 93 0 1 1 21 75 11 1 0 0 2 95 0 2 2 26 2 76 0 0 49 47 42 40 0 37 0 37 17 17 34 17 19 36 40 17 34 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 522;
}
);
leftKerningGroup = c;
note = dcroat;
unicode = 0111;
},
{
glyphname = dzcaron;
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 496, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 937;
},
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 522, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 965;
}
);
unicode = 01C6;
},
{
glyphname = e;
layers = (
{
anchors = (
{
name = bottom;
position = "{231, 0}";
},
{
name = ogonek;
position = "{299, 0}";
},
{
name = top;
position = "{237, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"137 430 OFFCURVE",
"35 318 OFFCURVE",
"35 209 QCURVE SMOOTH",
"35 -10 OFFCURVE",
"238 -10 QCURVE SMOOTH",
"295 -10 OFFCURVE",
"390 45 OFFCURVE",
"410 93 QCURVE",
"387 110 LINE",
"371 73 OFFCURVE",
"302 23 OFFCURVE",
"252 23 QCURVE SMOOTH",
"189 24 OFFCURVE",
"126 121 OFFCURVE",
"126 212 QCURVE",
"414 212 LINE",
"414 241 LINE",
"412 329 OFFCURVE",
"315 430 OFFCURVE",
"236 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"286 403 OFFCURVE",
"329 338 OFFCURVE",
"329 270 QCURVE SMOOTH",
"329 251 OFFCURVE",
"319 237 OFFCURVE",
"309 237 QCURVE SMOOTH",
"127 237 LINE",
"127 311 OFFCURVE",
"180 403 OFFCURVE",
"236 403 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
11 10 2 1 0 1 74 0 4 0 0 1 4 0 101 7 1 5 5 3 95 6 1 3 3 28 75 0 1 1 2 95 0 2 2 26 2 76 20 20 0 0 20 29 20 28 24 22 0 19 0 18 37 34 19 8 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 449;
},
{
anchors = (
{
name = bottom;
position = "{242, 0}";
},
{
name = ogonek;
position = "{325, 0}";
},
{
name = top;
position = "{248, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"134 435 OFFCURVE",
"20 326 OFFCURVE",
"20 211 QCURVE SMOOTH",
"20 98 OFFCURVE",
"130 -10 OFFCURVE",
"249 -10 QCURVE SMOOTH",
"320 -10 OFFCURVE",
"421 44 OFFCURVE",
"444 93 QCURVE",
"417 112 LINE",
"401 78 OFFCURVE",
"333 31 OFFCURVE",
"286 31 QCURVE SMOOTH",
"223 32 OFFCURVE",
"160 122 OFFCURVE",
"160 208 QCURVE",
"448 208 LINE",
"448 245 LINE",
"447 336 OFFCURVE",
"338 435 OFFCURVE",
"247 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"281 401 OFFCURVE",
"314 339 OFFCURVE",
"314 274 QCURVE SMOOTH",
"314 255 OFFCURVE",
"304 241 OFFCURVE",
"294 241 QCURVE SMOOTH",
"161 241 LINE",
"161 312 OFFCURVE",
"201 401 OFFCURVE",
"244 401 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"134 435 OFFCURVE",
"20 326 OFFCURVE",
"20 211 QCURVE SMOOTH",
"20 -10 OFFCURVE",
"245 -10 QCURVE SMOOTH",
"316 -10 OFFCURVE",
"421 44 OFFCURVE",
"444 93 QCURVE",
"417 112 LINE",
"401 78 OFFCURVE",
"333 31 OFFCURVE",
"286 31 QCURVE SMOOTH",
"223 32 OFFCURVE",
"160 122 OFFCURVE",
"160 208 QCURVE",
"448 208 LINE",
"448 245 LINE",
"447 336 OFFCURVE",
"338 435 OFFCURVE",
"247 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"281 401 OFFCURVE",
"314 339 OFFCURVE",
"314 274 QCURVE SMOOTH",
"314 255 OFFCURVE",
"304 241 OFFCURVE",
"294 241 QCURVE SMOOTH",
"161 241 LINE",
"161 312 OFFCURVE",
"201 401 OFFCURVE",
"244 401 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
11 10 2 1 0 1 74 0 4 0 0 1 4 0 101 7 1 5 5 3 95 6 1 3 3 28 75 0 1 1 2 95 0 2 2 26 2 76 21 21 0 0 21 30 21 29 25 23 0 20 0 19 37 34 19 8 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 468;
}
);
leftKerningGroup = c;
note = e;
rightKerningGroup = e;
unicode = 0065;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 408, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 408, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 0115;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 439, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = ecaron;
unicode = 011B;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 428, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 439, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 428, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EC5;
},
{
glyphname = edblgrave;
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 352, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 0205;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 423, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 326, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 369, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = edotaccent;
unicode = 0117;
},
{
glyphname = edotbelow;
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EB9;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 346, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = egrave;
unicode = 00E8;
},
{
glyphname = ehookabove;
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 408, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 0207;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 459, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 470, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
leftKerningGroup = c;
note = emacron;
unicode = 0113;
},
{
glyphname = eogonek;
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 450, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
28 27 2 4 3 9 1 1 4 38 1 5 1 3 74 0 6 0 3 4 6 3 101 0 5 0 0 5 0 99 8 1 7 7 2 95 0 2 2 28 75 0 4 4 1 95 0 1 1 26 1 76 39 39 39 48 39 47 36 42 34 19 35 38 34 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 449;
},
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 476, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
8 7 2 1 0 27 1 4 1 19 18 2 2 4 3 74 8 1 7 0 0 1 7 0 101 0 2 0 3 2 3 99 0 6 6 5 95 0 5 5 28 75 0 1 1 4 95 0 4 4 26 4 76 39 39 39 48 39 47 39 36 37 36 42 34 16 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 468;
}
);
leftKerningGroup = c;
note = eogonek;
unicode = 0119;
},
{
glyphname = etilde;
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 423, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 434, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 468;
}
);
unicode = 1EBD;
},
{
glyphname = schwa;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"312 -10 OFFCURVE",
"414 102 OFFCURVE",
"414 211 QCURVE SMOOTH",
"414 430 OFFCURVE",
"211 430 QCURVE SMOOTH",
"154 430 OFFCURVE",
"59 375 OFFCURVE",
"39 327 QCURVE",
"62 310 LINE",
"78 347 OFFCURVE",
"147 397 OFFCURVE",
"197 397 QCURVE SMOOTH",
"260 396 OFFCURVE",
"323 299 OFFCURVE",
"323 208 QCURVE",
"35 208 LINE",
"35 179 LINE",
"37 91 OFFCURVE",
"134 -10 OFFCURVE",
"213 -10 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"163 17 OFFCURVE",
"120 82 OFFCURVE",
"120 150 QCURVE SMOOTH",
"120 169 OFFCURVE",
"130 183 OFFCURVE",
"140 183 QCURVE SMOOTH",
"322 183 LINE",
"322 109 OFFCURVE",
"269 17 OFFCURVE",
"213 17 QCURVE SMOOTH"
);
}
);
width = 449;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"334 -10 OFFCURVE",
"448 99 OFFCURVE",
"448 214 QCURVE SMOOTH",
"448 435 OFFCURVE",
"223 435 QCURVE SMOOTH",
"152 435 OFFCURVE",
"47 381 OFFCURVE",
"24 332 QCURVE",
"51 313 LINE",
"67 347 OFFCURVE",
"135 394 OFFCURVE",
"182 394 QCURVE SMOOTH",
"245 393 OFFCURVE",
"308 303 OFFCURVE",
"308 217 QCURVE",
"20 217 LINE",
"20 180 LINE",
"21 89 OFFCURVE",
"130 -10 OFFCURVE",
"221 -10 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 24 OFFCURVE",
"154 86 OFFCURVE",
"154 151 QCURVE SMOOTH",
"154 170 OFFCURVE",
"164 184 OFFCURVE",
"174 184 QCURVE SMOOTH",
"307 184 LINE",
"307 113 OFFCURVE",
"267 24 OFFCURVE",
"224 24 QCURVE SMOOTH"
);
}
);
width = 468;
}
);
unicode = 0259;
},
{
glyphname = f;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"277 395 LINE",
"277 420 LINE",
"170 420 LINE",
"170 449 LINE SMOOTH",
"170 471 OFFCURVE",
"167 523 QCURVE SMOOTH",
"164 561 OFFCURVE",
"164 589 QCURVE SMOOTH",
"164 657 OFFCURVE",
"216 709 OFFCURVE",
"252 709 QCURVE SMOOTH",
"277 709 OFFCURVE",
"303 679 OFFCURVE",
"303 657 QCURVE SMOOTH",
"303 645 OFFCURVE",
"298 633 QCURVE",
"294 621 OFFCURVE",
"294 613 QCURVE SMOOTH",
"294 584 OFFCURVE",
"329 584 QCURVE SMOOTH",
"353 584 OFFCURVE",
"377 612 OFFCURVE",
"377 633 QCURVE SMOOTH",
"377 676 OFFCURVE",
"306 736 OFFCURVE",
"259 736 QCURVE SMOOTH",
"85 736 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
18 1 4 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 4 5 2 5 4 112 0 3 0 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 8 1 0 0 9 93 0 9 9 21 9 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 4 5 2 5 4 2 126 0 3 0 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 8 1 0 0 9 93 0 9 9 21 9 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
43 42 34 17 24 39 36 34 17 18 32 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 296;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"276 0 LINE",
"276 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"279 393 LINE",
"279 425 LINE",
"200 425 LINE",
"200 449 LINE SMOOTH",
"200 482 OFFCURVE",
"197 518 QCURVE SMOOTH",
"196 531 OFFCURVE",
"194 569 OFFCURVE",
"194 594 QCURVE SMOOTH",
"194 655 OFFCURVE",
"224 702 OFFCURVE",
"251 702 QCURVE SMOOTH",
"270 702 OFFCURVE",
"288 676 OFFCURVE",
"288 658 QCURVE SMOOTH",
"288 645 OFFCURVE",
"283 633 QCURVE",
"279 619 OFFCURVE",
"279 612 QCURVE SMOOTH",
"279 593 OFFCURVE",
"310 572 OFFCURVE",
"333 572 QCURVE SMOOTH",
"365 572 OFFCURVE",
"397 608 OFFCURVE",
"397 633 QCURVE SMOOTH",
"397 676 OFFCURVE",
"314 736 OFFCURVE",
"253 736 QCURVE SMOOTH",
"149 736 OFFCURVE",
"70 588 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"276 0 LINE",
"276 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"279 393 LINE",
"279 425 LINE",
"200 425 LINE",
"200 449 LINE SMOOTH",
"200 482 OFFCURVE",
"197 518 QCURVE SMOOTH",
"194 569 OFFCURVE",
"194 594 QCURVE SMOOTH",
"194 655 OFFCURVE",
"224 702 OFFCURVE",
"251 702 QCURVE SMOOTH",
"270 702 OFFCURVE",
"288 676 OFFCURVE",
"288 658 QCURVE SMOOTH",
"288 645 OFFCURVE",
"283 633 QCURVE",
"279 618 OFFCURVE",
"279 612 QCURVE SMOOTH",
"279 572 OFFCURVE",
"333 572 QCURVE SMOOTH",
"365 572 OFFCURVE",
"397 608 OFFCURVE",
"397 633 QCURVE SMOOTH",
"397 676 OFFCURVE",
"314 736 OFFCURVE",
"253 736 QCURVE SMOOTH",
"70 736 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
20 1 4 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 4 5 2 5 4 112 0 3 0 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 8 1 0 0 9 93 0 9 9 21 9 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 4 5 2 5 4 2 126 0 3 0 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 8 1 0 0 9 93 0 9 9 21 9 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
45 44 34 17 24 40 36 35 17 18 32 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 299;
}
);
note = f;
rightKerningGroup = f;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
anchors = (
{
name = top;
position = "{227, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"398 447 OFFCURVE",
"411 431 OFFCURVE",
"423 424 OFFCURVE",
"435 424 QCURVE SMOOTH",
"449 424 OFFCURVE",
"467 448 OFFCURVE",
"467 461 QCURVE SMOOTH",
"467 478 OFFCURVE",
"446 505 OFFCURVE",
"421 505 QCURVE SMOOTH",
"401 505 OFFCURVE",
"328 452 OFFCURVE",
"303 418 QCURVE",
"269 430 OFFCURVE",
"227 430 QCURVE SMOOTH",
"152 430 OFFCURVE",
"57 347 OFFCURVE",
"57 280 QCURVE SMOOTH",
"57 240 OFFCURVE",
"92 179 OFFCURVE",
"122 160 QCURVE",
"95 138 LINE SMOOTH",
"69 117 OFFCURVE",
"48 90 OFFCURVE",
"48 71 QCURVE SMOOTH",
"48 19 OFFCURVE",
"122 5 QCURVE",
"77 -16 OFFCURVE",
"32 -72 OFFCURVE",
"32 -112 QCURVE SMOOTH",
"32 -177 OFFCURVE",
"127 -245 OFFCURVE",
"215 -245 QCURVE SMOOTH",
"286 -245 OFFCURVE",
"394 -203 OFFCURVE",
"453 -125 OFFCURVE",
"453 -74 QCURVE SMOOTH",
"453 1 OFFCURVE",
"378 65 OFFCURVE",
"304 65 QCURVE SMOOTH",
"171 65 LINE SMOOTH",
"115 65 OFFCURVE",
"115 102 QCURVE SMOOTH",
"115 125 OFFCURVE",
"149 146 QCURVE",
"185 131 OFFCURVE",
"227 131 QCURVE SMOOTH",
"304 131 OFFCURVE",
"398 214 OFFCURVE",
"398 280 QCURVE SMOOTH",
"398 372 OFFCURVE",
"324 409 QCURVE",
"337 425 OFFCURVE",
"380 447 OFFCURVE",
"390 447 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"195 154 OFFCURVE",
"160 177 OFFCURVE",
"146 231 OFFCURVE",
"146 280 QCURVE SMOOTH",
"146 350 OFFCURVE",
"181 403 OFFCURVE",
"227 403 QCURVE SMOOTH",
"273 403 OFFCURVE",
"309 347 OFFCURVE",
"309 280 QCURVE SMOOTH",
"309 211 OFFCURVE",
"274 154 OFFCURVE",
"227 154 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 0 LINE SMOOTH",
"340 0 OFFCURVE",
"387 -40 OFFCURVE",
"387 -81 QCURVE SMOOTH",
"387 -143 OFFCURVE",
"297 -219 OFFCURVE",
"214 -219 QCURVE SMOOTH",
"148 -219 OFFCURVE",
"81 -159 OFFCURVE",
"81 -110 QCURVE SMOOTH",
"81 -83 OFFCURVE",
"110 -32 OFFCURVE",
"160 0 OFFCURVE",
"189 0 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"398 447 OFFCURVE",
"411 431 OFFCURVE",
"423 424 OFFCURVE",
"435 424 QCURVE SMOOTH",
"449 424 OFFCURVE",
"467 448 OFFCURVE",
"467 461 QCURVE SMOOTH",
"467 478 OFFCURVE",
"446 505 OFFCURVE",
"423 505 QCURVE SMOOTH",
"375 505 OFFCURVE",
"303 418 QCURVE",
"269 430 OFFCURVE",
"227 430 QCURVE SMOOTH",
"152 430 OFFCURVE",
"57 347 OFFCURVE",
"57 280 QCURVE SMOOTH",
"57 203 OFFCURVE",
"122 160 QCURVE",
"95 138 LINE SMOOTH",
"69 117 OFFCURVE",
"48 90 OFFCURVE",
"48 71 QCURVE SMOOTH",
"48 19 OFFCURVE",
"122 5 QCURVE",
"32 -35 OFFCURVE",
"32 -112 QCURVE SMOOTH",
"32 -177 OFFCURVE",
"127 -245 OFFCURVE",
"215 -245 QCURVE SMOOTH",
"322 -245 OFFCURVE",
"453 -151 OFFCURVE",
"453 -74 QCURVE SMOOTH",
"453 1 OFFCURVE",
"378 65 OFFCURVE",
"304 65 QCURVE SMOOTH",
"171 65 LINE SMOOTH",
"115 65 OFFCURVE",
"115 102 QCURVE SMOOTH",
"115 125 OFFCURVE",
"149 146 QCURVE",
"185 131 OFFCURVE",
"227 131 QCURVE SMOOTH",
"304 131 OFFCURVE",
"398 214 OFFCURVE",
"398 280 QCURVE SMOOTH",
"398 372 OFFCURVE",
"324 409 QCURVE",
"337 425 OFFCURVE",
"380 447 OFFCURVE",
"390 447 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 154 OFFCURVE",
"146 217 OFFCURVE",
"146 280 QCURVE SMOOTH",
"146 350 OFFCURVE",
"181 403 OFFCURVE",
"227 403 QCURVE SMOOTH",
"273 403 OFFCURVE",
"309 347 OFFCURVE",
"309 280 QCURVE SMOOTH",
"309 211 OFFCURVE",
"274 154 OFFCURVE",
"227 154 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 0 LINE SMOOTH",
"340 0 OFFCURVE",
"387 -40 OFFCURVE",
"387 -81 QCURVE SMOOTH",
"387 -143 OFFCURVE",
"297 -219 OFFCURVE",
"214 -219 QCURVE SMOOTH",
"148 -219 OFFCURVE",
"81 -159 OFFCURVE",
"81 -110 QCURVE SMOOTH",
"81 -68 OFFCURVE",
"146 0 OFFCURVE",
"189 0 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"310 430 OFFCURVE",
"227 430 QCURVE SMOOTH",
"152 430 OFFCURVE",
"57 347 OFFCURVE",
"57 280 QCURVE SMOOTH",
"57 203 OFFCURVE",
"122 160 QCURVE",
"95 138 LINE SMOOTH",
"69 117 OFFCURVE",
"48 90 OFFCURVE",
"48 71 QCURVE SMOOTH",
"48 19 OFFCURVE",
"122 5 QCURVE",
"32 -35 OFFCURVE",
"32 -112 QCURVE SMOOTH",
"32 -177 OFFCURVE",
"127 -245 OFFCURVE",
"215 -245 QCURVE SMOOTH",
"322 -245 OFFCURVE",
"453 -151 OFFCURVE",
"453 -74 QCURVE SMOOTH",
"453 1 OFFCURVE",
"378 65 OFFCURVE",
"304 65 QCURVE SMOOTH",
"171 65 LINE SMOOTH",
"115 65 OFFCURVE",
"115 102 QCURVE SMOOTH",
"115 125 OFFCURVE",
"149 146 QCURVE",
"185 131 OFFCURVE",
"227 131 QCURVE SMOOTH",
"304 131 OFFCURVE",
"398 214 OFFCURVE",
"398 280 QCURVE SMOOTH",
"398 348 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"174 154 OFFCURVE",
"146 217 OFFCURVE",
"146 280 QCURVE SMOOTH",
"146 350 OFFCURVE",
"181 403 OFFCURVE",
"227 403 QCURVE SMOOTH",
"273 403 OFFCURVE",
"309 347 OFFCURVE",
"309 280 QCURVE SMOOTH",
"309 211 OFFCURVE",
"274 154 OFFCURVE",
"227 154 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 0 LINE SMOOTH",
"340 0 OFFCURVE",
"387 -40 OFFCURVE",
"387 -81 QCURVE SMOOTH",
"387 -143 OFFCURVE",
"297 -219 OFFCURVE",
"214 -219 QCURVE SMOOTH",
"148 -219 OFFCURVE",
"81 -159 OFFCURVE",
"81 -110 QCURVE SMOOTH",
"81 -68 OFFCURVE",
"146 0 OFFCURVE",
"189 0 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"383 422 OFFCURVE",
"339 405 OFFCURVE",
"308 417 QCURVE",
"345 388 LINE",
"440 399 OFFCURVE",
"440 481 QCURVE SMOOTH",
"440 532 OFFCURVE",
"395 532 QCURVE SMOOTH",
"354 532 OFFCURVE",
"354 493 QCURVE SMOOTH",
"354 477 OFFCURVE",
"383 459 OFFCURVE",
"383 448 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 111 values pushed */
41 2 2 7 5 33 1 8 7 9 1 0 8 27 1 9 1 4 74 11 1 6 4 3 4 6 3 126 0 4 0 5 7 4 5 103 12 1 8 0 0 1 8 0 103 0 7 7 3 95 0 3 3 28 75 0 1 1 9 93 13 1 9 9 21 75 0 10 10 2 95 0 2 2 30 2 76 69 68 55 55 0 0 76 74 68 81 69 80 55 67 55 66 61 59 0 54 0 53 51 49 45 43 40 38 37 52 38 14 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
anchors = (
{
name = top;
position = "{247, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"418 449 OFFCURVE",
"427 442 OFFCURVE",
"433 434 QCURVE SMOOTH",
"441 424 OFFCURVE",
"455 414 OFFCURVE",
"470 414 QCURVE SMOOTH",
"492 414 OFFCURVE",
"512 442 OFFCURVE",
"512 459 QCURVE SMOOTH",
"512 479 OFFCURVE",
"484 510 OFFCURVE",
"451 510 QCURVE SMOOTH",
"389 510 OFFCURVE",
"326 427 QCURVE",
"293 435 OFFCURVE",
"248 435 QCURVE SMOOTH",
"158 435 OFFCURVE",
"49 361 OFFCURVE",
"49 295 QCURVE SMOOTH",
"49 216 OFFCURVE",
"128 181 QCURVE",
"97 154 LINE SMOOTH",
"70 130 OFFCURVE",
"50 96 OFFCURVE",
"50 75 QCURVE SMOOTH",
"50 44 OFFCURVE",
"97 3 OFFCURVE",
"136 -5 QCURVE",
"36 -49 OFFCURVE",
"36 -123 QCURVE SMOOTH",
"36 -182 OFFCURVE",
"140 -245 OFFCURVE",
"235 -245 QCURVE SMOOTH",
"353 -245 OFFCURVE",
"491 -142 OFFCURVE",
"491 -51 QCURVE SMOOTH",
"491 28 OFFCURVE",
"395 99 OFFCURVE",
"304 99 QCURVE SMOOTH",
"205 99 LINE SMOOTH",
"147 99 OFFCURVE",
"147 131 QCURVE SMOOTH",
"147 150 OFFCURVE",
"168 168 QCURVE",
"205 159 OFFCURVE",
"247 159 QCURVE SMOOTH",
"337 159 OFFCURVE",
"443 232 OFFCURVE",
"443 298 QCURVE SMOOTH",
"443 384 OFFCURVE",
"356 418 QCURVE",
"366 431 OFFCURVE",
"398 449 OFFCURVE",
"410 449 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 189 OFFCURVE",
"183 235 OFFCURVE",
"183 294 QCURVE SMOOTH",
"183 354 OFFCURVE",
"211 401 OFFCURVE",
"245 401 QCURVE SMOOTH",
"280 401 OFFCURVE",
"309 352 OFFCURVE",
"309 295 QCURVE SMOOTH",
"309 238 OFFCURVE",
"280 189 OFFCURVE",
"244 189 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 -11 LINE SMOOTH",
"338 -11 OFFCURVE",
"382 -49 OFFCURVE",
"382 -89 QCURVE SMOOTH",
"382 -144 OFFCURVE",
"307 -212 OFFCURVE",
"243 -212 QCURVE SMOOTH",
"184 -212 OFFCURVE",
"128 -160 OFFCURVE",
"128 -114 QCURVE SMOOTH",
"128 -80 OFFCURVE",
"162 -21 OFFCURVE",
"187 -11 QCURVE",
"189 -11 LINE"
);
},
{
closed = 1;
nodes = (
"422 449 OFFCURVE",
"441 424 OFFCURVE",
"455 414 OFFCURVE",
"470 414 QCURVE SMOOTH",
"492 414 OFFCURVE",
"512 442 OFFCURVE",
"512 459 QCURVE SMOOTH",
"512 479 OFFCURVE",
"484 510 OFFCURVE",
"451 510 QCURVE SMOOTH",
"389 510 OFFCURVE",
"326 427 QCURVE",
"293 435 OFFCURVE",
"248 435 QCURVE SMOOTH",
"158 435 OFFCURVE",
"49 361 OFFCURVE",
"49 295 QCURVE SMOOTH",
"49 216 OFFCURVE",
"128 181 QCURVE",
"97 154 LINE SMOOTH",
"70 130 OFFCURVE",
"50 96 OFFCURVE",
"50 75 QCURVE SMOOTH",
"50 15 OFFCURVE",
"136 -5 QCURVE",
"36 -49 OFFCURVE",
"36 -123 QCURVE SMOOTH",
"36 -182 OFFCURVE",
"140 -245 OFFCURVE",
"235 -245 QCURVE SMOOTH",
"353 -245 OFFCURVE",
"491 -142 OFFCURVE",
"491 -51 QCURVE SMOOTH",
"491 28 OFFCURVE",
"395 99 OFFCURVE",
"304 99 QCURVE SMOOTH",
"205 99 LINE SMOOTH",
"147 99 OFFCURVE",
"147 131 QCURVE SMOOTH",
"147 150 OFFCURVE",
"168 168 QCURVE",
"205 159 OFFCURVE",
"247 159 QCURVE SMOOTH",
"337 159 OFFCURVE",
"443 232 OFFCURVE",
"443 298 QCURVE SMOOTH",
"443 384 OFFCURVE",
"356 418 QCURVE",
"366 431 OFFCURVE",
"398 449 OFFCURVE",
"411 449 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 189 OFFCURVE",
"183 235 OFFCURVE",
"183 294 QCURVE SMOOTH",
"183 354 OFFCURVE",
"211 401 OFFCURVE",
"245 401 QCURVE SMOOTH",
"280 401 OFFCURVE",
"309 352 OFFCURVE",
"309 295 QCURVE SMOOTH",
"309 238 OFFCURVE",
"280 189 OFFCURVE",
"244 189 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 -11 LINE SMOOTH",
"338 -11 OFFCURVE",
"382 -49 OFFCURVE",
"382 -89 QCURVE SMOOTH",
"382 -144 OFFCURVE",
"307 -212 OFFCURVE",
"243 -212 QCURVE SMOOTH",
"184 -212 OFFCURVE",
"128 -160 OFFCURVE",
"128 -114 QCURVE SMOOTH",
"128 -80 OFFCURVE",
"162 -21 OFFCURVE",
"189 -11 QCURVE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"350 435 OFFCURVE",
"248 435 QCURVE SMOOTH",
"158 435 OFFCURVE",
"49 361 OFFCURVE",
"49 295 QCURVE SMOOTH",
"49 216 OFFCURVE",
"128 181 QCURVE",
"97 154 LINE SMOOTH",
"70 130 OFFCURVE",
"50 96 OFFCURVE",
"50 75 QCURVE SMOOTH",
"50 15 OFFCURVE",
"136 -5 QCURVE",
"36 -49 OFFCURVE",
"36 -123 QCURVE SMOOTH",
"36 -182 OFFCURVE",
"140 -245 OFFCURVE",
"235 -245 QCURVE SMOOTH",
"353 -245 OFFCURVE",
"491 -142 OFFCURVE",
"491 -51 QCURVE SMOOTH",
"491 28 OFFCURVE",
"395 99 OFFCURVE",
"304 99 QCURVE SMOOTH",
"205 99 LINE SMOOTH",
"147 99 OFFCURVE",
"147 131 QCURVE SMOOTH",
"147 150 OFFCURVE",
"168 168 QCURVE",
"205 159 OFFCURVE",
"247 159 QCURVE SMOOTH",
"337 159 OFFCURVE",
"443 232 OFFCURVE",
"443 298 QCURVE SMOOTH",
"443 354 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"210 189 OFFCURVE",
"183 235 OFFCURVE",
"183 294 QCURVE SMOOTH",
"183 354 OFFCURVE",
"211 401 OFFCURVE",
"245 401 QCURVE SMOOTH",
"280 401 OFFCURVE",
"309 352 OFFCURVE",
"309 295 QCURVE SMOOTH",
"309 238 OFFCURVE",
"280 189 OFFCURVE",
"244 189 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 -11 LINE SMOOTH",
"338 -11 OFFCURVE",
"382 -49 OFFCURVE",
"382 -89 QCURVE SMOOTH",
"382 -144 OFFCURVE",
"307 -212 OFFCURVE",
"243 -212 QCURVE SMOOTH",
"184 -212 OFFCURVE",
"128 -160 OFFCURVE",
"128 -114 QCURVE SMOOTH",
"128 -80 OFFCURVE",
"162 -21 OFFCURVE",
"189 -11 QCURVE"
);
},
{
closed = 1;
nodes = (
"429 426 OFFCURVE",
"378 411 OFFCURVE",
"345 422 QCURVE",
"390 384 LINE",
"497 395 OFFCURVE",
"497 491 QCURVE SMOOTH",
"497 550 OFFCURVE",
"444 550 QCURVE SMOOTH",
"397 550 OFFCURVE",
"397 505 QCURVE SMOOTH",
"397 487 OFFCURVE",
"429 467 OFFCURVE",
"429 454 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
39 2 2 5 3 32 9 2 0 8 25 1 10 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
0 5 3 7 6 5 112 0 4 11 1 6 3 4 6 103 12 1 8 0 0 1 8 0 103 0 7 7 3 95 0 3 3 28 75 0 1 1 10 93 13 1 10 10 18 75 0 9 9 2 95 0 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 58 values pushed */
0 5 3 7 3 5 7 126 0 4 11 1 6 3 4 6 103 12 1 8 0 0 1 8 0 103 0 7 7 3 95 0 3 3 28 75 0 1 1 10 93 13 1 10 10 18 75 0 9 9 2 95 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 31 values pushed */
66 66 54 54 0 0 66 79 66 78 74 72 54 65 54 64 60 58 0 53 0 52 36 34 47 36 52 38 14 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 511;
}
);
leftKerningGroup = g;
note = g;
unicode = 0067;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 398, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 460;
},
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 418, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 511;
}
);
leftKerningGroup = g;
note = gbreve;
unicode = 011F;
},
{
glyphname = gcaron;
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 418, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 460;
},
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 438, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 511;
}
);
unicode = 01E7;
},
{
glyphname = gcircumflex;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"335 514 OFFCURVE",
"323 528 OFFCURVE",
"284 577 OFFCURVE",
"230 649 OFFCURVE",
"222 649 QCURVE SMOOTH",
"214 649 OFFCURVE",
"160 577 OFFCURVE",
"121 528 OFFCURVE",
"109 514 OFFCURVE",
"109 511 QCURVE SMOOTH",
"109 503 OFFCURVE",
"116 503 QCURVE SMOOTH",
"123 503 OFFCURVE",
"139 515 QCURVE SMOOTH",
"222 579 LINE",
"305 515 LINE SMOOTH",
"321 503 OFFCURVE",
"328 503 QCURVE SMOOTH",
"335 503 OFFCURVE",
"335 511 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"310 430 OFFCURVE",
"227 430 QCURVE SMOOTH",
"152 430 OFFCURVE",
"57 347 OFFCURVE",
"57 280 QCURVE SMOOTH",
"57 203 OFFCURVE",
"122 160 QCURVE",
"95 138 LINE SMOOTH",
"69 117 OFFCURVE",
"48 90 OFFCURVE",
"48 71 QCURVE SMOOTH",
"48 19 OFFCURVE",
"122 5 QCURVE",
"32 -35 OFFCURVE",
"32 -112 QCURVE SMOOTH",
"32 -177 OFFCURVE",
"127 -245 OFFCURVE",
"215 -245 QCURVE SMOOTH",
"322 -245 OFFCURVE",
"453 -151 OFFCURVE",
"453 -74 QCURVE SMOOTH",
"453 1 OFFCURVE",
"378 65 OFFCURVE",
"304 65 QCURVE SMOOTH",
"171 65 LINE SMOOTH",
"115 65 OFFCURVE",
"115 102 QCURVE SMOOTH",
"115 125 OFFCURVE",
"149 146 QCURVE",
"185 131 OFFCURVE",
"227 131 QCURVE SMOOTH",
"304 131 OFFCURVE",
"398 214 OFFCURVE",
"398 280 QCURVE SMOOTH",
"398 348 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"174 154 OFFCURVE",
"146 217 OFFCURVE",
"146 280 QCURVE SMOOTH",
"146 350 OFFCURVE",
"181 403 OFFCURVE",
"227 403 QCURVE SMOOTH",
"273 403 OFFCURVE",
"309 347 OFFCURVE",
"309 280 QCURVE SMOOTH",
"309 211 OFFCURVE",
"274 154 OFFCURVE",
"227 154 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 0 LINE SMOOTH",
"340 0 OFFCURVE",
"387 -40 OFFCURVE",
"387 -81 QCURVE SMOOTH",
"387 -143 OFFCURVE",
"297 -219 OFFCURVE",
"214 -219 QCURVE SMOOTH",
"148 -219 OFFCURVE",
"81 -159 OFFCURVE",
"81 -110 QCURVE SMOOTH",
"81 -68 OFFCURVE",
"146 0 OFFCURVE",
"189 0 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"383 422 OFFCURVE",
"339 405 OFFCURVE",
"308 417 QCURVE",
"345 388 LINE",
"440 399 OFFCURVE",
"440 481 QCURVE SMOOTH",
"440 532 OFFCURVE",
"395 532 QCURVE SMOOTH",
"354 532 OFFCURVE",
"354 493 QCURVE SMOOTH",
"354 477 OFFCURVE",
"383 459 OFFCURVE",
"383 448 QCURVE SMOOTH"
);
}
);
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"370 505 OFFCURVE",
"357 522 OFFCURVE",
"328 563 OFFCURVE",
"263 649 OFFCURVE",
"247 649 QCURVE SMOOTH",
"231 649 OFFCURVE",
"170 563 OFFCURVE",
"138 522 OFFCURVE",
"124 505 OFFCURVE",
"124 501 QCURVE SMOOTH",
"124 493 OFFCURVE",
"133 493 QCURVE SMOOTH",
"144 493 OFFCURVE",
"160 505 QCURVE SMOOTH",
"247 571 LINE",
"333 505 LINE SMOOTH",
"349 493 OFFCURVE",
"360 493 QCURVE SMOOTH",
"370 493 OFFCURVE",
"370 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"350 435 OFFCURVE",
"248 435 QCURVE SMOOTH",
"158 435 OFFCURVE",
"49 361 OFFCURVE",
"49 295 QCURVE SMOOTH",
"49 216 OFFCURVE",
"128 181 QCURVE",
"97 154 LINE SMOOTH",
"70 130 OFFCURVE",
"50 96 OFFCURVE",
"50 75 QCURVE SMOOTH",
"50 15 OFFCURVE",
"136 -5 QCURVE",
"36 -49 OFFCURVE",
"36 -123 QCURVE SMOOTH",
"36 -182 OFFCURVE",
"140 -245 OFFCURVE",
"235 -245 QCURVE SMOOTH",
"353 -245 OFFCURVE",
"491 -142 OFFCURVE",
"491 -51 QCURVE SMOOTH",
"491 28 OFFCURVE",
"395 99 OFFCURVE",
"304 99 QCURVE SMOOTH",
"205 99 LINE SMOOTH",
"147 99 OFFCURVE",
"147 131 QCURVE SMOOTH",
"147 150 OFFCURVE",
"168 168 QCURVE",
"205 159 OFFCURVE",
"247 159 QCURVE SMOOTH",
"337 159 OFFCURVE",
"443 232 OFFCURVE",
"443 298 QCURVE SMOOTH",
"443 354 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"210 189 OFFCURVE",
"183 235 OFFCURVE",
"183 294 QCURVE SMOOTH",
"183 354 OFFCURVE",
"211 401 OFFCURVE",
"245 401 QCURVE SMOOTH",
"280 401 OFFCURVE",
"309 352 OFFCURVE",
"309 295 QCURVE SMOOTH",
"309 238 OFFCURVE",
"280 189 OFFCURVE",
"244 189 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 -11 LINE SMOOTH",
"338 -11 OFFCURVE",
"382 -49 OFFCURVE",
"382 -89 QCURVE SMOOTH",
"382 -144 OFFCURVE",
"307 -212 OFFCURVE",
"243 -212 QCURVE SMOOTH",
"184 -212 OFFCURVE",
"128 -160 OFFCURVE",
"128 -114 QCURVE SMOOTH",
"128 -80 OFFCURVE",
"162 -21 OFFCURVE",
"189 -11 QCURVE"
);
},
{
closed = 1;
nodes = (
"429 426 OFFCURVE",
"378 411 OFFCURVE",
"345 422 QCURVE",
"390 384 LINE",
"497 395 OFFCURVE",
"497 491 QCURVE SMOOTH",
"497 550 OFFCURVE",
"444 550 QCURVE SMOOTH",
"397 550 OFFCURVE",
"397 505 QCURVE SMOOTH",
"397 487 OFFCURVE",
"429 467 OFFCURVE",
"429 454 QCURVE SMOOTH"
);
}
);
width = 511;
}
);
unicode = 011D;
},
{
glyphname = gcommaaccent;
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 398, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 135 values pushed */
59 20 2 9 7 51 1 10 9 27 1 2 10 45 1 11 3 4 74 6 5 2 0 72 14 1 8 1 5 1 8 5 126 0 0 13 1 1 8 0 1 103 0 6 0 7 9 6 7 103 15 1 10 0 2 3 10 2 103 0 9 9 5 95 0 5 5 28 75 0 3 3 11 93 16 1 11 11 21 75 0 12 12 4 95 0 4 4 30 4 76 87 86 73 73 18 18 0 0 94 92 86 99 87 98 73 85 73 84 79 77 18 72 18 71 69 67 63 61 58 56 40 38 33 30 26 24 0 17 0 16 42 17 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 418, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
57 20 2 7 5 50 27 2 2 10 43 1 12 3 3 74 6 5 2 0 72 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 68 values pushed */
0 7 5 9 8 7 112 0 6 14 1 8 5 6 8 103 15 1 10 0 2 3 10 2 103 13 1 1 1 0 95 0 0 0 17 75 0 9 9 5 95 0 5 5 28 75 0 3 3 12 93 16 1 12 12 18 75 0 11 11 4 95 0 4 4 30 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 69 values pushed */
0 7 5 9 5 7 9 126 0 6 14 1 8 5 6 8 103 15 1 10 0 2 3 10 2 103 13 1 1 1 0 95 0 0 0 17 75 0 9 9 5 95 0 5 5 28 75 0 3 3 12 93 16 1 12 12 18 75 0 11 11 4 95 0 4 4 30 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 44 values pushed */
84 84 72 72 18 18 0 0 84 97 84 96 92 90 72 83 72 82 78 76 18 71 18 70 66 64 60 58 56 54 39 37 33 30 26 24 0 17 0 16 42 17 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 511;
}
);
leftKerningGroup = g;
note = gcommaaccent;
unicode = 0123;
},
{
glyphname = gdotaccent;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 316, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 460;
},
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 511;
}
);
unicode = 0121;
},
{
glyphname = h;
layers = (
{
anchors = (
{
name = bottom;
position = "{271, 0}";
},
{
name = center;
position = "{145, 544}";
},
{
name = top;
position = "{125, 677}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"455 24 OFFCURVE",
"455 43 QCURVE SMOOTH",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"171 730 LINE",
"35 730 LINE",
"35 705 LINE",
"72 707 LINE",
"85 707 OFFCURVE",
"85 686 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 219 LINE",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"332 398 OFFCURVE",
"360 370 OFFCURVE",
"369 318 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH",
"369 27 OFFCURVE",
"356 24 QCURVE",
"310 26 LINE",
"310 0 LINE",
"505 0 LINE",
"505 26 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"455 24 OFFCURVE",
"455 43 QCURVE SMOOTH",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"171 730 LINE",
"35 730 LINE",
"35 705 LINE",
"72 707 LINE",
"85 707 OFFCURVE",
"85 686 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 219 LINE",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"340 398 OFFCURVE",
"369 349 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH",
"369 27 OFFCURVE",
"356 24 QCURVE",
"310 26 LINE",
"310 0 LINE",
"505 0 LINE",
"505 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
31 1 1 2 1 74 0 7 0 6 8 7 6 103 0 2 2 8 95 0 8 8 28 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 0 0 0 40 0 39 35 17 36 17 17 36 38 17 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 525;
},
{
anchors = (
{
name = bottom;
position = "{274, 0}";
},
{
name = center;
position = "{138, 544}";
},
{
name = top;
position = "{128, 677}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"495 32 LINE",
"482 32 OFFCURVE",
"482 51 QCURVE SMOOTH",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"197 730 LINE",
"20 730 LINE",
"20 697 LINE",
"53 699 LINE",
"66 696 OFFCURVE",
"66 679 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"249 0 LINE",
"249 34 LINE",
"210 32 LINE",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 198 LINE SMOOTH",
"197 258 OFFCURVE",
"229 344 OFFCURVE",
"278 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 346 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH",
"351 35 OFFCURVE",
"338 32 QCURVE",
"300 34 LINE",
"300 0 LINE",
"528 0 LINE",
"528 34 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"495 32 LINE",
"482 32 OFFCURVE",
"482 51 QCURVE SMOOTH",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"197 730 LINE",
"20 730 LINE",
"20 697 LINE",
"53 699 LINE",
"66 696 OFFCURVE",
"66 679 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"249 0 LINE",
"249 34 LINE",
"210 32 LINE",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 198 LINE SMOOTH",
"197 278 OFFCURVE",
"258 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 346 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH",
"351 35 OFFCURVE",
"338 32 QCURVE",
"300 34 LINE",
"300 0 LINE",
"528 0 LINE",
"528 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
31 1 1 2 1 74 0 7 0 6 8 7 6 101 0 2 2 8 95 0 8 8 28 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 0 0 0 40 0 39 35 17 21 17 17 37 37 17 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 539;
}
);
leftKerningGroup = h;
note = h;
rightKerningGroup = a;
unicode = 0068;
},
{
glyphname = hbar;
layers = (
{
components = (
{
name = h;
},
{
name = baraccent;
transform = "{1, 0, 0, 1, -55, 255}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = h;
},
{
name = baraccent;
transform = "{1, 0, 0, 1, -62, 255}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
unicode = 0127;
},
{
glyphname = hcircumflex;
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 316, 80}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = h;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 319, 80}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
unicode = 0125;
},
{
glyphname = hdotbelow;
layers = (
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 443, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
unicode = 1E25;
},
{
glyphname = i;
layers = (
{
anchors = (
{
name = bottom;
position = "{129, 0}";
},
{
name = ogonek;
position = "{127, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"97 643 OFFCURVE",
"67 617 OFFCURVE",
"67 596 QCURVE SMOOTH",
"67 573 OFFCURVE",
"97 548 OFFCURVE",
"121 548 QCURVE SMOOTH",
"146 548 OFFCURVE",
"176 573 OFFCURVE",
"176 596 QCURVE SMOOTH",
"176 617 OFFCURVE",
"145 643 OFFCURVE",
"121 643 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171 420 LINE",
"36 420 LINE",
"36 394 LINE",
"73 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"220 0 LINE",
"220 26 LINE",
"184 24 LINE SMOOTH",
"171 23 OFFCURVE",
"171 43 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
7 1 1 0 0 6 1 0 103 0 5 5 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 0 0 27 26 25 24 20 18 17 16 15 13 0 11 0 10 36 8 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
anchors = (
{
name = bottom;
position = "{135, 0}";
},
{
name = ogonek;
position = "{133, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"95 657 OFFCURVE",
"52 623 OFFCURVE",
"52 595 QCURVE SMOOTH",
"52 566 OFFCURVE",
"95 532 OFFCURVE",
"129 532 QCURVE SMOOTH",
"163 532 OFFCURVE",
"206 566 OFFCURVE",
"206 595 QCURVE SMOOTH",
"206 623 OFFCURVE",
"163 657 OFFCURVE",
"129 657 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 425 LINE",
"21 425 LINE",
"21 392 LINE",
"54 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 32 OFFCURVE",
"55 32 QCURVE SMOOTH",
"20 34 LINE",
"20 0 LINE",
"243 0 LINE",
"243 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
7 1 1 0 0 6 1 0 103 0 5 5 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 0 0 28 27 26 25 21 18 17 16 15 14 0 11 0 10 36 8 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
leftKerningGroup = i;
note = i;
unicode = 0069;
},
{
glyphname = idotless;
layers = (
{
anchors = (
{
name = bottom;
position = "{127, 0}";
},
{
name = top;
position = "{127, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"171 420 LINE",
"36 420 LINE",
"36 394 LINE",
"73 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"220 0 LINE",
"220 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 3 3 4 93 0 4 4 20 75 2 1 0 0 1 93 0 1 1 21 1 76 17 20 33 17 33 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
anchors = (
{
name = bottom;
position = "{131, 0}";
},
{
name = top;
position = "{131, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"197 425 LINE",
"21 425 LINE",
"21 392 LINE",
"54 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 32 OFFCURVE",
"55 32 QCURVE SMOOTH",
"20 34 LINE",
"20 0 LINE",
"243 0 LINE",
"243 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 3 3 4 93 0 4 4 20 75 2 1 0 0 1 93 0 1 1 21 1 76 17 20 49 17 18 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
leftKerningGroup = dotlessi;
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 291, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 302, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 012D;
},
{
glyphname = icaron;
layers = (
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 318, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 322, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 01D0;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 318, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 322, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idblgrave;
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 237, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 235, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 0209;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 339, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = idotaccent;
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 216, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 252, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
},
{
glyphname = idotbelow;
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 301, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 338, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 1ECB;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 236, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ihookabove;
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 247, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 302, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 020B;
},
{
glyphname = ij;
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 255, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 506;
},
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 263, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 525;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = imacron;
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 349, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = iogonek;
layers = (
{
components = (
{
name = i;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 278, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
45 1 9 3 1 74 0 0 10 1 1 6 0 1 103 0 9 0 2 9 2 99 0 5 5 6 93 0 6 6 20 75 7 1 4 4 3 93 8 1 3 3 21 3 76 0 0 44 42 38 37 36 34 32 31 30 29 25 23 22 21 16 14 0 11 0 10 36 11 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
components = (
{
name = i;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
46 1 9 3 1 74 0 0 10 1 1 6 0 1 103 0 9 0 2 9 2 99 0 5 5 6 93 0 6 6 20 75 7 1 4 4 3 93 8 1 3 3 21 3 76 0 0 45 43 39 38 37 36 33 32 31 30 26 23 22 21 16 14 0 11 0 10 36 11 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
note = iogonek;
unicode = 012F;
},
{
glyphname = itilde;
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
unicode = 0129;
},
{
glyphname = j;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"99 643 OFFCURVE",
"69 618 OFFCURVE",
"69 596 QCURVE SMOOTH",
"69 573 OFFCURVE",
"98 548 OFFCURVE",
"123 548 QCURVE SMOOTH",
"147 548 OFFCURVE",
"178 573 OFFCURVE",
"178 596 QCURVE SMOOTH",
"178 617 OFFCURVE",
"147 643 OFFCURVE",
"123 643 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171 420 LINE",
"31 420 LINE",
"31 394 LINE",
"72 396 LINE",
"85 396 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 -59 LINE SMOOTH",
"85 -90 OFFCURVE",
"87 -133 QCURVE SMOOTH",
"91 -216 OFFCURVE",
"34 -216 QCURVE SMOOTH",
"3 -216 OFFCURVE",
"3 -191 QCURVE SMOOTH",
"3 -187 OFFCURVE",
"9 -165 OFFCURVE",
"9 -160 QCURVE SMOOTH",
"9 -144 OFFCURVE",
"-14 -132 OFFCURVE",
"-26 -132 QCURVE SMOOTH",
"-47 -132 OFFCURVE",
"-73 -156 OFFCURVE",
"-73 -176 QCURVE SMOOTH",
"-73 -204 OFFCURVE",
"-18 -243 OFFCURVE",
"28 -243 QCURVE SMOOTH",
"171 -243 OFFCURVE",
"171 -4 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
23 1 4 3 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
15 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 3 5 4 4 3 112 7 1 1 0 0 6 1 0 103 0 5 5 6 93 0 6 6 20 75 0 4 4 2 96 0 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 3 5 4 5 3 4 126 7 1 1 0 0 6 1 0 103 0 5 5 6 93 0 6 6 20 75 0 4 4 2 96 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
0 0 40 39 38 36 30 28 21 19 15 13 0 11 0 10 36 8 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 251;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"95 657 OFFCURVE",
"53 623 OFFCURVE",
"53 595 QCURVE SMOOTH",
"53 565 OFFCURVE",
"95 532 OFFCURVE",
"129 532 QCURVE SMOOTH",
"164 532 OFFCURVE",
"207 566 OFFCURVE",
"207 595 QCURVE SMOOTH",
"207 623 OFFCURVE",
"163 657 OFFCURVE",
"129 657 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 425 LINE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE SMOOTH",
"66 394 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 -37 LINE SMOOTH",
"68 -100 OFFCURVE",
"76 -156 QCURVE SMOOTH",
"83 -208 OFFCURVE",
"44 -209 QCURVE SMOOTH",
"22 -210 OFFCURVE",
"22 -184 QCURVE SMOOTH",
"22 -180 OFFCURVE",
"28 -158 OFFCURVE",
"28 -153 QCURVE SMOOTH",
"28 -128 OFFCURVE",
"-9 -108 OFFCURVE",
"-27 -108 QCURVE SMOOTH",
"-56 -108 OFFCURVE",
"-90 -140 OFFCURVE",
"-90 -166 QCURVE SMOOTH",
"-90 -201 OFFCURVE",
"-22 -243 OFFCURVE",
"39 -243 QCURVE SMOOTH",
"197 -243 OFFCURVE",
"197 -12 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
41 1 3 5 24 1 4 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 3 5 4 4 3 112 6 1 1 0 0 5 1 0 103 0 5 5 20 75 0 4 4 2 96 0 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 33 values pushed */
0 3 5 4 5 3 4 126 6 1 1 0 0 5 1 0 103 0 5 5 20 75 0 4 4 2 96 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
0 0 43 42 30 28 22 20 16 14 0 11 0 10 36 7 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 262;
}
);
note = j;
unicode = 006A;
},
{
glyphname = jdotless;
layers = (
{
anchors = (
{
name = top;
position = "{127, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"171 420 LINE",
"31 420 LINE",
"31 394 LINE",
"72 396 LINE",
"85 396 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 -59 LINE SMOOTH",
"85 -90 OFFCURVE",
"87 -133 QCURVE SMOOTH",
"91 -216 OFFCURVE",
"34 -216 QCURVE SMOOTH",
"3 -216 OFFCURVE",
"3 -191 QCURVE SMOOTH",
"3 -187 OFFCURVE",
"9 -165 OFFCURVE",
"9 -160 QCURVE SMOOTH",
"9 -144 OFFCURVE",
"-14 -132 OFFCURVE",
"-26 -132 QCURVE SMOOTH",
"-47 -132 OFFCURVE",
"-73 -156 OFFCURVE",
"-73 -176 QCURVE SMOOTH",
"-73 -204 OFFCURVE",
"-18 -243 OFFCURVE",
"28 -243 QCURVE SMOOTH",
"171 -243 OFFCURVE",
"171 -4 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
11 1 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
15 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
0 1 3 2 2 1 112 0 3 3 4 93 0 4 4 20 75 0 2 2 0 96 0 0 0 30 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 1 3 2 3 1 2 126 0 3 3 4 93 0 4 4 20 75 0 2 2 0 96 0 0 0 30 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 38 39 36 33 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 251;
},
{
anchors = (
{
name = top;
position = "{128, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"197 425 LINE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE SMOOTH",
"66 394 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 -37 LINE SMOOTH",
"68 -100 OFFCURVE",
"76 -156 QCURVE SMOOTH",
"83 -208 OFFCURVE",
"44 -209 QCURVE SMOOTH",
"22 -210 OFFCURVE",
"22 -184 QCURVE SMOOTH",
"22 -180 OFFCURVE",
"28 -158 OFFCURVE",
"28 -153 QCURVE SMOOTH",
"28 -128 OFFCURVE",
"-9 -108 OFFCURVE",
"-27 -108 QCURVE SMOOTH",
"-56 -108 OFFCURVE",
"-90 -140 OFFCURVE",
"-90 -166 QCURVE SMOOTH",
"-90 -201 OFFCURVE",
"-22 -243 OFFCURVE",
"39 -243 QCURVE SMOOTH",
"197 -243 OFFCURVE",
"197 -12 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
29 1 1 3 12 1 2 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 1 3 2 2 1 112 0 3 3 20 75 0 2 2 0 96 0 0 0 30 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 1 3 2 3 1 2 126 0 3 3 20 75 0 2 2 0 96 0 0 0 30 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
28 38 36 34 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 262;
}
);
note = uni0237;
unicode = 0237;
},
{
glyphname = jcircumflex;
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 318, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 251;
},
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 319, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 262;
}
);
unicode = 0135;
},
{
glyphname = k;
layers = (
{
anchors = (
{
name = bottom;
position = "{259, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"462 24 OFFCURVE",
"447 34 OFFCURVE",
"441 42 QCURVE SMOOTH",
"266 283 LINE",
"383 383 LINE SMOOTH",
"399 397 OFFCURVE",
"414 397 QCURVE",
"450 395 LINE",
"450 420 LINE",
"288 420 LINE",
"288 395 LINE",
"331 397 LINE",
"335 398 OFFCURVE",
"340 393 OFFCURVE",
"340 390 QCURVE SMOOTH",
"340 383 OFFCURVE",
"334 377 QCURVE",
"171 237 LINE",
"171 730 LINE",
"36 730 LINE",
"36 705 LINE",
"73 707 LINE",
"85 707 OFFCURVE",
"85 686 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 202 LINE",
"204 230 LINE",
"343 38 LINE",
"347 33 OFFCURVE",
"343 24 OFFCURVE",
"336 24 QCURVE SMOOTH",
"334 24 LINE",
"289 26 LINE",
"289 0 LINE",
"504 0 LINE",
"504 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
41 27 10 9 4 1 7 1 74 0 6 0 5 8 6 5 103 9 1 7 7 8 93 0 8 8 20 75 11 10 4 2 4 1 1 0 93 3 1 0 0 21 0 76 0 0 0 45 0 44 39 37 17 38 17 36 17 17 38 49 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 511;
},
{
anchors = (
{
name = bottom;
position = "{260, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"488 32 LINE",
"482 31 OFFCURVE",
"466 42 OFFCURVE",
"461 50 QCURVE SMOOTH",
"317 298 LINE",
"414 381 LINE SMOOTH",
"430 395 OFFCURVE",
"445 395 QCURVE",
"481 393 LINE",
"481 425 LINE",
"311 425 LINE",
"311 393 LINE",
"354 395 LINE",
"358 396 OFFCURVE",
"363 391 OFFCURVE",
"363 388 QCURVE SMOOTH",
"363 381 OFFCURVE",
"357 375 QCURVE",
"197 238 LINE",
"197 730 LINE",
"21 730 LINE",
"21 698 LINE",
"54 700 LINE",
"66 700 OFFCURVE",
"66 679 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"245 0 LINE",
"245 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 196 LINE",
"220 215 LINE",
"319 46 LINE",
"322 40 OFFCURVE",
"319 32 OFFCURVE",
"312 32 QCURVE SMOOTH",
"310 32 LINE",
"276 34 LINE",
"276 0 LINE",
"517 0 LINE",
"517 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
41 27 10 9 0 5 1 7 1 74 0 6 0 5 8 6 5 103 9 1 7 7 8 93 0 8 8 20 75 4 2 2 1 1 0 93 3 1 0 0 21 0 76 39 37 17 38 17 36 17 17 23 49 17 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 524;
}
);
note = k;
rightKerningGroup = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 337, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 511;
},
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 354, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 524;
}
);
note = kcommaaccent;
unicode = 0137;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"462 24 OFFCURVE",
"447 34 OFFCURVE",
"441 42 QCURVE SMOOTH",
"266 253 LINE",
"402 383 LINE SMOOTH",
"417 398 OFFCURVE",
"433 397 QCURVE",
"469 395 LINE",
"469 420 LINE",
"307 420 LINE",
"307 395 LINE",
"350 397 LINE",
"354 398 OFFCURVE",
"359 393 OFFCURVE",
"359 390 QCURVE SMOOTH",
"359 383 OFFCURVE",
"353 377 QCURVE",
"171 207 LINE",
"171 420 LINE",
"36 420 LINE",
"36 395 LINE",
"73 397 LINE",
"85 397 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 172 LINE",
"204 200 LINE",
"343 38 LINE",
"347 33 OFFCURVE",
"343 24 OFFCURVE",
"336 24 QCURVE SMOOTH",
"334 24 LINE",
"289 26 LINE",
"289 0 LINE",
"504 0 LINE",
"504 26 LINE"
);
}
);
width = 511;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"488 32 LINE",
"482 31 OFFCURVE",
"466 42 OFFCURVE",
"461 50 QCURVE SMOOTH",
"317 268 LINE",
"437 381 LINE SMOOTH",
"453 396 OFFCURVE",
"468 395 QCURVE",
"504 393 LINE",
"504 425 LINE",
"334 425 LINE",
"334 393 LINE",
"377 395 LINE",
"381 396 OFFCURVE",
"386 391 OFFCURVE",
"386 388 QCURVE SMOOTH",
"386 381 OFFCURVE",
"380 375 QCURVE",
"197 208 LINE",
"197 425 LINE",
"21 425 LINE",
"21 393 LINE",
"54 395 LINE",
"66 395 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"245 0 LINE",
"245 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 166 LINE",
"220 185 LINE",
"319 46 LINE",
"322 40 OFFCURVE",
"319 32 OFFCURVE",
"312 32 QCURVE SMOOTH",
"310 32 LINE",
"276 34 LINE",
"276 0 LINE",
"517 0 LINE",
"517 34 LINE"
);
}
);
width = 524;
}
);
unicode = 0138;
},
{
glyphname = l;
layers = (
{
anchors = (
{
name = bottom;
position = "{129, 0}";
},
{
name = center;
position = "{129, 371}";
},
{
name = top;
position = "{126, 692}";
},
{
name = topright;
position = "{99, 551}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"220 0 LINE",
"220 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 731 LINE",
"36 731 LINE",
"36 706 LINE",
"73 708 LINE",
"85 704 OFFCURVE",
"85 687 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 2 0 1 0 2 1 101 3 1 0 0 4 93 0 4 4 21 4 76 17 34 17 21 16 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
anchors = (
{
name = bottom;
position = "{131, 0}";
},
{
name = center;
position = "{131, 371}";
},
{
name = top;
position = "{127, 701}";
},
{
name = topright;
position = "{127, 538}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"243 0 LINE",
"243 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 731 LINE",
"21 731 LINE",
"21 699 LINE",
"54 701 LINE",
"66 697 OFFCURVE",
"66 680 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 2 0 1 0 2 1 101 3 1 0 0 4 93 0 4 4 21 4 76 17 19 17 21 16 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
note = l;
unicode = 006C;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 293, 95}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
0 0 1 4 1 0 4 126 0 4 0 3 2 4 3 101 0 1 1 23 75 5 1 2 2 6 93 0 6 6 21 6 76 17 34 17 21 19 38 35 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 294, 104}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
6 1 0 1 1 74 0 0 1 4 1 0 4 126 0 4 0 3 2 4 3 101 0 1 1 23 75 5 1 2 2 6 93 0 6 6 21 6 76 17 19 17 21 19 39 35 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = lcaron;
layers = (
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 406, 131}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 442, 113}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
24 7 2 0 6 34 33 2 1 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 5 0 4 6 5 4 101 0 0 0 6 95 0 6 6 25 75 3 1 1 1 2 93 0 2 2 21 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 5 0 4 6 5 4 101 0 6 0 0 1 6 0 103 3 1 1 1 2 93 0 2 2 21 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
35 17 21 17 17 21 35 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = lcommaaccent;
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 255;
},
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 263;
}
);
note = lcommaaccent;
unicode = 013C;
},
{
glyphname = ldot;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"220 0 LINE",
"220 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 731 LINE",
"36 731 LINE",
"36 706 LINE",
"73 708 LINE",
"85 704 OFFCURVE",
"85 687 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
},
{
closed = 1;
nodes = (
"203 345 OFFCURVE",
"233 318 OFFCURVE",
"257 318 QCURVE SMOOTH",
"281 318 OFFCURVE",
"311 345 OFFCURVE",
"311 366 QCURVE SMOOTH",
"311 387 OFFCURVE",
"279 415 OFFCURVE",
"257 415 QCURVE SMOOTH",
"234 415 OFFCURVE",
"203 387 OFFCURVE",
"203 366 QCURVE SMOOTH"
);
}
);
width = 259;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"243 0 LINE",
"243 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 731 LINE",
"21 731 LINE",
"21 699 LINE",
"54 701 LINE",
"66 697 OFFCURVE",
"66 680 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE"
);
},
{
closed = 1;
nodes = (
"219 334 OFFCURVE",
"256 300 OFFCURVE",
"285 300 QCURVE SMOOTH",
"314 300 OFFCURVE",
"350 334 OFFCURVE",
"350 363 QCURVE SMOOTH",
"350 391 OFFCURVE",
"313 426 OFFCURVE",
"285 426 QCURVE SMOOTH",
"256 426 OFFCURVE",
"219 391 OFFCURVE",
"219 363 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
50 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 2 0 1 5 2 1 101 0 6 6 5 95 0 5 5 20 75 3 1 0 0 4 93 0 4 4 21 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 2 0 1 5 2 1 101 0 5 0 6 0 5 6 103 3 1 0 0 4 93 0 4 4 21 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
36 34 17 19 17 21 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 306;
}
);
note = ldot;
unicode = 0140;
},
{
glyphname = lj;
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 255, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 506;
},
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 263, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 525;
}
);
unicode = 01C9;
},
{
glyphname = lslash;
layers = (
{
components = (
{
name = l;
},
{
name = slashshortcomb;
transform = "{1, 0, 0, 1, 4, -32}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
23 22 21 14 13 12 11 0 8 0 3 1 74 0 4 0 3 0 4 3 101 2 1 0 0 1 93 0 1 1 21 1 76 17 25 17 17 34 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 255;
},
{
components = (
{
name = l;
},
{
name = slashshortcomb;
transform = "{1, 0, 0, 1, 3, -29}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
23 22 21 14 13 12 11 0 8 0 3 1 74 0 4 0 3 0 4 3 101 2 1 0 0 1 93 0 1 1 21 1 76 17 25 17 17 19 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 263;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = m;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"744 24 LINE",
"731 24 OFFCURVE",
"731 43 QCURVE SMOOTH",
"731 288 LINE SMOOTH",
"731 363 OFFCURVE",
"668 430 OFFCURVE",
"597 430 QCURVE SMOOTH",
"544 430 OFFCURVE",
"465 372 OFFCURVE",
"448 317 QCURVE",
"439 382 OFFCURVE",
"374 430 OFFCURVE",
"317 430 QCURVE SMOOTH",
"263 430 OFFCURVE",
"187 375 OFFCURVE",
"172 331 QCURVE",
"172 386 LINE SMOOTH",
"172 405 OFFCURVE",
"177 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"72 396 LINE",
"78 396 OFFCURVE",
"85 384 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"172 231 LINE",
"177 305 OFFCURVE",
"243 397 OFFCURVE",
"294 397 QCURVE SMOOTH",
"325 397 OFFCURVE",
"354 376 OFFCURVE",
"365 324 OFFCURVE",
"365 272 QCURVE SMOOTH",
"365 43 LINE SMOOTH",
"365 27 OFFCURVE",
"352 24 QCURVE",
"306 26 LINE",
"306 0 LINE",
"511 0 LINE",
"511 26 LINE",
"464 24 LINE",
"451 24 OFFCURVE",
"451 43 QCURVE SMOOTH",
"451 223 LINE",
"454 302 OFFCURVE",
"525 398 OFFCURVE",
"578 398 QCURVE SMOOTH",
"608 398 OFFCURVE",
"636 370 OFFCURVE",
"645 318 OFFCURVE",
"645 270 QCURVE SMOOTH",
"645 43 LINE SMOOTH",
"645 27 OFFCURVE",
"632 24 QCURVE",
"586 26 LINE",
"586 0 LINE",
"781 0 LINE",
"781 26 LINE"
);
},
{
closed = 1;
nodes = (
"171 195 LINE",
"171 203 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"744 24 LINE",
"731 24 OFFCURVE",
"731 43 QCURVE SMOOTH",
"731 288 LINE SMOOTH",
"731 363 OFFCURVE",
"668 430 OFFCURVE",
"597 430 QCURVE SMOOTH",
"544 430 OFFCURVE",
"465 372 OFFCURVE",
"448 317 QCURVE",
"439 382 OFFCURVE",
"374 430 OFFCURVE",
"317 430 QCURVE SMOOTH",
"263 430 OFFCURVE",
"187 375 OFFCURVE",
"172 331 QCURVE",
"172 386 LINE SMOOTH",
"172 405 OFFCURVE",
"177 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"72 396 LINE",
"85 395 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"172 231 LINE",
"177 305 OFFCURVE",
"243 397 OFFCURVE",
"294 397 QCURVE SMOOTH",
"340 397 OFFCURVE",
"365 344 OFFCURVE",
"365 272 QCURVE SMOOTH",
"365 43 LINE SMOOTH",
"365 27 OFFCURVE",
"352 24 QCURVE",
"306 26 LINE",
"306 0 LINE",
"511 0 LINE",
"511 26 LINE",
"464 24 LINE",
"451 24 OFFCURVE",
"451 43 QCURVE SMOOTH",
"451 223 LINE",
"454 302 OFFCURVE",
"525 398 OFFCURVE",
"578 398 QCURVE SMOOTH",
"615 398 OFFCURVE",
"645 352 OFFCURVE",
"645 270 QCURVE SMOOTH",
"645 43 LINE SMOOTH",
"645 27 OFFCURVE",
"632 24 QCURVE",
"586 26 LINE",
"586 0 LINE",
"781 0 LINE",
"781 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 80 values pushed */
58 52 43 3 1 2 1 74 10 6 2 2 2 12 95 13 1 12 12 28 75 10 6 2 2 2 11 93 0 11 11 20 75 15 14 9 7 5 3 6 1 1 0 93 8 4 2 0 0 21 0 76 0 0 0 67 0 66 62 60 56 54 49 48 47 45 40 39 17 36 38 17 17 36 38 17 17 16 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 801;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"763 32 LINE",
"750 32 OFFCURVE",
"750 51 QCURVE SMOOTH",
"750 292 LINE SMOOTH",
"750 366 OFFCURVE",
"691 435 OFFCURVE",
"627 435 QCURVE SMOOTH",
"572 435 OFFCURVE",
"492 380 OFFCURVE",
"471 329 QCURVE",
"464 385 OFFCURVE",
"405 435 OFFCURVE",
"351 435 QCURVE SMOOTH",
"297 435 OFFCURVE",
"219 382 OFFCURVE",
"198 335 QCURVE",
"198 391 LINE SMOOTH",
"198 410 OFFCURVE",
"203 425 QCURVE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"246 0 LINE",
"246 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 213 LINE",
"200 267 OFFCURVE",
"234 346 OFFCURVE",
"281 388 OFFCURVE",
"302 388 QCURVE SMOOTH",
"327 388 OFFCURVE",
"343 346 OFFCURVE",
"343 293 QCURVE SMOOTH",
"343 51 LINE SMOOTH",
"343 35 OFFCURVE",
"330 32 QCURVE",
"294 34 LINE",
"294 0 LINE",
"522 0 LINE",
"522 34 LINE",
"487 32 LINE",
"474 32 OFFCURVE",
"474 51 QCURVE SMOOTH",
"474 203 LINE SMOOTH",
"475 260 OFFCURVE",
"509 344 OFFCURVE",
"558 388 OFFCURVE",
"580 388 QCURVE SMOOTH",
"604 388 OFFCURVE",
"619 344 OFFCURVE",
"619 293 QCURVE SMOOTH",
"619 51 LINE SMOOTH",
"619 35 OFFCURVE",
"606 32 QCURVE",
"570 34 LINE",
"570 0 LINE",
"796 0 LINE",
"796 34 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"763 32 LINE",
"750 32 OFFCURVE",
"750 51 QCURVE SMOOTH",
"750 292 LINE SMOOTH",
"750 366 OFFCURVE",
"691 435 OFFCURVE",
"627 435 QCURVE SMOOTH",
"572 435 OFFCURVE",
"492 380 OFFCURVE",
"471 329 QCURVE",
"464 385 OFFCURVE",
"405 435 OFFCURVE",
"351 435 QCURVE SMOOTH",
"297 435 OFFCURVE",
"219 382 OFFCURVE",
"198 335 QCURVE",
"198 391 LINE SMOOTH",
"198 410 OFFCURVE",
"203 425 QCURVE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE",
"66 393 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"246 0 LINE",
"246 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 213 LINE",
"200 287 OFFCURVE",
"266 388 OFFCURVE",
"302 388 QCURVE SMOOTH",
"327 388 OFFCURVE",
"343 346 OFFCURVE",
"343 293 QCURVE SMOOTH",
"343 51 LINE SMOOTH",
"343 35 OFFCURVE",
"330 32 QCURVE",
"294 34 LINE",
"294 0 LINE",
"522 0 LINE",
"522 34 LINE",
"487 32 LINE",
"474 32 OFFCURVE",
"474 51 QCURVE SMOOTH",
"474 203 LINE SMOOTH",
"474 280 OFFCURVE",
"543 388 OFFCURVE",
"580 388 QCURVE SMOOTH",
"604 388 OFFCURVE",
"619 344 OFFCURVE",
"619 293 QCURVE SMOOTH",
"619 51 LINE SMOOTH",
"619 35 OFFCURVE",
"606 32 QCURVE",
"570 34 LINE",
"570 0 LINE",
"796 0 LINE",
"796 34 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
57 51 2 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
10 6 2 2 2 12 95 13 1 12 12 28 75 10 6 2 2 2 11 93 0 11 11 20 75 15 14 9 7 5 3 6 1 1 0 93 8 4 2 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 10 10 11 93 0 11 11 20 75 6 1 2 2 12 95 13 1 12 12 28 75 15 14 9 7 5 3 6 1 1 0 93 8 4 2 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
10 6 2 2 2 12 95 13 1 12 12 28 75 10 6 2 2 2 11 93 0 11 11 20 75 15 14 9 7 5 3 6 1 1 0 93 8 4 2 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 10 10 11 93 0 11 11 20 75 6 1 2 2 12 95 13 1 12 12 28 75 15 14 9 7 5 3 6 1 1 0 93 8 4 2 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 28 values pushed */
0 0 0 66 0 65 61 59 55 53 48 47 46 45 40 39 17 22 37 17 17 37 37 17 17 16 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 807;
}
);
leftKerningGroup = dotlessi;
note = m;
rightKerningGroup = a;
unicode = 006D;
},
{
glyphname = n;
layers = (
{
anchors = (
{
name = bottom;
position = "{272, 0}";
},
{
name = top;
position = "{280, 420}";
},
{
name = topright;
position = "{83, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"455 24 OFFCURVE",
"455 43 QCURVE SMOOTH",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"171 385 LINE SMOOTH",
"171 405 OFFCURVE",
"176 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"72 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 219 LINE SMOOTH",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"332 398 OFFCURVE",
"360 370 OFFCURVE",
"369 318 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH",
"369 27 OFFCURVE",
"356 24 QCURVE",
"310 26 LINE",
"310 0 LINE",
"505 0 LINE",
"505 26 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"455 24 OFFCURVE",
"455 43 QCURVE SMOOTH",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"171 385 LINE SMOOTH",
"171 405 OFFCURVE",
"176 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"72 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 219 LINE SMOOTH",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"344 398 OFFCURVE",
"369 339 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH",
"369 27 OFFCURVE",
"356 24 QCURVE",
"310 26 LINE",
"310 0 LINE",
"505 0 LINE",
"505 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
33 1 1 2 1 74 6 1 2 2 8 95 0 8 8 28 75 6 1 2 2 7 93 0 7 7 20 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 0 0 0 42 0 41 37 17 21 17 17 36 38 17 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 525;
},
{
anchors = (
{
name = bottom;
position = "{274, 0}";
},
{
name = top;
position = "{282, 425}";
},
{
name = topright;
position = "{85, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"495 32 LINE",
"482 32 OFFCURVE",
"482 51 QCURVE SMOOTH",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"197 390 LINE SMOOTH",
"197 410 OFFCURVE",
"202 425 QCURVE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"249 0 LINE",
"249 34 LINE",
"210 32 LINE",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 198 LINE SMOOTH",
"197 258 OFFCURVE",
"229 344 OFFCURVE",
"278 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 345 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH",
"351 35 OFFCURVE",
"338 32 QCURVE",
"300 34 LINE",
"300 0 LINE",
"528 0 LINE",
"528 34 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"495 32 LINE",
"482 32 OFFCURVE",
"482 51 QCURVE SMOOTH",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"197 390 LINE SMOOTH",
"197 410 OFFCURVE",
"202 425 QCURVE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"249 0 LINE",
"249 34 LINE",
"210 32 LINE",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 198 LINE SMOOTH",
"197 290 OFFCURVE",
"265 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 345 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH",
"351 35 OFFCURVE",
"338 32 QCURVE",
"300 34 LINE",
"300 0 LINE",
"528 0 LINE",
"528 34 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
33 1 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
6 1 2 2 8 95 0 8 8 28 75 6 1 2 2 7 93 0 7 7 20 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 6 6 7 93 0 7 7 20 75 0 2 2 8 95 0 8 8 28 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
6 1 2 2 8 95 0 8 8 28 75 6 1 2 2 7 93 0 7 7 20 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 6 6 7 93 0 7 7 20 75 0 2 2 8 95 0 8 8 28 75 10 9 5 3 4 1 1 0 93 4 1 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
0 0 0 42 0 41 37 17 21 17 17 37 37 17 17 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 539;
}
);
leftKerningGroup = dotlessi;
note = n;
rightKerningGroup = a;
unicode = 006E;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 447, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 442, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
leftKerningGroup = dotlessi;
note = nacute;
rightKerningGroup = a;
unicode = 0144;
},
{
glyphname = napostrophe;
layers = (
{
components = (
{
name = n;
},
{
name = apostrophecomb;
transform = "{1, 0, 0, 1, 144, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = apostrophecomb;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
unicode = 0149;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 471, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 473, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
leftKerningGroup = dotlessi;
note = ncaron;
rightKerningGroup = a;
unicode = 0148;
},
{
glyphname = ncommaaccent;
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
leftKerningGroup = dotlessi;
note = ncommaaccent;
rightKerningGroup = a;
unicode = 0146;
},
{
glyphname = eng;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"455 43 LINE",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"171 385 LINE SMOOTH",
"171 405 OFFCURVE",
"176 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"72 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 27 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"230 0 LINE",
"230 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 219 LINE SMOOTH",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"344 398 OFFCURVE",
"369 339 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"369 200 LINE",
"369 -59 LINE SMOOTH",
"369 -90 OFFCURVE",
"371 -133 QCURVE SMOOTH",
"375 -216 OFFCURVE",
"318 -216 QCURVE SMOOTH",
"287 -216 OFFCURVE",
"287 -191 QCURVE SMOOTH",
"287 -187 OFFCURVE",
"293 -165 OFFCURVE",
"293 -160 QCURVE SMOOTH",
"293 -144 OFFCURVE",
"270 -132 OFFCURVE",
"258 -132 QCURVE SMOOTH",
"237 -132 OFFCURVE",
"211 -156 OFFCURVE",
"211 -176 QCURVE SMOOTH",
"211 -204 OFFCURVE",
"266 -243 OFFCURVE",
"312 -243 QCURVE SMOOTH",
"455 -243 OFFCURVE",
"455 -4 QCURVE SMOOTH",
"455 200 LINE"
);
}
);
width = 525;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"482 51 LINE",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"197 390 LINE SMOOTH",
"197 410 OFFCURVE",
"202 425 QCURVE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 35 OFFCURVE",
"53 32 QCURVE",
"20 34 LINE",
"20 0 LINE",
"249 0 LINE",
"249 34 LINE",
"210 32 LINE",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 198 LINE SMOOTH",
"197 290 OFFCURVE",
"265 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 345 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 206 LINE",
"351 -37 LINE SMOOTH",
"353 -100 OFFCURVE",
"361 -156 QCURVE SMOOTH",
"368 -208 OFFCURVE",
"329 -209 QCURVE SMOOTH",
"307 -210 OFFCURVE",
"307 -184 QCURVE SMOOTH",
"307 -180 OFFCURVE",
"313 -158 OFFCURVE",
"313 -153 QCURVE SMOOTH",
"313 -128 OFFCURVE",
"276 -108 OFFCURVE",
"258 -108 QCURVE SMOOTH",
"229 -108 OFFCURVE",
"195 -140 OFFCURVE",
"195 -166 QCURVE SMOOTH",
"195 -201 OFFCURVE",
"263 -243 OFFCURVE",
"324 -243 QCURVE SMOOTH",
"482 -243 OFFCURVE",
"482 -12 QCURVE SMOOTH",
"482 206 LINE"
);
}
);
width = 539;
}
);
unicode = 014B;
},
{
glyphname = nhookleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"468 24 LINE",
"455 24 OFFCURVE",
"455 43 QCURVE SMOOTH",
"455 288 LINE SMOOTH",
"455 363 OFFCURVE",
"392 430 OFFCURVE",
"321 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"192 377 OFFCURVE",
"171 330 QCURVE",
"141 290 LINE",
"171 219 LINE",
"174 301 OFFCURVE",
"245 398 OFFCURVE",
"302 398 QCURVE SMOOTH",
"344 398 OFFCURVE",
"369 339 OFFCURVE",
"369 270 QCURVE SMOOTH",
"369 43 LINE SMOOTH",
"369 27 OFFCURVE",
"356 24 QCURVE",
"310 26 LINE",
"310 0 LINE",
"505 0 LINE",
"505 26 LINE"
);
},
{
closed = 1;
nodes = (
"171 420 LINE",
"31 420 LINE",
"31 394 LINE",
"72 396 LINE",
"85 396 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 -59 LINE SMOOTH",
"85 -90 OFFCURVE",
"87 -133 QCURVE SMOOTH",
"91 -216 OFFCURVE",
"34 -216 QCURVE SMOOTH",
"3 -216 OFFCURVE",
"3 -191 QCURVE SMOOTH",
"3 -187 OFFCURVE",
"9 -165 OFFCURVE",
"9 -160 QCURVE SMOOTH",
"9 -144 OFFCURVE",
"-14 -132 OFFCURVE",
"-26 -132 QCURVE SMOOTH",
"-47 -132 OFFCURVE",
"-73 -156 OFFCURVE",
"-73 -176 QCURVE SMOOTH",
"-73 -204 OFFCURVE",
"-18 -243 OFFCURVE",
"28 -243 QCURVE SMOOTH",
"171 -243 OFFCURVE",
"171 -4 QCURVE SMOOTH"
);
}
);
width = 525;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"495 32 LINE",
"482 32 OFFCURVE",
"482 51 QCURVE SMOOTH",
"482 292 LINE SMOOTH",
"482 366 OFFCURVE",
"420 435 OFFCURVE",
"352 435 QCURVE SMOOTH",
"298 435 OFFCURVE",
"219 382 OFFCURVE",
"197 334 QCURVE",
"127 292 LINE",
"197 198 LINE",
"197 290 OFFCURVE",
"265 388 OFFCURVE",
"304 388 QCURVE SMOOTH",
"334 388 OFFCURVE",
"351 345 OFFCURVE",
"351 293 QCURVE SMOOTH",
"351 51 LINE SMOOTH",
"351 35 OFFCURVE",
"338 32 QCURVE",
"300 34 LINE",
"300 0 LINE",
"528 0 LINE",
"528 34 LINE"
);
},
{
closed = 1;
nodes = (
"197 425 LINE",
"20 425 LINE",
"20 392 LINE",
"53 394 LINE SMOOTH",
"66 394 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 -37 LINE SMOOTH",
"68 -100 OFFCURVE",
"76 -156 QCURVE SMOOTH",
"83 -208 OFFCURVE",
"44 -209 QCURVE SMOOTH",
"22 -210 OFFCURVE",
"22 -184 QCURVE SMOOTH",
"22 -180 OFFCURVE",
"28 -158 OFFCURVE",
"28 -153 QCURVE SMOOTH",
"28 -128 OFFCURVE",
"-9 -108 OFFCURVE",
"-27 -108 QCURVE SMOOTH",
"-56 -108 OFFCURVE",
"-90 -140 OFFCURVE",
"-90 -166 QCURVE SMOOTH",
"-90 -201 OFFCURVE",
"-22 -243 OFFCURVE",
"39 -243 QCURVE SMOOTH",
"197 -243 OFFCURVE",
"197 -12 QCURVE SMOOTH"
);
}
);
width = 539;
}
);
leftMetricsKey = j;
unicode = 0272;
},
{
glyphname = nj;
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 525, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 776;
},
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 539, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 801;
}
);
unicode = 01CC;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 468, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
leftKerningGroup = dotlessi;
note = ntilde;
rightKerningGroup = a;
unicode = 00F1;
},
{
glyphname = o;
layers = (
{
anchors = (
{
name = bottom;
position = "{238, 0}";
},
{
name = center;
position = "{236, 214}";
},
{
name = ogonek;
position = "{306, 0}";
},
{
name = top;
position = "{236, 420}";
},
{
name = topright;
position = "{264, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"35 107 OFFCURVE",
"137 -10 OFFCURVE",
"236 -10 QCURVE SMOOTH",
"335 -10 OFFCURVE",
"437 107 OFFCURVE",
"437 211 QCURVE SMOOTH",
"437 313 OFFCURVE",
"335 430 OFFCURVE",
"236 430 QCURVE SMOOTH",
"137 430 OFFCURVE",
"35 313 OFFCURVE",
"35 211 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 311 OFFCURVE",
"177 403 OFFCURVE",
"236 403 QCURVE SMOOTH",
"295 403 OFFCURVE",
"346 311 OFFCURVE",
"346 209 QCURVE SMOOTH",
"346 108 OFFCURVE",
"295 17 OFFCURVE",
"236 17 QCURVE SMOOTH",
"177 17 OFFCURVE",
"126 108 OFFCURVE",
"126 209 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 107 OFFCURVE",
"137 -10 OFFCURVE",
"233 -10 QCURVE SMOOTH",
"434 -10 OFFCURVE",
"437 216 QCURVE SMOOTH",
"437 315 OFFCURVE",
"334 430 OFFCURVE",
"236 430 QCURVE SMOOTH",
"137 430 OFFCURVE",
"35 313 OFFCURVE",
"35 211 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 311 OFFCURVE",
"177 403 OFFCURVE",
"236 403 QCURVE SMOOTH",
"295 403 OFFCURVE",
"346 311 OFFCURVE",
"346 209 QCURVE SMOOTH",
"346 108 OFFCURVE",
"295 17 OFFCURVE",
"236 17 QCURVE SMOOTH",
"177 17 OFFCURVE",
"126 108 OFFCURVE",
"126 209 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 28 75 0 2 2 1 95 0 1 1 26 1 76 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 472;
},
{
anchors = (
{
name = bottom;
position = "{246, 0}";
},
{
name = center;
position = "{244, 214}";
},
{
name = ogonek;
position = "{329, 0}";
},
{
name = top;
position = "{244, 425}";
},
{
name = topright;
position = "{272, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 104 OFFCURVE",
"132 -10 OFFCURVE",
"244 -10 QCURVE SMOOTH",
"467 -10 OFFCURVE",
"467 213 QCURVE SMOOTH",
"467 321 OFFCURVE",
"357 435 OFFCURVE",
"244 435 QCURVE SMOOTH",
"132 435 OFFCURVE",
"20 321 OFFCURVE",
"20 213 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 315 OFFCURVE",
"199 401 OFFCURVE",
"244 401 QCURVE SMOOTH",
"289 401 OFFCURVE",
"327 315 OFFCURVE",
"327 211 QCURVE SMOOTH",
"327 109 OFFCURVE",
"289 25 OFFCURVE",
"244 25 QCURVE SMOOTH",
"199 25 OFFCURVE",
"160 110 OFFCURVE",
"160 211 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 28 75 0 2 2 1 95 0 1 1 26 1 76 36 36 35 33 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 487;
}
);
leftKerningGroup = c;
note = o;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = oacute;
rightKerningGroup = o;
unicode = 00F3;
},
{
glyphname = obreve;
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 014F;
},
{
glyphname = ocaron;
layers = (
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 435, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 01D2;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = ocircumflex;
rightKerningGroup = o;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 427, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 435, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ED7;
},
{
glyphname = odblgrave;
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 346, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 020D;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = odieresis;
rightKerningGroup = o;
unicode = 00F6;
},
{
glyphname = odieresismacron;
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb_macroncomb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb_macroncomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 022B;
},
{
glyphname = odotaccentmacron;
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb_macroncomb;
transform = "{1, 0, 0, 1, 377, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = dotaccentcomb_macroncomb;
transform = "{1, 0, 0, 1, 383, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 0231;
},
{
glyphname = odotbelow;
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ECD;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = ograve;
rightKerningGroup = o;
unicode = 00F2;
},
{
glyphname = ohookabove;
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 494, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 523, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 345, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 494, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = ohungarumlaut;
rightKerningGroup = o;
unicode = 0151;
},
{
glyphname = oinvertedbreve;
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 020F;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 458, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = omacron;
rightKerningGroup = o;
unicode = 014D;
},
{
glyphname = oogonek;
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 457, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 480, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 01EB;
},
{
glyphname = oslash;
layers = (
{
components = (
{
name = o;
},
{
name = slashlongcomb;
transform = "{1, 0, 0, 1, -11, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
16 1 2 1 33 32 22 21 19 9 6 3 2 6 1 0 3 3 74 18 17 2 1 72 8 7 2 0 71 0 2 2 1 95 0 1 1 28 75 4 1 3 3 0 95 0 0 0 26 0 76 28 28 28 35 28 34 40 40 35 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 472;
},
{
components = (
{
name = o;
},
{
name = slashlongcomb;
transform = "{1, 0, 0, 1, -2, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
18 15 2 2 1 32 31 21 20 4 3 2 8 5 2 0 3 3 74 17 16 2 1 72 7 6 2 0 71 0 2 2 1 95 0 1 1 28 75 4 1 3 3 0 95 0 0 0 26 0 76 27 27 27 34 27 33 40 40 34 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 487;
}
);
leftKerningGroup = c;
note = oslash;
rightKerningGroup = o;
unicode = 00F8;
},
{
glyphname = oslashacute;
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 01FF;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
leftKerningGroup = c;
note = otilde;
rightKerningGroup = o;
unicode = 00F5;
},
{
glyphname = otildemacron;
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
unicode = 022D;
},
{
glyphname = oe;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 107 OFFCURVE",
"137 -10 OFFCURVE",
"233 -10 QCURVE SMOOTH",
"434 -10 OFFCURVE",
"437 216 QCURVE SMOOTH",
"437 315 OFFCURVE",
"334 430 OFFCURVE",
"236 430 QCURVE SMOOTH",
"137 430 OFFCURVE",
"35 313 OFFCURVE",
"35 211 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 311 OFFCURVE",
"177 403 OFFCURVE",
"236 403 QCURVE SMOOTH",
"295 403 OFFCURVE",
"346 311 OFFCURVE",
"346 209 QCURVE SMOOTH",
"346 108 OFFCURVE",
"295 17 OFFCURVE",
"236 17 QCURVE SMOOTH",
"177 17 OFFCURVE",
"126 108 OFFCURVE",
"126 209 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 430 OFFCURVE",
"346 318 OFFCURVE",
"346 209 QCURVE SMOOTH",
"346 -10 OFFCURVE",
"549 -10 QCURVE SMOOTH",
"606 -10 OFFCURVE",
"701 45 OFFCURVE",
"721 93 QCURVE",
"698 110 LINE",
"682 73 OFFCURVE",
"613 23 OFFCURVE",
"563 23 QCURVE SMOOTH",
"500 24 OFFCURVE",
"437 121 OFFCURVE",
"437 212 QCURVE",
"725 212 LINE",
"725 241 LINE",
"723 329 OFFCURVE",
"626 430 OFFCURVE",
"547 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"597 403 OFFCURVE",
"640 338 OFFCURVE",
"640 270 QCURVE SMOOTH",
"640 251 OFFCURVE",
"630 237 OFFCURVE",
"620 237 QCURVE SMOOTH",
"438 237 LINE",
"438 311 OFFCURVE",
"491 403 OFFCURVE",
"547 403 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 88 values pushed */
29 1 8 7 18 12 11 3 1 0 2 74 0 8 0 0 1 8 0 101 12 9 11 3 7 7 4 95 10 5 2 4 4 28 75 0 1 1 2 95 3 1 2 2 26 75 0 6 6 2 95 3 1 2 2 26 2 76 46 46 33 33 0 0 46 54 46 53 50 48 33 45 33 44 38 36 0 32 0 31 36 36 38 34 19 13 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 760;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 104 OFFCURVE",
"132 -10 OFFCURVE",
"244 -10 QCURVE SMOOTH",
"467 -10 OFFCURVE",
"467 213 QCURVE SMOOTH",
"467 321 OFFCURVE",
"357 435 OFFCURVE",
"244 435 QCURVE SMOOTH",
"132 435 OFFCURVE",
"20 321 OFFCURVE",
"20 213 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 315 OFFCURVE",
"199 401 OFFCURVE",
"244 401 QCURVE SMOOTH",
"289 401 OFFCURVE",
"327 315 OFFCURVE",
"327 211 QCURVE SMOOTH",
"327 109 OFFCURVE",
"289 25 OFFCURVE",
"244 25 QCURVE SMOOTH",
"199 25 OFFCURVE",
"160 110 OFFCURVE",
"160 211 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"441 435 OFFCURVE",
"327 326 OFFCURVE",
"327 211 QCURVE SMOOTH",
"327 -10 OFFCURVE",
"552 -10 QCURVE SMOOTH",
"623 -10 OFFCURVE",
"728 44 OFFCURVE",
"751 93 QCURVE",
"724 112 LINE",
"708 78 OFFCURVE",
"640 31 OFFCURVE",
"593 31 QCURVE SMOOTH",
"530 32 OFFCURVE",
"467 122 OFFCURVE",
"467 208 QCURVE",
"755 208 LINE",
"755 245 LINE",
"754 336 OFFCURVE",
"645 435 OFFCURVE",
"554 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"588 401 OFFCURVE",
"621 339 OFFCURVE",
"621 274 QCURVE SMOOTH",
"621 255 OFFCURVE",
"611 241 OFFCURVE",
"601 241 QCURVE SMOOTH",
"468 241 LINE",
"468 312 OFFCURVE",
"508 401 OFFCURVE",
"551 401 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
27 1 8 7 16 11 10 3 1 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 8 0 0 1 8 0 101 12 9 11 3 7 7 4 95 10 5 2 4 4 28 75 6 1 1 1 2 95 3 1 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 8 0 0 1 8 0 101 12 9 11 3 7 7 4 95 10 5 2 4 4 28 75 0 1 1 2 95 3 1 2 2 26 75 0 6 6 2 95 3 1 2 2 26 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 30 values pushed */
45 45 31 31 0 0 45 53 45 52 49 47 31 44 31 43 37 35 0 30 0 29 36 35 37 34 19 13 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 775;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = oe;
rightKerningGroup = oe;
rightMetricsKey = e;
unicode = 0153;
},
{
glyphname = p;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"237 430 OFFCURVE",
"169 383 OFFCURVE",
"155 340 QCURVE",
"155 369 LINE SMOOTH",
"155 395 OFFCURVE",
"159 420 QCURVE",
"20 420 LINE",
"20 394 LINE",
"56 396 LINE",
"69 396 OFFCURVE",
"69 376 QCURVE SMOOTH",
"69 -195 LINE SMOOTH",
"69 -214 OFFCURVE",
"56 -215 QCURVE",
"24 -213 LINE",
"24 -239 LINE",
"230 -239 LINE",
"230 -213 LINE",
"168 -215 LINE SMOOTH",
"155 -215 OFFCURVE",
"155 -195 QCURVE SMOOTH",
"155 43 LINE",
"169 17 OFFCURVE",
"228 -10 OFFCURVE",
"269 -10 QCURVE SMOOTH",
"366 -10 OFFCURVE",
"459 99 OFFCURVE",
"459 209 QCURVE SMOOTH",
"459 317 OFFCURVE",
"373 430 OFFCURVE",
"287 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 403 OFFCURVE",
"353 366 OFFCURVE",
"368 284 OFFCURVE",
"368 209 QCURVE SMOOTH",
"368 134 OFFCURVE",
"350 52 OFFCURVE",
"308 17 OFFCURVE",
"269 17 QCURVE SMOOTH",
"214 17 OFFCURVE",
"157 97 OFFCURVE",
"157 184 QCURVE SMOOTH",
"157 226 LINE SMOOTH",
"157 306 OFFCURVE",
"220 403 OFFCURVE",
"276 403 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"237 430 OFFCURVE",
"169 383 OFFCURVE",
"155 340 QCURVE",
"155 369 LINE SMOOTH",
"155 395 OFFCURVE",
"159 420 QCURVE",
"20 420 LINE",
"20 394 LINE",
"56 396 LINE",
"69 396 OFFCURVE",
"69 376 QCURVE SMOOTH",
"69 -195 LINE SMOOTH",
"69 -214 OFFCURVE",
"56 -215 QCURVE",
"24 -213 LINE",
"24 -239 LINE",
"230 -239 LINE",
"230 -213 LINE",
"168 -215 LINE SMOOTH",
"155 -215 OFFCURVE",
"155 -195 QCURVE SMOOTH",
"155 43 LINE",
"169 17 OFFCURVE",
"228 -10 OFFCURVE",
"269 -10 QCURVE SMOOTH",
"366 -10 OFFCURVE",
"459 99 OFFCURVE",
"459 209 QCURVE SMOOTH",
"459 317 OFFCURVE",
"373 430 OFFCURVE",
"287 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 403 OFFCURVE",
"353 366 OFFCURVE",
"368 284 OFFCURVE",
"368 209 QCURVE SMOOTH",
"368 134 OFFCURVE",
"350 52 OFFCURVE",
"307 17 OFFCURVE",
"269 17 QCURVE SMOOTH",
"157 17 OFFCURVE",
"157 184 QCURVE SMOOTH",
"157 226 LINE SMOOTH",
"157 306 OFFCURVE",
"220 403 OFFCURVE",
"276 403 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 74 values pushed */
27 8 2 7 4 1 74 10 1 8 8 6 95 9 1 6 6 28 75 0 4 4 5 93 0 5 5 20 75 0 7 7 0 95 0 0 0 26 75 3 1 1 1 2 93 0 2 2 22 2 76 31 31 0 0 31 45 31 44 38 36 0 30 0 29 17 36 17 17 36 36 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 494;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"271 435 OFFCURVE",
"208 391 OFFCURVE",
"193 349 QCURVE",
"193 374 LINE SMOOTH",
"193 400 OFFCURVE",
"197 425 QCURVE",
"16 425 LINE",
"16 392 LINE",
"49 394 LINE",
"62 394 OFFCURVE",
"62 374 QCURVE SMOOTH",
"62 -188 LINE SMOOTH",
"62 -207 OFFCURVE",
"49 -208 QCURVE",
"20 -206 LINE",
"20 -239 LINE",
"268 -239 LINE",
"268 -206 LINE",
"206 -208 LINE SMOOTH",
"193 -208 OFFCURVE",
"193 -188 QCURVE SMOOTH",
"193 39 LINE",
"207 16 OFFCURVE",
"266 -10 OFFCURVE",
"307 -10 QCURVE SMOOTH",
"404 -10 OFFCURVE",
"497 100 OFFCURVE",
"497 211 QCURVE SMOOTH",
"497 325 OFFCURVE",
"413 435 OFFCURVE",
"325 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"315 390 OFFCURVE",
"346 356 OFFCURVE",
"358 280 OFFCURVE",
"358 211 QCURVE SMOOTH",
"358 144 OFFCURVE",
"344 69 OFFCURVE",
"311 36 OFFCURVE",
"281 36 QCURVE SMOOTH",
"195 36 OFFCURVE",
"195 186 QCURVE SMOOTH",
"195 229 LINE SMOOTH",
"195 302 OFFCURVE",
"243 390 OFFCURVE",
"287 390 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
27 8 2 7 4 1 74 10 8 2 4 4 6 95 9 1 6 6 28 75 10 8 2 4 4 5 93 0 5 5 20 75 0 7 7 0 95 0 0 0 26 75 3 1 1 1 2 93 0 2 2 22 2 76 31 31 0 0 31 44 31 43 37 35 0 30 0 29 17 36 17 17 36 36 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 521;
}
);
leftKerningGroup = dotlessi;
note = p;
rightKerningGroup = o;
unicode = 0070;
},
{
glyphname = thorn;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"155 730 LINE",
"20 730 LINE",
"20 704 LINE",
"56 706 LINE",
"69 706 OFFCURVE",
"69 686 QCURVE SMOOTH",
"69 -195 LINE SMOOTH",
"69 -214 OFFCURVE",
"56 -215 QCURVE",
"24 -213 LINE",
"24 -239 LINE",
"230 -239 LINE",
"230 -213 LINE",
"168 -215 LINE SMOOTH",
"155 -215 OFFCURVE",
"155 -195 QCURVE SMOOTH",
"155 43 LINE",
"169 17 OFFCURVE",
"228 -10 OFFCURVE",
"269 -10 QCURVE SMOOTH",
"366 -10 OFFCURVE",
"459 99 OFFCURVE",
"459 209 QCURVE SMOOTH",
"459 317 OFFCURVE",
"373 430 OFFCURVE",
"287 430 QCURVE SMOOTH",
"237 430 OFFCURVE",
"169 383 OFFCURVE",
"155 340 QCURVE"
);
},
{
closed = 1;
nodes = (
"313 403 OFFCURVE",
"353 366 OFFCURVE",
"368 284 OFFCURVE",
"368 209 QCURVE SMOOTH",
"368 134 OFFCURVE",
"350 52 OFFCURVE",
"307 17 OFFCURVE",
"269 17 QCURVE SMOOTH",
"157 17 OFFCURVE",
"157 184 QCURVE SMOOTH",
"157 226 LINE SMOOTH",
"157 306 OFFCURVE",
"220 403 OFFCURVE",
"276 403 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
12 0 2 7 8 1 74 0 6 0 5 0 6 5 103 9 1 8 8 0 95 0 0 0 28 75 0 7 7 1 95 0 1 1 26 75 4 1 2 2 3 93 0 3 3 22 3 76 29 29 29 43 29 42 38 17 36 17 17 36 36 34 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 494;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"193 731 LINE",
"16 731 LINE",
"16 698 LINE",
"49 700 LINE",
"62 697 OFFCURVE",
"62 679 QCURVE SMOOTH",
"62 -188 LINE SMOOTH",
"62 -207 OFFCURVE",
"49 -208 QCURVE",
"20 -206 LINE",
"20 -239 LINE",
"268 -239 LINE",
"268 -206 LINE",
"206 -208 LINE SMOOTH",
"193 -208 OFFCURVE",
"193 -188 QCURVE SMOOTH",
"193 39 LINE",
"207 16 OFFCURVE",
"266 -10 OFFCURVE",
"307 -10 QCURVE SMOOTH",
"404 -10 OFFCURVE",
"497 99 OFFCURVE",
"497 209 QCURVE SMOOTH",
"497 321 OFFCURVE",
"413 430 OFFCURVE",
"325 430 QCURVE SMOOTH",
"270 430 OFFCURVE",
"208 386 OFFCURVE",
"193 344 QCURVE"
);
},
{
closed = 1;
nodes = (
"315 384 OFFCURVE",
"345 351 OFFCURVE",
"357 277 OFFCURVE",
"357 209 QCURVE SMOOTH",
"357 142 OFFCURVE",
"343 68 OFFCURVE",
"310 36 OFFCURVE",
"280 36 QCURVE SMOOTH",
"195 36 OFFCURVE",
"195 184 QCURVE SMOOTH",
"195 226 LINE SMOOTH",
"195 298 OFFCURVE",
"243 384 OFFCURVE",
"286 384 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
12 0 2 7 8 1 74 0 6 0 5 0 6 5 101 9 1 8 8 0 95 0 0 0 20 75 0 7 7 1 95 0 1 1 26 75 4 1 2 2 3 93 0 3 3 22 3 76 29 29 29 42 29 41 37 17 21 17 17 36 36 34 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 520;
}
);
note = thorn;
rightKerningGroup = o;
unicode = 00FE;
},
{
glyphname = q;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"35 430 OFFCURVE",
"35 209 QCURVE SMOOTH",
"35 125 OFFCURVE",
"78 29 OFFCURVE",
"159 -10 OFFCURVE",
"222 -10 QCURVE SMOOTH",
"267 -10 OFFCURVE",
"328 32 OFFCURVE",
"339 62 QCURVE",
"339 -195 LINE SMOOTH",
"339 -213 OFFCURVE",
"326 -214 QCURVE",
"270 -213 LINE",
"270 -239 LINE",
"470 -239 LINE",
"470 -213 LINE",
"438 -214 LINE",
"425 -215 OFFCURVE",
"425 -195 QCURVE SMOOTH",
"425 420 LINE",
"392 420 LINE",
"392 361 OFFCURVE",
"361 361 QCURVE SMOOTH",
"354 361 OFFCURVE",
"346 368 OFFCURVE",
"341 375 QCURVE SMOOTH",
"319 405 OFFCURVE",
"266 430 OFFCURVE",
"224 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 403 OFFCURVE",
"337 296 OFFCURVE",
"337 226 QCURVE SMOOTH",
"337 185 LINE SMOOTH",
"337 150 OFFCURVE",
"315 72 OFFCURVE",
"265 17 OFFCURVE",
"227 17 QCURVE SMOOTH",
"192 17 OFFCURVE",
"150 45 OFFCURVE",
"127 128 OFFCURVE",
"127 209 QCURVE SMOOTH",
"127 314 OFFCURVE",
"176 403 OFFCURVE",
"231 403 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 430 OFFCURVE",
"35 209 QCURVE SMOOTH",
"35 95 OFFCURVE",
"119 -10 OFFCURVE",
"222 -10 QCURVE SMOOTH",
"267 -10 OFFCURVE",
"328 32 OFFCURVE",
"339 62 QCURVE",
"339 -195 LINE SMOOTH",
"339 -213 OFFCURVE",
"326 -214 QCURVE",
"270 -213 LINE",
"270 -239 LINE",
"470 -239 LINE",
"470 -213 LINE",
"438 -214 LINE",
"425 -215 OFFCURVE",
"425 -195 QCURVE SMOOTH",
"425 420 LINE",
"392 420 LINE",
"392 361 OFFCURVE",
"361 361 QCURVE SMOOTH",
"354 361 OFFCURVE",
"346 368 OFFCURVE",
"341 375 QCURVE SMOOTH",
"319 405 OFFCURVE",
"266 430 OFFCURVE",
"224 430 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 403 OFFCURVE",
"337 296 OFFCURVE",
"337 226 QCURVE SMOOTH",
"337 185 LINE SMOOTH",
"337 115 OFFCURVE",
"277 17 OFFCURVE",
"227 17 QCURVE SMOOTH",
"170 17 OFFCURVE",
"127 99 OFFCURVE",
"127 209 QCURVE SMOOTH",
"127 314 OFFCURVE",
"176 403 OFFCURVE",
"231 403 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 76 values pushed */
19 1 7 0 1 74 0 0 8 7 8 0 7 126 0 1 1 20 75 10 1 8 8 6 95 9 1 6 6 28 75 0 7 7 5 95 0 5 5 26 75 4 1 2 2 3 93 0 3 3 22 3 76 29 29 0 0 29 43 29 42 36 34 0 28 0 27 37 17 17 19 17 36 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 490;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"117 435 OFFCURVE",
"24 321 OFFCURVE",
"24 212 QCURVE SMOOTH",
"24 102 OFFCURVE",
"114 -10 OFFCURVE",
"199 -10 QCURVE SMOOTH",
"250 -10 OFFCURVE",
"316 34 OFFCURVE",
"328 62 QCURVE",
"328 -188 LINE SMOOTH",
"328 -206 OFFCURVE",
"315 -207 QCURVE",
"259 -206 LINE",
"259 -239 LINE",
"500 -239 LINE",
"500 -206 LINE",
"472 -207 LINE",
"459 -208 OFFCURVE",
"459 -188 QCURVE SMOOTH",
"459 425 LINE",
"388 425 LINE",
"388 366 OFFCURVE",
"353 366 QCURVE SMOOTH",
"340 366 OFFCURVE",
"331 379 OFFCURVE",
"330 380 QCURVE",
"309 409 OFFCURVE",
"249 435 OFFCURVE",
"207 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288 390 OFFCURVE",
"326 299 OFFCURVE",
"326 231 QCURVE SMOOTH",
"326 187 LINE SMOOTH",
"326 132 OFFCURVE",
"284 36 OFFCURVE",
"238 36 QCURVE SMOOTH",
"199 36 OFFCURVE",
"164 115 OFFCURVE",
"164 219 QCURVE SMOOTH",
"164 311 OFFCURVE",
"197 390 OFFCURVE",
"240 390 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"26 435 OFFCURVE",
"24 212 QCURVE SMOOTH",
"24 102 OFFCURVE",
"114 -10 OFFCURVE",
"199 -10 QCURVE SMOOTH",
"250 -10 OFFCURVE",
"316 34 OFFCURVE",
"328 62 QCURVE",
"328 -188 LINE SMOOTH",
"328 -206 OFFCURVE",
"315 -207 QCURVE",
"259 -206 LINE",
"259 -239 LINE",
"500 -239 LINE",
"500 -206 LINE",
"472 -207 LINE",
"459 -208 OFFCURVE",
"459 -188 QCURVE SMOOTH",
"459 425 LINE",
"388 425 LINE",
"388 366 OFFCURVE",
"353 366 QCURVE SMOOTH",
"340 366 OFFCURVE",
"331 379 OFFCURVE",
"330 380 QCURVE",
"309 409 OFFCURVE",
"251 435 OFFCURVE",
"209 435 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288 390 OFFCURVE",
"326 299 OFFCURVE",
"326 231 QCURVE SMOOTH",
"326 187 LINE SMOOTH",
"326 132 OFFCURVE",
"284 36 OFFCURVE",
"238 36 QCURVE SMOOTH",
"199 36 OFFCURVE",
"164 115 OFFCURVE",
"164 219 QCURVE SMOOTH",
"164 311 OFFCURVE",
"197 390 OFFCURVE",
"240 390 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 76 values pushed */
19 1 7 0 1 74 0 0 8 7 8 0 7 126 0 1 1 20 75 10 1 8 8 6 95 9 1 6 6 28 75 0 7 7 5 95 0 5 5 26 75 4 1 2 2 3 93 0 3 3 22 3 76 29 29 0 0 29 41 29 40 35 33 0 28 0 27 37 17 17 19 17 36 11 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 513;
}
);
leftKerningGroup = c;
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
anchors = (
{
name = bottom;
position = "{128, 0}";
},
{
name = top;
position = "{207, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"250 430 OFFCURVE",
"193 381 OFFCURVE",
"170 325 QCURVE",
"170 374 LINE SMOOTH",
"170 387 OFFCURVE",
"174 414 OFFCURVE",
"176 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"71 396 LINE",
"84 396 OFFCURVE",
"84 376 QCURVE SMOOTH",
"84 43 LINE SMOOTH",
"84 24 OFFCURVE",
"71 24 QCURVE",
"39 26 LINE",
"39 0 LINE",
"244 0 LINE",
"244 26 LINE",
"183 24 LINE SMOOTH",
"170 24 OFFCURVE",
"170 43 QCURVE SMOOTH",
"170 216 LINE",
"172 256 OFFCURVE",
"198 343 OFFCURVE",
"244 402 OFFCURVE",
"275 402 QCURVE SMOOTH",
"287 402 OFFCURVE",
"298 389 OFFCURVE",
"298 381 QCURVE SMOOTH",
"298 373 OFFCURVE",
"294 359 QCURVE SMOOTH",
"290 345 OFFCURVE",
"290 336 QCURVE SMOOTH",
"290 320 OFFCURVE",
"313 305 OFFCURVE",
"327 305 QCURVE SMOOTH",
"346 305 OFFCURVE",
"369 329 OFFCURVE",
"369 352 QCURVE SMOOTH",
"369 386 OFFCURVE",
"326 430 OFFCURVE",
"287 430 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"210 430 OFFCURVE",
"170 325 QCURVE",
"170 374 LINE SMOOTH",
"170 387 OFFCURVE",
"174 414 OFFCURVE",
"176 420 QCURVE",
"35 420 LINE",
"35 394 LINE",
"71 396 LINE",
"84 396 OFFCURVE",
"84 376 QCURVE SMOOTH",
"84 43 LINE SMOOTH",
"84 24 OFFCURVE",
"71 24 QCURVE",
"39 26 LINE",
"39 0 LINE",
"244 0 LINE",
"244 26 LINE",
"183 24 LINE SMOOTH",
"170 24 OFFCURVE",
"170 43 QCURVE SMOOTH",
"170 216 LINE",
"172 256 OFFCURVE",
"198 343 OFFCURVE",
"244 402 OFFCURVE",
"275 402 QCURVE SMOOTH",
"298 401 OFFCURVE",
"298 380 QCURVE SMOOTH",
"298 373 OFFCURVE",
"294 359 QCURVE SMOOTH",
"290 345 OFFCURVE",
"290 336 QCURVE SMOOTH",
"290 320 OFFCURVE",
"313 305 OFFCURVE",
"327 305 QCURVE SMOOTH",
"346 305 OFFCURVE",
"369 329 OFFCURVE",
"369 352 QCURVE SMOOTH",
"369 386 OFFCURVE",
"326 430 OFFCURVE",
"287 430 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
39 1 0 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
13 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 0 5 2 1 0 112 0 1 1 7 95 8 1 7 7 28 75 0 5 5 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 0 5 2 5 0 2 126 0 1 1 7 95 8 1 7 7 28 75 0 5 5 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 42 0 41 17 35 33 17 37 40 36 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 383;
},
{
anchors = (
{
name = bottom;
position = "{133, 0}";
},
{
name = top;
position = "{217, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"233 435 OFFCURVE",
"197 333 QCURVE",
"197 379 LINE SMOOTH",
"197 392 OFFCURVE",
"201 419 OFFCURVE",
"203 425 QCURVE",
"21 425 LINE",
"21 392 LINE",
"53 394 LINE",
"66 394 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 32 OFFCURVE",
"53 32 QCURVE",
"25 34 LINE",
"25 0 LINE",
"279 0 LINE",
"279 34 LINE",
"210 32 LINE SMOOTH",
"197 32 OFFCURVE",
"197 51 QCURVE SMOOTH",
"197 201 LINE SMOOTH",
"198 242 OFFCURVE",
"220 330 OFFCURVE",
"261 389 OFFCURVE",
"287 389 QCURVE SMOOTH",
"306 389 OFFCURVE",
"306 367 QCURVE SMOOTH",
"306 365 OFFCURVE",
"303 347 QCURVE",
"299 333 OFFCURVE",
"299 326 QCURVE SMOOTH",
"299 306 OFFCURVE",
"332 285 OFFCURVE",
"353 285 QCURVE SMOOTH",
"378 285 OFFCURVE",
"413 315 OFFCURVE",
"413 345 QCURVE SMOOTH",
"413 385 OFFCURVE",
"358 435 OFFCURVE",
"315 435 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
38 8 2 0 1 25 1 2 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 0 1 2 1 0 112 5 1 1 1 7 95 8 1 7 7 28 75 5 1 1 1 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 0 1 2 1 0 2 126 5 1 1 1 7 95 8 1 7 7 28 75 5 1 1 1 6 93 0 6 6 20 75 4 1 2 2 3 93 0 3 3 21 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 40 0 39 17 35 18 17 37 39 36 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 419;
}
);
leftKerningGroup = dotlessi;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = racute;
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 374, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 383;
},
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 377, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 419;
}
);
leftKerningGroup = dotlessi;
note = racute;
rightKerningGroup = r;
unicode = 0155;
},
{
glyphname = rcaron;
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 398, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 383;
},
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 408, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 419;
}
);
note = rcaron;
rightKerningGroup = r;
unicode = 0159;
},
{
glyphname = rcommaaccent;
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 206, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 383;
},
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 227, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 419;
}
);
leftKerningGroup = dotlessi;
note = rcommaaccent;
rightKerningGroup = r;
unicode = 0157;
},
{
glyphname = rdblgrave;
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 383;
},
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 321, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 419;
}
);
unicode = 0211;
},
{
glyphname = rinvertedbreve;
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 378, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 383;
},
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 388, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 419;
}
);
unicode = 0213;
},
{
glyphname = s;
layers = (
{
anchors = (
{
name = bottom;
position = "{204, 0}";
},
{
name = top;
position = "{214, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"44 10 LINE",
"53 16 OFFCURVE",
"73 16 QCURVE SMOOTH",
"85 16 OFFCURVE",
"100 12 QCURVE SMOOTH",
"146 -1 OFFCURVE",
"191 -10 OFFCURVE",
"212 -10 QCURVE SMOOTH",
"286 -10 OFFCURVE",
"378 61 OFFCURVE",
"378 126 QCURVE SMOOTH",
"378 170 OFFCURVE",
"336 225 OFFCURVE",
"285 239 QCURVE SMOOTH",
"189 266 LINE SMOOTH",
"127 283 OFFCURVE",
"127 332 QCURVE SMOOTH",
"127 363 OFFCURVE",
"170 403 OFFCURVE",
"208 403 QCURVE SMOOTH",
"262 403 OFFCURVE",
"325 342 OFFCURVE",
"325 302 QCURVE",
"347 302 LINE",
"353 416 LINE",
"340 408 OFFCURVE",
"325 408 QCURVE SMOOTH",
"310 408 OFFCURVE",
"279 417 QCURVE SMOOTH",
"256 424 OFFCURVE",
"225 430 OFFCURVE",
"205 430 QCURVE SMOOTH",
"134 430 OFFCURVE",
"52 361 OFFCURVE",
"52 306 QCURVE SMOOTH",
"52 264 OFFCURVE",
"98 207 OFFCURVE",
"138 195 QCURVE SMOOTH",
"234 168 LINE SMOOTH",
"272 157 OFFCURVE",
"304 121 OFFCURVE",
"304 93 QCURVE SMOOTH",
"304 58 OFFCURVE",
"260 17 OFFCURVE",
"220 17 QCURVE SMOOTH",
"181 17 OFFCURVE",
"115 49 OFFCURVE",
"75 107 OFFCURVE",
"75 144 QCURVE",
"49 142 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"44 10 LINE",
"53 16 OFFCURVE",
"73 16 QCURVE SMOOTH",
"85 16 OFFCURVE",
"100 12 QCURVE SMOOTH",
"146 -1 OFFCURVE",
"191 -10 OFFCURVE",
"212 -10 QCURVE SMOOTH",
"286 -10 OFFCURVE",
"378 61 OFFCURVE",
"378 126 QCURVE SMOOTH",
"378 170 OFFCURVE",
"336 225 OFFCURVE",
"285 239 QCURVE SMOOTH",
"189 266 LINE SMOOTH",
"127 283 OFFCURVE",
"127 332 QCURVE SMOOTH",
"127 363 OFFCURVE",
"170 403 OFFCURVE",
"208 403 QCURVE SMOOTH",
"262 403 OFFCURVE",
"325 342 OFFCURVE",
"325 302 QCURVE",
"347 302 LINE",
"353 416 LINE",
"340 408 OFFCURVE",
"325 408 QCURVE SMOOTH",
"310 408 OFFCURVE",
"279 417 QCURVE SMOOTH",
"256 424 OFFCURVE",
"225 430 OFFCURVE",
"205 430 QCURVE SMOOTH",
"134 430 OFFCURVE",
"52 361 OFFCURVE",
"52 306 QCURVE SMOOTH",
"52 264 OFFCURVE",
"98 207 OFFCURVE",
"138 195 QCURVE SMOOTH",
"234 168 LINE SMOOTH",
"272 157 OFFCURVE",
"304 121 OFFCURVE",
"304 93 QCURVE SMOOTH",
"304 58 OFFCURVE",
"260 17 OFFCURVE",
"220 17 QCURVE SMOOTH",
"159 17 OFFCURVE",
"75 90 OFFCURVE",
"75 144 QCURVE",
"49 142 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
25 1 2 1 1 0 2 0 3 49 1 5 6 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 4 4 1 95 0 1 1 28 75 0 3 3 2 95 0 2 2 20 75 0 6 6 21 75 0 0 0 5 95 0 5 5 26 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 6 0 5 0 6 5 126 0 4 4 1 95 0 1 1 28 75 0 3 3 2 95 0 2 2 20 75 0 0 0 5 95 0 5 5 26 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 6 0 5 0 6 5 126 0 2 0 3 0 2 3 101 0 4 4 1 95 0 1 1 28 75 0 0 0 5 95 0 5 5 26 5 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
35 42 34 18 35 43 36 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 411;
},
{
anchors = (
{
name = bottom;
position = "{206, 0}";
},
{
name = top;
position = "{216, 425}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"35 10 LINE",
"44 16 OFFCURVE",
"66 16 QCURVE SMOOTH",
"78 16 OFFCURVE",
"94 12 QCURVE SMOOTH",
"144 -1 OFFCURVE",
"191 -10 OFFCURVE",
"214 -10 QCURVE SMOOTH",
"293 -10 OFFCURVE",
"389 69 OFFCURVE",
"389 140 QCURVE SMOOTH",
"389 192 OFFCURVE",
"338 258 OFFCURVE",
"269 276 QCURVE SMOOTH",
"200 294 LINE SMOOTH",
"173 301 OFFCURVE",
"145 328 OFFCURVE",
"145 347 QCURVE SMOOTH",
"145 370 OFFCURVE",
"182 401 OFFCURVE",
"213 401 QCURVE SMOOTH",
"267 401 OFFCURVE",
"330 345 OFFCURVE",
"330 307 QCURVE",
"360 307 LINE",
"366 421 LINE",
"352 413 OFFCURVE",
"336 413 QCURVE SMOOTH",
"318 413 OFFCURVE",
"286 422 QCURVE SMOOTH",
"261 429 OFFCURVE",
"227 435 OFFCURVE",
"206 435 QCURVE SMOOTH",
"128 435 OFFCURVE",
"42 358 OFFCURVE",
"42 296 QCURVE SMOOTH",
"42 245 OFFCURVE",
"97 179 OFFCURVE",
"155 163 QCURVE SMOOTH",
"227 143 LINE SMOOTH",
"262 134 OFFCURVE",
"291 107 OFFCURVE",
"291 84 QCURVE SMOOTH",
"291 56 OFFCURVE",
"252 25 OFFCURVE",
"219 25 QCURVE SMOOTH",
"159 25 OFFCURVE",
"74 93 OFFCURVE",
"74 144 QCURVE",
"40 142 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 10 LINE",
"44 16 OFFCURVE",
"66 16 QCURVE SMOOTH",
"78 16 OFFCURVE",
"94 12 QCURVE SMOOTH",
"144 -1 OFFCURVE",
"191 -10 OFFCURVE",
"214 -10 QCURVE SMOOTH",
"293 -10 OFFCURVE",
"389 69 OFFCURVE",
"389 140 QCURVE SMOOTH",
"389 192 OFFCURVE",
"338 258 OFFCURVE",
"269 276 QCURVE SMOOTH",
"200 294 LINE SMOOTH",
"145 308 OFFCURVE",
"145 347 QCURVE SMOOTH",
"145 370 OFFCURVE",
"182 401 OFFCURVE",
"213 401 QCURVE SMOOTH",
"267 401 OFFCURVE",
"330 345 OFFCURVE",
"330 307 QCURVE",
"360 307 LINE",
"366 421 LINE",
"352 413 OFFCURVE",
"336 413 QCURVE SMOOTH",
"318 413 OFFCURVE",
"286 422 QCURVE SMOOTH",
"261 429 OFFCURVE",
"227 435 OFFCURVE",
"206 435 QCURVE SMOOTH",
"128 435 OFFCURVE",
"42 358 OFFCURVE",
"42 296 QCURVE SMOOTH",
"42 245 OFFCURVE",
"97 179 OFFCURVE",
"155 163 QCURVE SMOOTH",
"227 143 LINE SMOOTH",
"262 134 OFFCURVE",
"291 107 OFFCURVE",
"291 84 QCURVE SMOOTH",
"291 56 OFFCURVE",
"252 25 OFFCURVE",
"219 25 QCURVE SMOOTH",
"159 25 OFFCURVE",
"74 93 OFFCURVE",
"74 144 QCURVE",
"40 142 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
24 1 3 2 49 1 6 7 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 5 5 2 95 0 2 2 28 75 0 4 4 3 95 0 3 3 20 75 0 0 0 7 95 0 7 7 21 75 0 1 1 6 95 0 6 6 26 6 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 0 0 7 6 0 7 103 0 5 5 2 95 0 2 2 28 75 0 4 4 3 95 0 3 3 20 75 0 1 1 6 95 0 6 6 26 6 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 3 0 4 0 3 4 101 0 0 0 7 6 0 7 103 0 5 5 2 95 0 2 2 28 75 0 1 1 6 95 0 6 6 26 6 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
35 43 34 18 35 43 34 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 415;
}
);
leftKerningGroup = s;
note = s;
unicode = 0073;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 381, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 411;
},
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 376, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 415;
}
);
leftKerningGroup = s;
note = sacute;
unicode = 015B;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 405, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 411;
},
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 407, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 415;
}
);
leftKerningGroup = s;
note = scaron;
unicode = 0161;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
59 1 5 4 35 34 2 3 6 33 27 14 3 1 2 13 1 0 1 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 3 6 2 6 3 2 126 0 1 0 0 1 0 100 0 7 7 4 95 0 4 4 28 75 0 6 6 5 95 0 5 5 20 75 0 2 2 21 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
0 3 6 2 6 3 2 126 0 2 1 6 2 1 124 0 1 0 0 1 0 100 0 7 7 4 95 0 4 4 28 75 0 6 6 5 95 0 5 5 20 6 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 3 6 2 6 3 2 126 0 2 1 6 2 1 124 0 5 0 6 3 5 6 101 0 1 0 0 1 0 100 0 7 7 4 95 0 4 4 28 7 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
34 18 35 43 38 45 35 42 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 411;
},
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 330, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
59 1 7 6 34 1 2 3 14 1 1 2 13 1 0 1 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 48 values pushed */
0 1 0 0 1 0 99 0 9 9 6 95 0 6 6 28 75 0 8 8 7 95 0 7 7 20 75 0 4 4 3 95 0 3 3 21 75 0 5 5 2 95 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
0 4 0 3 2 4 3 103 0 1 0 0 1 0 99 0 9 9 6 95 0 6 6 28 75 0 8 8 7 95 0 7 7 20 75 0 5 5 2 95 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 44 values pushed */
0 7 0 8 4 7 8 101 0 4 0 3 2 4 3 103 0 1 0 0 1 0 99 0 9 9 6 95 0 6 6 28 75 0 5 5 2 95 0 2 2 26 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
65 63 18 35 43 34 18 35 26 35 42 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 415;
}
);
leftKerningGroup = s;
note = scedilla;
unicode = 015F;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 405, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 411;
},
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 415;
}
);
unicode = 015D;
},
{
glyphname = scommaaccent;
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 282, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 411;
},
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 300, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 415;
}
);
leftKerningGroup = s;
note = scommaaccent;
unicode = 0219;
},
{
glyphname = germandbls;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"171 737 OFFCURVE",
"84 628 OFFCURVE",
"84 512 QCURVE SMOOTH",
"84 48 LINE SMOOTH",
"84 27 OFFCURVE",
"71 27 QCURVE",
"35 29 LINE",
"35 0 LINE",
"230 0 LINE",
"230 29 LINE",
"184 27 LINE",
"178 27 OFFCURVE",
"170 39 OFFCURVE",
"170 48 QCURVE SMOOTH",
"170 434 LINE SMOOTH",
"170 463 OFFCURVE",
"162 531 QCURVE SMOOTH",
"155 580 OFFCURVE",
"155 601 QCURVE SMOOTH",
"155 652 OFFCURVE",
"212 712 OFFCURVE",
"258 712 QCURVE SMOOTH",
"305 712 OFFCURVE",
"359 657 OFFCURVE",
"359 612 QCURVE SMOOTH",
"359 566 OFFCURVE",
"210 459 OFFCURVE",
"210 396 QCURVE SMOOTH",
"210 359 OFFCURVE",
"251 309 OFFCURVE",
"289 281 QCURVE SMOOTH",
"375 219 LINE SMOOTH",
"450 165 OFFCURVE",
"450 99 QCURVE SMOOTH",
"450 60 OFFCURVE",
"407 21 OFFCURVE",
"370 21 QCURVE SMOOTH",
"343 21 OFFCURVE",
"343 40 QCURVE SMOOTH",
"343 46 OFFCURVE",
"345 60 OFFCURVE",
"345 67 QCURVE SMOOTH",
"345 84 OFFCURVE",
"323 107 OFFCURVE",
"300 107 QCURVE SMOOTH",
"278 107 OFFCURVE",
"252 80 OFFCURVE",
"252 57 QCURVE SMOOTH",
"252 29 OFFCURVE",
"322 -8 OFFCURVE",
"374 -8 QCURVE SMOOTH",
"446 -8 OFFCURVE",
"529 73 OFFCURVE",
"529 139 QCURVE SMOOTH",
"529 213 OFFCURVE",
"440 277 QCURVE SMOOTH",
"353 340 LINE SMOOTH",
"289 384 OFFCURVE",
"289 427 QCURVE SMOOTH",
"289 464 OFFCURVE",
"438 550 OFFCURVE",
"438 622 QCURVE SMOOTH",
"438 675 OFFCURVE",
"339 737 OFFCURVE",
"257 737 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
27 1 4 1 1 74 0 1 3 4 3 1 4 126 8 1 7 0 3 1 7 3 103 6 1 4 4 5 93 0 5 5 21 75 0 2 2 0 95 0 0 0 26 0 76 0 0 0 74 0 73 69 67 66 65 64 62 53 51 34 32 25 23 19 17 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 528;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"172 737 OFFCURVE",
"65 629 OFFCURVE",
"65 512 QCURVE SMOOTH",
"65 48 LINE SMOOTH",
"65 27 OFFCURVE",
"53 27 QCURVE",
"20 29 LINE",
"20 0 LINE",
"245 0 LINE",
"245 29 LINE",
"210 27 LINE",
"204 27 OFFCURVE",
"196 39 OFFCURVE",
"196 48 QCURVE SMOOTH",
"196 434 LINE SMOOTH",
"196 464 OFFCURVE",
"188 528 QCURVE SMOOTH",
"181 579 OFFCURVE",
"181 603 QCURVE SMOOTH",
"181 649 OFFCURVE",
"226 705 OFFCURVE",
"264 705 QCURVE SMOOTH",
"304 705 OFFCURVE",
"348 643 OFFCURVE",
"348 590 QCURVE SMOOTH",
"348 522 OFFCURVE",
"241 417 OFFCURVE",
"241 363 QCURVE SMOOTH",
"241 335 OFFCURVE",
"275 285 OFFCURVE",
"308 258 QCURVE SMOOTH",
"371 207 LINE SMOOTH",
"431 156 OFFCURVE",
"431 92 QCURVE SMOOTH",
"431 57 OFFCURVE",
"401 21 OFFCURVE",
"377 21 QCURVE SMOOTH",
"356 21 OFFCURVE",
"356 39 QCURVE SMOOTH",
"356 45 OFFCURVE",
"362 71 OFFCURVE",
"362 79 QCURVE SMOOTH",
"362 97 OFFCURVE",
"339 121 OFFCURVE",
"314 121 QCURVE SMOOTH",
"286 121 OFFCURVE",
"254 91 OFFCURVE",
"254 65 QCURVE SMOOTH",
"254 30 OFFCURVE",
"320 -8 OFFCURVE",
"378 -8 QCURVE SMOOTH",
"456 -8 OFFCURVE",
"555 66 OFFCURVE",
"555 132 QCURVE SMOOTH",
"555 202 OFFCURVE",
"490 256 QCURVE SMOOTH",
"420 316 LINE SMOOTH",
"342 382 OFFCURVE",
"342 420 QCURVE SMOOTH",
"342 462 OFFCURVE",
"472 559 OFFCURVE",
"472 619 QCURVE SMOOTH",
"472 676 OFFCURVE",
"372 737 OFFCURVE",
"281 737 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
26 1 4 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 1 3 4 2 1 112 8 1 7 0 3 1 7 3 103 6 1 4 4 5 93 0 5 5 21 75 0 2 2 0 96 0 0 0 26 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 1 3 4 3 1 4 126 8 1 7 0 3 1 7 3 103 6 1 4 4 5 93 0 5 5 21 75 0 2 2 0 96 0 0 0 26 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 23 values pushed */
0 0 0 73 0 72 66 65 64 63 62 60 51 49 32 30 24 22 18 16 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 563;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = longs;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE",
"170 449 LINE SMOOTH",
"170 471 OFFCURVE",
"167 523 QCURVE SMOOTH",
"164 561 OFFCURVE",
"164 589 QCURVE SMOOTH",
"164 657 OFFCURVE",
"216 709 OFFCURVE",
"252 709 QCURVE SMOOTH",
"277 709 OFFCURVE",
"303 679 OFFCURVE",
"303 657 QCURVE SMOOTH",
"303 645 OFFCURVE",
"298 633 QCURVE",
"294 621 OFFCURVE",
"294 613 QCURVE SMOOTH",
"294 584 OFFCURVE",
"329 584 QCURVE SMOOTH",
"353 584 OFFCURVE",
"377 612 OFFCURVE",
"377 633 QCURVE SMOOTH",
"377 676 OFFCURVE",
"306 736 OFFCURVE",
"259 736 QCURVE SMOOTH",
"85 736 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
width = 296;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"276 0 LINE",
"276 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE",
"200 449 LINE SMOOTH",
"200 482 OFFCURVE",
"197 518 QCURVE SMOOTH",
"194 569 OFFCURVE",
"194 594 QCURVE SMOOTH",
"194 655 OFFCURVE",
"224 702 OFFCURVE",
"251 702 QCURVE SMOOTH",
"270 702 OFFCURVE",
"288 676 OFFCURVE",
"288 658 QCURVE SMOOTH",
"288 645 OFFCURVE",
"283 633 QCURVE",
"279 618 OFFCURVE",
"279 612 QCURVE SMOOTH",
"279 572 OFFCURVE",
"333 572 QCURVE SMOOTH",
"365 572 OFFCURVE",
"397 608 OFFCURVE",
"397 633 QCURVE SMOOTH",
"397 676 OFFCURVE",
"314 736 OFFCURVE",
"253 736 QCURVE SMOOTH",
"70 736 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
width = 299;
}
);
unicode = 017F;
},
{
glyphname = t;
layers = (
{
anchors = (
{
name = bottom;
position = "{155, 0}";
},
{
name = center;
position = "{131, 231}";
},
{
name = topright;
position = "{105, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"171 522 LINE",
"143 522 LINE",
"132 477 OFFCURVE",
"107 435 OFFCURVE",
"65 420 OFFCURVE",
"25 420 QCURVE",
"25 395 LINE",
"85 395 LINE",
"85 96 LINE SMOOTH",
"85 42 OFFCURVE",
"128 -6 OFFCURVE",
"179 -6 QCURVE SMOOTH",
"265 -6 OFFCURVE",
"285 50 QCURVE",
"264 63 LINE",
"259 46 OFFCURVE",
"227 23 OFFCURVE",
"212 23 QCURVE SMOOTH",
"189 23 OFFCURVE",
"171 50 OFFCURVE",
"171 88 QCURVE SMOOTH",
"171 395 LINE",
"281 395 LINE",
"281 420 LINE",
"171 420 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
11 10 2 2 1 1 74 0 6 0 6 131 4 1 1 1 0 95 5 1 0 0 20 75 0 2 2 3 95 0 3 3 18 3 76 19 17 19 36 35 17 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 313;
},
{
anchors = (
{
name = bottom;
position = "{161, 0}";
},
{
name = center;
position = "{137, 231}";
},
{
name = topright;
position = "{128, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"201 527 LINE",
"128 527 LINE",
"117 482 OFFCURVE",
"92 440 OFFCURVE",
"50 425 OFFCURVE",
"10 425 QCURVE",
"10 393 LINE",
"70 393 LINE",
"70 89 LINE SMOOTH",
"70 38 OFFCURVE",
"140 -9 OFFCURVE",
"201 -9 QCURVE SMOOTH",
"243 -9 OFFCURVE",
"298 20 OFFCURVE",
"311 52 QCURVE",
"284 67 LINE",
"277 49 OFFCURVE",
"250 28 OFFCURVE",
"238 28 QCURVE SMOOTH",
"219 28 OFFCURVE",
"201 52 OFFCURVE",
"201 87 QCURVE SMOOTH",
"201 393 LINE",
"300 393 LINE",
"300 425 LINE",
"201 425 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"201 527 LINE",
"128 527 LINE",
"117 482 OFFCURVE",
"92 440 OFFCURVE",
"50 425 OFFCURVE",
"10 425 QCURVE",
"10 393 LINE",
"70 393 LINE",
"70 89 LINE SMOOTH",
"70 38 OFFCURVE",
"140 -9 OFFCURVE",
"201 -9 QCURVE SMOOTH",
"288 -9 OFFCURVE",
"311 52 QCURVE",
"284 67 LINE",
"277 49 OFFCURVE",
"250 28 OFFCURVE",
"238 28 QCURVE SMOOTH",
"219 28 OFFCURVE",
"201 52 OFFCURVE",
"201 87 QCURVE SMOOTH",
"201 393 LINE",
"300 393 LINE",
"300 425 LINE",
"201 425 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
11 10 2 2 1 1 74 0 6 0 6 131 4 1 1 1 0 95 5 1 0 0 20 75 0 2 2 3 95 0 3 3 26 3 76 19 17 19 37 35 17 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 325;
}
);
leftKerningGroup = t;
note = t;
unicode = 0074;
},
{
glyphname = tbar;
layers = (
{
components = (
{
name = t;
},
{
name = baraccentcomb;
transform = "{1, 0, 0, 1, 347, -58}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 313;
},
{
components = (
{
name = t;
},
{
name = baraccentcomb;
transform = "{1, 0, 0, 1, 353, -58}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 313;
},
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 443, 12}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
leftKerningGroup = t;
note = tcaron;
unicode = 0165;
},
{
glyphname = tcedilla;
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 259, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
50 49 2 7 2 27 1 8 7 14 1 1 8 13 1 0 1 4 74 0 4 3 4 131 0 1 0 0 1 0 99 6 1 2 2 3 95 5 1 3 3 20 75 0 7 7 8 95 0 8 8 18 8 76 20 35 17 17 19 17 30 35 42 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 313;
},
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 285, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
49 48 2 7 2 27 1 8 7 14 1 1 8 13 1 0 1 4 74 0 4 3 4 131 0 1 0 0 1 0 99 6 1 2 2 3 95 5 1 3 3 20 75 0 7 7 8 95 0 8 8 26 8 76 37 35 17 17 19 17 29 35 42 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 325;
}
);
leftKerningGroup = t;
note = uni0163;
unicode = 0163;
},
{
glyphname = tcommaaccent;
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 313;
},
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 255, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
leftKerningGroup = t;
note = uni021B;
unicode = 021B;
},
{
glyphname = tdotbelow;
layers = (
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 327, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 313;
},
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 325;
}
);
unicode = 1E6D;
},
{
glyphname = u;
layers = (
{
anchors = (
{
name = bottom;
position = "{235, 0}";
},
{
name = ogonek;
position = "{398, 0}";
},
{
name = top;
position = "{239, 420}";
},
{
name = topright;
position = "{335, 441}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"453 24 LINE",
"440 24 OFFCURVE",
"440 43 QCURVE SMOOTH",
"440 420 LINE",
"294 420 LINE",
"294 394 LINE",
"341 396 LINE",
"353 396 OFFCURVE",
"353 375 QCURVE SMOOTH",
"352 186 LINE",
"347 110 OFFCURVE",
"273 23 OFFCURVE",
"216 23 QCURVE SMOOTH",
"179 23 OFFCURVE",
"155 80 OFFCURVE",
"155 148 QCURVE SMOOTH",
"155 420 LINE",
"20 420 LINE",
"20 394 LINE",
"56 396 LINE",
"69 396 OFFCURVE",
"69 376 QCURVE SMOOTH",
"69 148 LINE SMOOTH",
"69 64 OFFCURVE",
"128 -10 OFFCURVE",
"195 -10 QCURVE SMOOTH",
"251 -10 OFFCURVE",
"332 39 OFFCURVE",
"352 85 QCURVE",
"352 72 LINE SMOOTH",
"352 12 OFFCURVE",
"347 0 QCURVE",
"489 0 LINE",
"489 26 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"453 24 LINE",
"440 24 OFFCURVE",
"440 43 QCURVE SMOOTH",
"440 420 LINE",
"294 420 LINE",
"294 394 LINE",
"341 396 LINE",
"353 396 OFFCURVE",
"353 375 QCURVE SMOOTH",
"352 186 LINE",
"347 110 OFFCURVE",
"273 23 OFFCURVE",
"216 23 QCURVE SMOOTH",
"179 23 OFFCURVE",
"155 80 OFFCURVE",
"155 148 QCURVE SMOOTH",
"155 420 LINE",
"20 420 LINE",
"20 394 LINE",
"56 396 LINE",
"69 396 OFFCURVE",
"69 376 QCURVE SMOOTH",
"69 148 LINE SMOOTH",
"69 64 OFFCURVE",
"128 -10 OFFCURVE",
"195 -10 QCURVE SMOOTH",
"309 -10 OFFCURVE",
"352 85 QCURVE",
"352 72 LINE SMOOTH",
"352 12 OFFCURVE",
"347 0 QCURVE",
"489 0 LINE",
"489 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
5 1 4 2 1 74 5 1 2 2 3 93 6 1 3 3 20 75 8 7 2 4 4 0 93 0 0 0 21 75 8 7 2 4 4 1 95 0 1 1 26 1 76 0 0 0 33 0 32 17 36 35 17 36 37 17 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 524;
},
{
anchors = (
{
name = bottom;
position = "{246, 0}";
},
{
name = ogonek;
position = "{409, 0}";
},
{
name = top;
position = "{244, 425}";
},
{
name = topright;
position = "{345, 448}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"479 32 LINE",
"466 33 OFFCURVE",
"466 51 QCURVE SMOOTH",
"466 425 LINE",
"283 425 LINE",
"283 392 LINE",
"322 394 LINE",
"334 394 OFFCURVE",
"334 374 QCURVE SMOOTH",
"334 220 LINE SMOOTH",
"333 162 OFFCURVE",
"303 79 OFFCURVE",
"256 37 OFFCURVE",
"232 37 QCURVE SMOOTH",
"205 37 OFFCURVE",
"188 81 OFFCURVE",
"188 132 QCURVE SMOOTH",
"188 425 LINE",
"11 425 LINE",
"11 392 LINE",
"44 394 LINE",
"57 394 OFFCURVE",
"57 375 QCURVE SMOOTH",
"57 138 LINE SMOOTH",
"57 61 OFFCURVE",
"117 -10 OFFCURVE",
"182 -10 QCURVE SMOOTH",
"289 -10 OFFCURVE",
"334 89 QCURVE",
"334 44 LINE SMOOTH",
"334 15 OFFCURVE",
"329 0 QCURVE",
"512 0 LINE",
"512 34 LINE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"479 32 LINE",
"466 33 OFFCURVE",
"466 51 QCURVE SMOOTH",
"466 425 LINE",
"283 425 LINE",
"283 392 LINE",
"322 394 LINE",
"334 394 OFFCURVE",
"334 374 QCURVE SMOOTH",
"334 220 LINE SMOOTH",
"334 142 OFFCURVE",
"273 37 OFFCURVE",
"232 37 QCURVE SMOOTH",
"205 37 OFFCURVE",
"188 81 OFFCURVE",
"188 132 QCURVE SMOOTH",
"188 425 LINE",
"11 425 LINE",
"11 392 LINE",
"44 394 LINE",
"57 394 OFFCURVE",
"57 375 QCURVE SMOOTH",
"57 138 LINE SMOOTH",
"57 61 OFFCURVE",
"117 -10 OFFCURVE",
"182 -10 QCURVE SMOOTH",
"289 -10 OFFCURVE",
"334 89 QCURVE",
"334 44 LINE SMOOTH",
"334 15 OFFCURVE",
"329 0 QCURVE",
"512 0 LINE",
"512 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
5 1 4 2 1 74 5 1 2 2 3 93 6 1 3 3 20 75 8 7 2 4 4 0 93 0 0 0 21 75 8 7 2 4 4 1 95 0 1 1 26 1 76 0 0 0 33 0 33 17 37 35 17 36 36 17 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 532;
}
);
leftKerningGroup = u;
note = u;
unicode = 0075;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 406, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 016D;
},
{
glyphname = ucaron;
layers = (
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 435, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01D4;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udblgrave;
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 349, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 0215;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = udieresis;
unicode = 00FC;
},
{
glyphname = udieresisacute;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb_acutecomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb_acutecomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01D8;
},
{
glyphname = udieresiscaron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb_caroncomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb_caroncomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01DA;
},
{
glyphname = udieresisgrave;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb_gravecomb;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb_gravecomb;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01DC;
},
{
glyphname = udieresismacron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb_macroncomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb_macroncomb;
transform = "{1, 0, 0, 1, 452, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01D6;
},
{
glyphname = udotbelow;
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EE5;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhookabove;
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 565, 21}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 596, 23}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 406, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 494, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = uinvertedbreve;
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 0217;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = umacron;
unicode = 016B;
},
{
glyphname = uogonek;
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 549, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
13 1 5 3 51 1 10 2 2 74 0 10 0 0 10 0 99 6 1 3 3 4 93 7 1 4 4 20 75 8 1 5 5 1 93 9 1 1 1 21 75 8 1 5 5 2 95 0 2 2 26 2 76 50 48 44 43 34 17 36 35 17 36 37 21 34 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 524;
},
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 560, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
13 1 5 3 51 1 10 2 2 74 0 10 0 0 10 0 99 6 1 3 3 4 93 7 1 4 4 20 75 8 1 5 5 1 93 9 1 1 1 21 75 8 1 5 5 2 95 0 2 2 26 2 76 50 48 44 43 19 17 37 35 17 36 36 21 34 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 532;
}
);
leftKerningGroup = u;
note = uogonek;
unicode = 0173;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 358, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 363, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
leftKerningGroup = u;
note = uring;
unicode = 016F;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 524;
},
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 532;
}
);
unicode = 0169;
},
{
glyphname = v;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"294 420 LINE",
"294 394 LINE",
"338 396 LINE",
"348 397 OFFCURVE",
"348 388 QCURVE SMOOTH",
"348 384 OFFCURVE",
"346 380 QCURVE",
"240 112 LINE",
"131 376 LINE SMOOTH",
"128 384 OFFCURVE",
"139 396 OFFCURVE",
"146 396 QCURVE",
"190 394 LINE",
"190 420 LINE",
"-13 420 LINE",
"-13 394 LINE",
"20 396 LINE",
"27 396 OFFCURVE",
"38 388 OFFCURVE",
"40 383 QCURVE SMOOTH",
"194 -5 LINE",
"221 -5 LINE",
"379 381 LINE",
"384 396 OFFCURVE",
"402 396 QCURVE",
"435 394 LINE",
"435 420 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
22 19 2 1 0 1 74 5 4 2 3 0 0 3 93 7 6 2 3 3 20 75 0 1 1 18 1 76 0 0 0 26 0 26 25 17 17 35 18 33 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 444;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"321 425 LINE",
"321 392 LINE",
"362 394 LINE",
"372 395 OFFCURVE",
"372 386 QCURVE SMOOTH",
"372 382 OFFCURVE",
"370 378 QCURVE",
"278 143 LINE",
"182 374 LINE",
"178 382 OFFCURVE",
"190 394 OFFCURVE",
"197 394 QCURVE",
"238 392 LINE",
"238 425 LINE",
"-13 425 LINE",
"-13 392 LINE",
"19 394 LINE",
"25 395 OFFCURVE",
"37 387 OFFCURVE",
"39 381 QCURVE",
"193 -5 LINE",
"254 -5 LINE",
"411 379 LINE SMOOTH",
"417 394 OFFCURVE",
"431 394 QCURVE SMOOTH",
"466 392 LINE",
"466 425 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
23 20 12 3 1 0 1 74 4 3 2 0 0 2 93 6 5 2 2 2 20 75 0 1 1 18 1 76 0 0 0 27 0 27 25 17 22 18 49 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
leftKerningGroup = v;
note = v;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
anchors = (
{
name = top;
position = "{365, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"557 420 LINE",
"557 394 LINE",
"610 396 LINE",
"623 397 OFFCURVE",
"623 387 QCURVE",
"621 379 LINE",
"526 117 LINE",
"393 425 LINE",
"372 425 LINE",
"235 111 LINE",
"141 376 LINE SMOOTH",
"138 384 OFFCURVE",
"145 396 OFFCURVE",
"154 396 QCURVE SMOOTH",
"156 396 LINE",
"200 394 LINE",
"200 420 LINE",
"-13 420 LINE",
"-13 394 LINE",
"33 396 LINE",
"44 396 OFFCURVE",
"50 383 QCURVE",
"191 -10 LINE",
"211 -10 LINE",
"349 302 LINE",
"483 -10 LINE",
"505 -10 LINE",
"654 379 LINE SMOOTH",
"660 396 OFFCURVE",
"675 396 QCURVE",
"716 394 LINE",
"716 420 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
27 25 22 7 4 1 0 1 74 0 6 6 20 75 7 5 3 3 0 0 4 93 9 8 2 4 4 20 75 2 1 1 1 18 1 76 0 0 0 31 0 31 21 20 49 17 34 18 18 33 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 725;
},
{
anchors = (
{
name = top;
position = "{377, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"571 425 LINE",
"571 392 LINE",
"624 394 LINE",
"637 395 OFFCURVE",
"637 385 QCURVE",
"635 377 LINE",
"552 150 LINE",
"434 430 LINE",
"386 430 LINE",
"264 144 LINE",
"182 374 LINE SMOOTH",
"179 382 OFFCURVE",
"186 394 OFFCURVE",
"195 394 QCURVE SMOOTH",
"197 394 LINE",
"241 392 LINE",
"241 425 LINE",
"-13 425 LINE",
"-13 392 LINE",
"29 394 LINE",
"40 394 OFFCURVE",
"46 381 QCURVE",
"187 -10 LINE",
"231 -10 LINE",
"358 276 LINE",
"480 -10 LINE",
"527 -10 LINE",
"675 377 LINE SMOOTH",
"682 394 OFFCURVE",
"696 394 QCURVE",
"733 392 LINE",
"733 425 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
27 25 22 7 4 1 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
7 5 3 3 0 0 4 93 9 8 6 3 4 4 20 75 2 1 1 1 18 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 6 6 20 75 7 5 3 3 0 0 4 93 9 8 2 4 4 20 75 2 1 1 1 18 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
7 5 3 3 0 0 4 93 9 8 6 3 4 4 20 75 2 1 1 1 18 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
0 6 6 20 75 7 5 3 3 0 0 4 93 9 8 2 4 4 20 75 2 1 1 1 18 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
0 0 0 31 0 31 21 20 49 17 34 18 18 33 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 742;
}
);
leftKerningGroup = v;
note = w;
rightKerningGroup = v;
unicode = 0077;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 532, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 725;
},
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 537, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 742;
}
);
leftKerningGroup = v;
note = wacute;
rightKerningGroup = v;
unicode = 1E83;
},
{
glyphname = wcircumflex;
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 556, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 725;
},
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 568, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 742;
}
);
leftKerningGroup = v;
note = wcircumflex;
rightKerningGroup = v;
unicode = 0175;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 551, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 725;
},
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 585, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 742;
}
);
leftKerningGroup = v;
note = wdieresis;
rightKerningGroup = v;
unicode = 1E85;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 725;
},
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 486, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 742;
}
);
leftKerningGroup = v;
note = wgrave;
rightKerningGroup = v;
unicode = 1E81;
},
{
glyphname = x;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"434 24 LINE",
"424 24 OFFCURVE",
"415 37 QCURVE SMOOTH",
"274 237 LINE",
"379 381 LINE SMOOTH",
"384 388 OFFCURVE",
"399 396 OFFCURVE",
"404 396 QCURVE",
"446 394 LINE",
"446 420 LINE",
"297 420 LINE",
"297 394 LINE",
"340 396 LINE",
"349 396 OFFCURVE",
"349 388 QCURVE SMOOTH",
"349 384 OFFCURVE",
"346 379 QCURVE",
"257 261 LINE",
"171 383 LINE",
"166 389 OFFCURVE",
"173 396 OFFCURVE",
"180 396 QCURVE",
"226 394 LINE",
"226 420 LINE",
"11 420 LINE",
"11 394 LINE",
"50 396 LINE",
"62 396 OFFCURVE",
"69 383 QCURVE",
"194 206 LINE",
"69 37 LINE SMOOTH",
"59 24 OFFCURVE",
"48 24 QCURVE",
"5 26 LINE",
"5 0 LINE",
"157 0 LINE",
"157 26 LINE",
"114 24 LINE",
"101 24 OFFCURVE",
"101 34 QCURVE",
"103 38 LINE",
"211 182 LINE",
"313 37 LINE SMOOTH",
"316 33 OFFCURVE",
"313 23 OFFCURVE",
"307 23 QCURVE SMOOTH",
"306 23 LINE",
"257 26 LINE",
"257 0 LINE",
"478 0 LINE",
"478 26 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
47 36 33 21 9 5 1 5 1 74 10 8 7 3 5 5 6 93 9 1 6 6 20 75 12 11 4 2 4 1 1 0 93 3 1 0 0 21 0 76 0 0 0 50 0 49 43 42 41 40 25 17 17 36 33 17 40 17 17 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 486;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"472 32 LINE",
"462 32 OFFCURVE",
"453 45 QCURVE SMOOTH",
"327 223 LINE",
"446 379 LINE SMOOTH",
"451 386 OFFCURVE",
"466 394 OFFCURVE",
"471 394 QCURVE",
"509 392 LINE",
"509 425 LINE",
"356 425 LINE",
"356 392 LINE",
"399 394 LINE",
"408 394 OFFCURVE",
"408 386 QCURVE SMOOTH",
"408 382 OFFCURVE",
"405 377 QCURVE",
"307 252 LINE",
"215 381 LINE",
"210 387 OFFCURVE",
"217 394 OFFCURVE",
"224 394 QCURVE",
"270 392 LINE",
"270 425 LINE",
"7 425 LINE",
"7 392 LINE",
"42 394 LINE",
"54 394 OFFCURVE",
"61 381 QCURVE",
"183 208 LINE",
"67 45 LINE SMOOTH",
"58 32 OFFCURVE",
"46 32 QCURVE",
"7 34 LINE",
"7 0 LINE",
"162 0 LINE",
"162 34 LINE",
"119 32 LINE",
"106 32 OFFCURVE",
"106 42 QCURVE",
"108 46 LINE",
"204 178 LINE",
"298 45 LINE SMOOTH",
"301 41 OFFCURVE",
"298 31 OFFCURVE",
"292 31 QCURVE SMOOTH",
"291 31 LINE",
"242 34 LINE",
"242 0 LINE",
"512 0 LINE",
"512 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
47 36 33 21 9 5 1 5 1 74 10 8 7 3 5 5 6 93 9 1 6 6 20 75 12 11 4 2 4 1 1 0 93 3 1 0 0 21 0 76 0 0 0 50 0 49 43 42 41 40 25 17 17 36 33 17 40 17 17 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 523;
}
);
leftKerningGroup = x;
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
anchors = (
{
name = bottom;
position = "{360, 0}";
},
{
name = top;
position = "{262, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"327 420 LINE",
"327 394 LINE",
"374 396 LINE",
"385 396 OFFCURVE",
"385 387 QCURVE SMOOTH",
"385 383 OFFCURVE",
"384 381 QCURVE",
"271 111 LINE",
"149 379 LINE",
"146 385 OFFCURVE",
"154 396 OFFCURVE",
"161 396 QCURVE",
"206 394 LINE",
"206 420 LINE",
"-13 420 LINE",
"-13 394 LINE",
"36 396 LINE",
"46 396 OFFCURVE",
"52 383 QCURVE SMOOTH",
"225 4 LINE",
"167 -135 LINE SMOOTH",
"158 -158 OFFCURVE",
"133 -181 OFFCURVE",
"121 -181 QCURVE SMOOTH",
"115 -181 OFFCURVE",
"105 -176 OFFCURVE",
"96 -163 QCURVE",
"89 -152 OFFCURVE",
"73 -139 OFFCURVE",
"58 -139 QCURVE SMOOTH",
"42 -139 OFFCURVE",
"19 -165 OFFCURVE",
"19 -190 QCURVE",
"21 -213 OFFCURVE",
"58 -239 OFFCURVE",
"85 -239 QCURVE SMOOTH",
"125 -239 OFFCURVE",
"179 -191 OFFCURVE",
"203 -132 QCURVE SMOOTH",
"414 377 LINE",
"423 396 OFFCURVE",
"439 396 QCURVE SMOOTH",
"482 394 LINE",
"482 420 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
39 38 26 3 2 0 12 1 1 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 2 0 3 3 2 112 7 6 4 3 0 0 5 93 9 8 2 5 5 20 75 0 3 3 1 96 0 1 1 22 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 2 0 3 0 2 3 126 7 6 4 3 0 0 5 93 9 8 2 5 5 20 75 0 3 3 1 96 0 1 1 22 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
0 0 0 45 0 45 40 17 17 37 37 36 36 49 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 485;
},
{
anchors = (
{
name = bottom;
position = "{390, 0}";
},
{
name = top;
position = "{295, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"341 425 LINE",
"341 392 LINE",
"388 394 LINE",
"399 394 OFFCURVE",
"399 385 QCURVE SMOOTH",
"399 381 OFFCURVE",
"398 379 QCURVE",
"306 158 LINE",
"199 377 LINE SMOOTH",
"196 383 OFFCURVE",
"204 394 OFFCURVE",
"211 394 QCURVE",
"256 392 LINE",
"256 425 LINE",
"-2 425 LINE",
"-2 392 LINE",
"37 394 LINE",
"47 394 OFFCURVE",
"53 381 QCURVE SMOOTH",
"237 -6 LINE",
"190 -119 LINE SMOOTH",
"178 -147 OFFCURVE",
"159 -168 OFFCURVE",
"146 -168 QCURVE SMOOTH",
"137 -168 OFFCURVE",
"126 -157 OFFCURVE",
"120 -145 QCURVE SMOOTH",
"111 -128 OFFCURVE",
"88 -109 OFFCURVE",
"65 -109 QCURVE SMOOTH",
"43 -109 OFFCURVE",
"8 -143 OFFCURVE",
"8 -174 QCURVE",
"10 -206 OFFCURVE",
"55 -239 OFFCURVE",
"92 -239 QCURVE SMOOTH",
"139 -239 OFFCURVE",
"203 -186 OFFCURVE",
"232 -116 QCURVE SMOOTH",
"436 375 LINE",
"443 394 OFFCURVE",
"461 394 QCURVE SMOOTH",
"500 392 LINE",
"500 425 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
38 37 25 3 2 0 1 74 0 3 2 1 2 3 1 126 7 6 4 3 0 0 5 93 9 8 2 5 5 20 75 0 2 2 1 95 0 1 1 22 1 76 0 0 0 44 0 44 40 17 17 37 36 36 36 49 10 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 501;
}
);
leftKerningGroup = y;
note = y;
rightKerningGroup = v;
unicode = 0079;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 429, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 455, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
leftKerningGroup = y;
note = yacute;
rightKerningGroup = v;
unicode = 00FD;
},
{
glyphname = ycircumflex;
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 453, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 486, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
leftKerningGroup = y;
note = ycircumflex;
rightKerningGroup = v;
unicode = 0177;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 503, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
leftKerningGroup = y;
note = ydieresis;
rightKerningGroup = v;
unicode = 00FF;
},
{
glyphname = ydotbelow;
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 532, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 593, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 371, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 404, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
leftKerningGroup = y;
note = ygrave;
rightKerningGroup = v;
unicode = 1EF3;
},
{
glyphname = yhookabove;
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
unicode = 1EF7;
},
{
glyphname = ymacron;
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 484, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 517, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
unicode = 0233;
},
{
glyphname = ytilde;
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 448, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 485;
},
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
unicode = 1EF9;
},
{
glyphname = z;
layers = (
{
anchors = (
{
name = top;
position = "{225, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"377 139 LINE",
"377 82 OFFCURVE",
"311 25 OFFCURVE",
"248 25 QCURVE SMOOTH",
"142 25 LINE",
"388 401 LINE",
"388 420 LINE",
"150 420 LINE SMOOTH",
"110 420 OFFCURVE",
"57 422 OFFCURVE",
"54 422 QCURVE",
"45 280 LINE",
"66 280 LINE",
"74 335 OFFCURVE",
"135 395 OFFCURVE",
"185 395 QCURVE SMOOTH",
"283 395 LINE",
"34 18 LINE",
"34 -2 LINE",
"45 -2 OFFCURVE",
"54 -1 QCURVE",
"138 0 LINE",
"398 0 LINE",
"398 139 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
18 1 2 4 6 1 0 5 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 3 2 6 2 3 112 7 1 6 5 5 6 110 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
13 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 3 2 6 2 3 6 126 7 1 6 5 2 6 5 124 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 3 2 6 2 3 6 126 7 1 6 5 2 6 5 124 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
0 0 0 23 0 23 34 65 18 34 17 33 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 441;
},
{
anchors = (
{
name = top;
position = "{228, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"377 139 LINE",
"377 86 OFFCURVE",
"311 33 OFFCURVE",
"248 33 QCURVE SMOOTH",
"192 33 LINE",
"399 399 LINE",
"399 425 LINE",
"151 425 LINE SMOOTH",
"111 425 OFFCURVE",
"58 427 OFFCURVE",
"55 427 QCURVE",
"46 285 LINE",
"74 285 LINE",
"82 337 OFFCURVE",
"139 393 OFFCURVE",
"186 393 QCURVE SMOOTH",
"246 393 LINE",
"34 26 LINE",
"34 -2 LINE",
"45 -2 OFFCURVE",
"54 -1 QCURVE",
"138 0 LINE",
"406 0 LINE",
"406 139 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
18 1 2 4 6 1 0 5 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 3 2 6 2 3 112 7 1 6 5 5 6 110 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 3 2 6 2 3 6 126 7 1 6 5 5 6 110 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 3 2 6 2 3 112 7 1 6 5 5 6 110 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 3 2 6 2 3 6 126 7 1 6 5 2 6 5 124 0 2 2 4 93 0 4 4 20 75 0 5 5 0 96 1 1 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
0 0 0 23 0 23 34 65 18 34 17 33 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 443;
}
);
leftKerningGroup = dotlessi;
note = z;
unicode = 007A;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 441;
},
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 388, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 443;
}
);
leftKerningGroup = dotlessi;
note = zacute;
unicode = 017A;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 441;
},
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 419, 5}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 443;
}
);
leftKerningGroup = dotlessi;
note = zcaron;
unicode = 017E;
},
{
glyphname = zdotaccent;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 314, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 441;
},
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 349, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 443;
}
);
leftKerningGroup = dotlessi;
note = zdotaccent;
unicode = 017C;
},
{
glyphname = cacute.loclPLK;
layers = (
{
components = (
{
name = c;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 425;
},
{
components = (
{
name = c;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 384, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 439;
}
);
},
{
glyphname = nacute.loclPLK;
layers = (
{
components = (
{
name = n;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 427, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 525;
},
{
components = (
{
name = n;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 539;
}
);
},
{
glyphname = oacute.loclPLK;
layers = (
{
components = (
{
name = o;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 383, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = o;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 384, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 487;
}
);
},
{
glyphname = sacute.loclPLK;
layers = (
{
components = (
{
name = s;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 361, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 411;
},
{
components = (
{
name = s;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 415;
}
);
},
{
glyphname = zacute.loclPLK;
layers = (
{
components = (
{
name = z;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 372, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 441;
},
{
components = (
{
name = z;
},
{
name = acute.loclPLK.comb;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 443;
}
);
},
{
glyphname = f.ss01;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"277 395 LINE",
"277 420 LINE",
"170 420 LINE",
"170 449 LINE SMOOTH",
"170 471 OFFCURVE",
"168 509 OFFCURVE",
"167 523 QCURVE SMOOTH",
"164 561 OFFCURVE",
"164 589 QCURVE SMOOTH",
"164 709 OFFCURVE",
"227 709 QCURVE SMOOTH",
"241 709 OFFCURVE",
"257 691 OFFCURVE",
"257 677 QCURVE SMOOTH",
"257 665 OFFCURVE",
"252 653 QCURVE",
"248 641 OFFCURVE",
"248 633 QCURVE SMOOTH",
"248 604 OFFCURVE",
"283 604 QCURVE SMOOTH",
"307 604 OFFCURVE",
"331 632 OFFCURVE",
"331 653 QCURVE SMOOTH",
"331 688 OFFCURVE",
"273 736 OFFCURVE",
"234 736 QCURVE SMOOTH",
"149 736 OFFCURVE",
"85 591 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"277 395 LINE",
"277 420 LINE",
"170 420 LINE",
"170 449 LINE SMOOTH",
"170 471 OFFCURVE",
"168 509 OFFCURVE",
"167 523 QCURVE SMOOTH",
"164 561 OFFCURVE",
"164 589 QCURVE SMOOTH",
"164 709 OFFCURVE",
"237 709 QCURVE SMOOTH",
"261 709 OFFCURVE",
"277 691 OFFCURVE",
"277 677 QCURVE SMOOTH",
"277 665 OFFCURVE",
"268 641 OFFCURVE",
"268 633 QCURVE SMOOTH",
"268 604 OFFCURVE",
"303 604 QCURVE SMOOTH",
"327 604 OFFCURVE",
"351 632 OFFCURVE",
"351 653 QCURVE SMOOTH",
"351 688 OFFCURVE",
"293 736 OFFCURVE",
"244 736 QCURVE SMOOTH",
"159 736 OFFCURVE",
"85 601 OFFCURVE",
"85 496 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
42 10 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 296;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"284 0 LINE",
"284 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"281 393 LINE",
"281 425 LINE",
"200 425 LINE",
"200 465 LINE SMOOTH",
"200 494 OFFCURVE",
"191 539 OFFCURVE",
"183 565 QCURVE SMOOTH",
"171 610 OFFCURVE",
"171 625 QCURVE SMOOTH",
"171 702 OFFCURVE",
"216 702 QCURVE SMOOTH",
"237 702 OFFCURVE",
"248 686 OFFCURVE",
"248 676 QCURVE SMOOTH",
"248 668 OFFCURVE",
"241 640 OFFCURVE",
"241 629 QCURVE SMOOTH",
"241 591 OFFCURVE",
"291 591 QCURVE SMOOTH",
"320 591 OFFCURVE",
"350 624 OFFCURVE",
"350 647 QCURVE SMOOTH",
"350 688 OFFCURVE",
"284 736 OFFCURVE",
"224 736 QCURVE SMOOTH",
"142 736 OFFCURVE",
"70 619 OFFCURVE",
"70 539 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
44 10 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 310;
}
);
note = f.ss01;
},
{
glyphname = f_f;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"362 395 LINE",
"362 420 LINE",
"170 420 LINE",
"170 446 LINE SMOOTH",
"170 465 OFFCURVE",
"167 520 QCURVE SMOOTH",
"164 555 OFFCURVE",
"164 586 QCURVE SMOOTH",
"164 654 OFFCURVE",
"223 708 OFFCURVE",
"267 706 QCURVE SMOOTH",
"332 703 OFFCURVE",
"373 655 QCURVE",
"390 684 LINE",
"332 736 OFFCURVE",
"264 736 QCURVE SMOOTH",
"90 736 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
},
{
closed = 1;
nodes = (
"277 0 LINE",
"492 0 LINE",
"492 26 LINE",
"426 24 LINE SMOOTH",
"413 24 OFFCURVE",
"413 43 QCURVE SMOOTH",
"413 395 LINE",
"519 395 LINE",
"519 420 LINE",
"412 420 LINE",
"412 449 LINE SMOOTH",
"412 471 OFFCURVE",
"409 523 QCURVE SMOOTH",
"407 561 OFFCURVE",
"406 589 QCURVE SMOOTH",
"404 657 OFFCURVE",
"458 709 OFFCURVE",
"494 709 QCURVE SMOOTH",
"519 709 OFFCURVE",
"545 679 OFFCURVE",
"545 657 QCURVE SMOOTH",
"545 645 OFFCURVE",
"540 633 QCURVE",
"536 621 OFFCURVE",
"536 613 QCURVE SMOOTH",
"536 584 OFFCURVE",
"571 584 QCURVE SMOOTH",
"595 584 OFFCURVE",
"619 612 OFFCURVE",
"619 633 QCURVE SMOOTH",
"619 676 OFFCURVE",
"548 736 OFFCURVE",
"501 736 QCURVE SMOOTH",
"327 736 OFFCURVE",
"327 486 QCURVE SMOOTH",
"327 43 LINE SMOOTH",
"327 24 OFFCURVE",
"314 24 QCURVE",
"277 26 LINE"
);
}
);
width = 538;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"256 0 LINE",
"256 34 LINE",
"214 32 LINE SMOOTH",
"201 31 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"400 393 LINE",
"400 425 LINE",
"200 425 LINE",
"200 444 LINE SMOOTH",
"200 472 OFFCURVE",
"197 513 QCURVE SMOOTH",
"194 559 OFFCURVE",
"194 589 QCURVE SMOOTH",
"194 650 OFFCURVE",
"233 700 OFFCURVE",
"274 697 QCURVE SMOOTH",
"345 692 OFFCURVE",
"392 638 QCURVE",
"413 672 LINE",
"352 736 OFFCURVE",
"264 736 QCURVE SMOOTH",
"70 736 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
},
{
closed = 1;
nodes = (
"291 0 LINE",
"547 0 LINE",
"547 34 LINE",
"485 32 LINE SMOOTH",
"472 32 OFFCURVE",
"472 51 QCURVE SMOOTH",
"472 393 LINE",
"550 393 LINE",
"550 425 LINE",
"471 425 LINE",
"471 449 LINE SMOOTH",
"471 482 OFFCURVE",
"468 518 QCURVE SMOOTH",
"464 569 OFFCURVE",
"465 594 QCURVE SMOOTH",
"467 655 OFFCURVE",
"495 702 OFFCURVE",
"522 702 QCURVE SMOOTH",
"541 702 OFFCURVE",
"559 676 OFFCURVE",
"559 658 QCURVE SMOOTH",
"559 645 OFFCURVE",
"554 633 QCURVE",
"550 618 OFFCURVE",
"550 612 QCURVE SMOOTH",
"550 572 OFFCURVE",
"604 572 QCURVE SMOOTH",
"636 572 OFFCURVE",
"668 608 OFFCURVE",
"668 633 QCURVE SMOOTH",
"668 676 OFFCURVE",
"585 736 OFFCURVE",
"524 736 QCURVE SMOOTH",
"341 736 OFFCURVE",
"341 486 QCURVE SMOOTH",
"341 51 LINE SMOOTH",
"341 32 OFFCURVE",
"328 32 QCURVE",
"291 34 LINE"
);
}
);
width = 570;
}
);
leftMetricsKey = f;
rightMetricsKey = f;
},
{
glyphname = f_f_i;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"362 395 LINE",
"362 420 LINE",
"170 420 LINE",
"170 446 LINE SMOOTH",
"170 465 OFFCURVE",
"167 520 QCURVE SMOOTH",
"165 555 OFFCURVE",
"164 586 QCURVE SMOOTH",
"162 654 OFFCURVE",
"223 708 OFFCURVE",
"267 706 QCURVE SMOOTH",
"338 703 OFFCURVE",
"379 655 QCURVE",
"396 684 LINE",
"338 736 OFFCURVE",
"264 736 QCURVE SMOOTH",
"85 736 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
},
{
closed = 1;
nodes = (
"277 0 LINE",
"492 0 LINE",
"492 26 LINE",
"426 24 LINE SMOOTH",
"413 24 OFFCURVE",
"413 43 QCURVE SMOOTH",
"413 395 LINE",
"519 395 LINE",
"519 420 LINE",
"412 420 LINE",
"412 444 LINE SMOOTH",
"412 466 OFFCURVE",
"410 504 OFFCURVE",
"409 518 QCURVE SMOOTH",
"407 549 OFFCURVE",
"406 584 QCURVE SMOOTH",
"403 698 OFFCURVE",
"532 704 QCURVE SMOOTH",
"576 706 OFFCURVE",
"607 670 OFFCURVE",
"607 636 QCURVE SMOOTH",
"607 622 OFFCURVE",
"598 602 OFFCURVE",
"598 592 QCURVE SMOOTH",
"598 563 OFFCURVE",
"633 563 QCURVE SMOOTH",
"657 563 OFFCURVE",
"681 591 OFFCURVE",
"681 612 QCURVE SMOOTH",
"681 667 OFFCURVE",
"608 736 OFFCURVE",
"539 736 QCURVE SMOOTH",
"435 736 OFFCURVE",
"327 611 OFFCURVE",
"327 486 QCURVE",
"327 43 LINE",
"327 24 OFFCURVE",
"314 24 QCURVE",
"277 26 LINE"
);
},
{
closed = 1;
nodes = (
"689 420 LINE",
"554 420 LINE",
"554 394 LINE",
"591 396 LINE",
"603 393 OFFCURVE",
"603 376 QCURVE SMOOTH",
"603 43 LINE SMOOTH",
"603 24 OFFCURVE",
"590 24 QCURVE",
"553 26 LINE",
"553 0 LINE",
"738 0 LINE",
"738 26 LINE",
"702 24 LINE SMOOTH",
"689 23 OFFCURVE",
"689 43 QCURVE SMOOTH"
);
}
);
width = 773;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"256 0 LINE",
"256 34 LINE",
"214 32 LINE SMOOTH",
"201 31 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"400 393 LINE",
"400 425 LINE",
"200 425 LINE",
"200 444 LINE SMOOTH",
"200 472 OFFCURVE",
"197 513 QCURVE SMOOTH",
"194 559 OFFCURVE",
"194 589 QCURVE SMOOTH",
"194 650 OFFCURVE",
"233 700 OFFCURVE",
"274 697 QCURVE SMOOTH",
"345 692 OFFCURVE",
"392 638 QCURVE",
"413 672 LINE",
"352 736 OFFCURVE",
"264 736 QCURVE SMOOTH",
"70 736 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
},
{
closed = 1;
nodes = (
"290 0 LINE",
"554 0 LINE",
"554 34 LINE",
"484 32 LINE SMOOTH",
"471 32 OFFCURVE",
"471 51 QCURVE SMOOTH",
"471 393 LINE",
"561 393 LINE",
"561 425 LINE",
"470 425 LINE",
"470 460 LINE SMOOTH",
"470 489 OFFCURVE",
"461 534 OFFCURVE",
"453 560 QCURVE SMOOTH",
"439 605 OFFCURVE",
"441 620 QCURVE SMOOTH",
"451 693 OFFCURVE",
"541 697 QCURVE SMOOTH",
"588 699 OFFCURVE",
"638 661 OFFCURVE",
"638 621 QCURVE SMOOTH",
"638 603 OFFCURVE",
"631 585 OFFCURVE",
"631 574 QCURVE SMOOTH",
"631 536 OFFCURVE",
"681 536 QCURVE SMOOTH",
"710 536 OFFCURVE",
"740 569 OFFCURVE",
"740 592 QCURVE SMOOTH",
"740 653 OFFCURVE",
"639 736 OFFCURVE",
"549 736 QCURVE SMOOTH",
"451 736 OFFCURVE",
"340 619 OFFCURVE",
"340 539 QCURVE",
"340 51 LINE",
"340 32 OFFCURVE",
"327 32 QCURVE",
"290 34 LINE"
);
},
{
closed = 1;
nodes = (
"767 425 LINE",
"591 425 LINE",
"591 392 LINE",
"624 394 LINE",
"636 391 OFFCURVE",
"636 374 QCURVE SMOOTH",
"636 51 LINE SMOOTH",
"636 31 OFFCURVE",
"625 32 QCURVE SMOOTH",
"590 34 LINE",
"590 0 LINE",
"813 0 LINE",
"813 34 LINE",
"780 32 LINE SMOOTH",
"767 31 OFFCURVE",
"767 51 QCURVE SMOOTH"
);
}
);
width = 833;
}
);
leftMetricsKey = f;
rightMetricsKey = i;
},
{
glyphname = f_f_l;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"362 395 LINE",
"362 420 LINE",
"170 420 LINE",
"170 444 OFFCURVE",
"168 488 QCURVE SMOOTH",
"165 547 OFFCURVE",
"164 578 QCURVE SMOOTH",
"162 646 OFFCURVE",
"223 700 OFFCURVE",
"267 698 QCURVE SMOOTH",
"335 695 OFFCURVE",
"376 647 QCURVE",
"393 676 LINE",
"335 728 OFFCURVE",
"264 728 QCURVE SMOOTH",
"85 728 OFFCURVE",
"85 478 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
},
{
closed = 1;
nodes = (
"562 0 LINE",
"747 0 LINE",
"747 26 LINE",
"711 24 LINE",
"698 24 OFFCURVE",
"698 43 QCURVE SMOOTH",
"698 730 LINE",
"612 703 LINE",
"612 43 LINE SMOOTH",
"612 27 OFFCURVE",
"599 24 QCURVE",
"562 26 LINE"
);
},
{
closed = 1;
nodes = (
"286 0 LINE",
"501 0 LINE",
"501 26 LINE",
"435 24 LINE SMOOTH",
"422 24 OFFCURVE",
"422 43 QCURVE SMOOTH",
"422 395 LINE",
"528 395 LINE",
"528 420 LINE",
"421 420 LINE",
"421 443 LINE SMOOTH",
"422 459 OFFCURVE",
"418 517 QCURVE SMOOTH",
"416 549 OFFCURVE",
"415 583 QCURVE SMOOTH",
"413 651 OFFCURVE",
"465 703 OFFCURVE",
"511 703 QCURVE SMOOTH",
"572 703 OFFCURVE",
"621 664 QCURVE",
"621 703 LINE",
"569 736 OFFCURVE",
"507 736 QCURVE SMOOTH",
"336 736 OFFCURVE",
"336 473 QCURVE",
"336 43 LINE",
"336 24 OFFCURVE",
"323 24 QCURVE",
"286 26 LINE"
);
}
);
width = 782;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"276 0 LINE",
"276 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"409 393 LINE",
"409 425 LINE",
"200 425 LINE",
"202 454 OFFCURVE",
"199 482 QCURVE SMOOTH",
"193 534 OFFCURVE",
"194 579 QCURVE SMOOTH",
"195 640 OFFCURVE",
"238 687 OFFCURVE",
"278 687 QCURVE SMOOTH",
"354 687 OFFCURVE",
"406 628 QCURVE",
"427 657 LINE",
"372 721 OFFCURVE",
"273 721 QCURVE SMOOTH",
"70 721 OFFCURVE",
"70 471 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
},
{
closed = 1;
nodes = (
"630 0 LINE",
"868 0 LINE",
"868 34 LINE",
"836 32 LINE SMOOTH",
"823 31 OFFCURVE",
"823 51 QCURVE SMOOTH",
"823 731 LINE",
"692 687 LINE",
"692 51 LINE SMOOTH",
"692 35 OFFCURVE",
"679 32 QCURVE",
"630 34 LINE"
);
},
{
closed = 1;
nodes = (
"320 0 LINE",
"556 0 LINE",
"556 34 LINE",
"514 32 LINE SMOOTH",
"501 31 OFFCURVE",
"501 51 QCURVE SMOOTH",
"501 393 LINE",
"590 393 LINE",
"590 425 LINE",
"500 425 LINE",
"500 444 LINE SMOOTH",
"500 472 OFFCURVE",
"497 513 QCURVE SMOOTH",
"494 559 OFFCURVE",
"494 589 QCURVE SMOOTH",
"494 650 OFFCURVE",
"533 700 OFFCURVE",
"574 697 QCURVE SMOOTH",
"645 692 OFFCURVE",
"692 638 QCURVE",
"713 672 LINE",
"652 736 OFFCURVE",
"564 736 QCURVE SMOOTH",
"370 736 OFFCURVE",
"370 486 QCURVE",
"370 51 LINE",
"370 32 OFFCURVE",
"357 32 QCURVE",
"320 34 LINE"
);
}
);
width = 888;
}
);
leftMetricsKey = f;
rightMetricsKey = l;
},
{
glyphname = f_iacute;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"433 420 LINE",
"298 420 LINE",
"298 394 LINE",
"335 396 LINE",
"347 393 OFFCURVE",
"347 376 QCURVE SMOOTH",
"347 43 LINE SMOOTH",
"347 24 OFFCURVE",
"334 24 QCURVE",
"297 26 LINE",
"297 0 LINE",
"482 0 LINE",
"482 26 LINE",
"446 24 LINE",
"433 24 OFFCURVE",
"433 43 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"521 633 OFFCURVE",
"481 653 OFFCURVE",
"464 653 QCURVE SMOOTH",
"454 653 OFFCURVE",
"443 645 OFFCURVE",
"428 628 QCURVE SMOOTH",
"333 524 LINE",
"315 505 OFFCURVE",
"315 501 QCURVE SMOOTH",
"315 493 OFFCURVE",
"328 493 QCURVE SMOOTH",
"336 494 OFFCURVE",
"348 502 QCURVE SMOOTH",
"511 614 LINE SMOOTH",
"521 621 OFFCURVE",
"521 627 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"237 395 LINE",
"237 420 LINE",
"170 420 LINE",
"170 449 LINE SMOOTH",
"170 471 OFFCURVE",
"168 509 OFFCURVE",
"167 523 QCURVE SMOOTH",
"164 561 OFFCURVE",
"164 589 QCURVE SMOOTH",
"164 709 OFFCURVE",
"237 709 QCURVE SMOOTH",
"261 709 OFFCURVE",
"277 691 OFFCURVE",
"277 677 QCURVE SMOOTH",
"277 665 OFFCURVE",
"268 641 OFFCURVE",
"268 633 QCURVE SMOOTH",
"268 604 OFFCURVE",
"303 604 QCURVE SMOOTH",
"327 604 OFFCURVE",
"351 632 OFFCURVE",
"351 653 QCURVE SMOOTH",
"351 688 OFFCURVE",
"293 736 OFFCURVE",
"244 736 QCURVE SMOOTH",
"159 736 OFFCURVE",
"85 601 OFFCURVE",
"85 496 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
width = 517;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"496 425 LINE",
"320 425 LINE",
"320 392 LINE",
"353 394 LINE",
"365 391 OFFCURVE",
"365 374 QCURVE SMOOTH",
"365 51 LINE SMOOTH",
"365 32 OFFCURVE",
"354 32 QCURVE SMOOTH",
"319 34 LINE",
"319 0 LINE",
"542 0 LINE",
"542 34 LINE",
"509 32 LINE SMOOTH",
"496 31 OFFCURVE",
"496 51 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"566 626 OFFCURVE",
"516 653 OFFCURVE",
"498 653 QCURVE SMOOTH",
"488 653 OFFCURVE",
"477 645 OFFCURVE",
"462 628 QCURVE SMOOTH",
"367 524 LINE SMOOTH",
"351 507 OFFCURVE",
"351 497 QCURVE SMOOTH",
"351 487 OFFCURVE",
"362 487 QCURVE SMOOTH",
"373 488 OFFCURVE",
"386 496 QCURVE SMOOTH",
"553 598 LINE SMOOTH",
"566 608 OFFCURVE",
"566 616 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"20 0 LINE",
"284 0 LINE",
"284 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"281 393 LINE",
"281 425 LINE",
"200 425 LINE",
"200 465 LINE SMOOTH",
"200 494 OFFCURVE",
"191 539 OFFCURVE",
"183 565 QCURVE SMOOTH",
"171 610 OFFCURVE",
"171 625 QCURVE SMOOTH",
"171 702 OFFCURVE",
"216 702 QCURVE SMOOTH",
"237 702 OFFCURVE",
"248 686 OFFCURVE",
"248 676 QCURVE SMOOTH",
"248 668 OFFCURVE",
"241 640 OFFCURVE",
"241 629 QCURVE SMOOTH",
"241 591 OFFCURVE",
"291 591 QCURVE SMOOTH",
"320 591 OFFCURVE",
"350 624 OFFCURVE",
"350 647 QCURVE SMOOTH",
"350 688 OFFCURVE",
"284 736 OFFCURVE",
"224 736 QCURVE SMOOTH",
"142 736 OFFCURVE",
"70 619 OFFCURVE",
"70 539 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
width = 562;
}
);
leftMetricsKey = f;
rightMetricsKey = iacute;
},
{
glyphname = fi;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"277 395 LINE",
"277 420 LINE",
"170 420 LINE",
"170 444 LINE SMOOTH",
"170 466 OFFCURVE",
"168 504 OFFCURVE",
"167 518 QCURVE SMOOTH",
"164 549 OFFCURVE",
"164 584 QCURVE SMOOTH",
"164 699 OFFCURVE",
"290 704 QCURVE SMOOTH",
"334 704 OFFCURVE",
"365 670 OFFCURVE",
"365 636 QCURVE SMOOTH",
"365 622 OFFCURVE",
"356 602 OFFCURVE",
"356 592 QCURVE SMOOTH",
"356 563 OFFCURVE",
"391 563 QCURVE SMOOTH",
"415 563 OFFCURVE",
"439 591 OFFCURVE",
"439 612 QCURVE SMOOTH",
"439 667 OFFCURVE",
"366 736 OFFCURVE",
"297 736 QCURVE SMOOTH",
"193 736 OFFCURVE",
"85 611 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
},
{
closed = 1;
nodes = (
"447 420 LINE",
"312 420 LINE",
"312 394 LINE",
"349 396 LINE",
"361 393 OFFCURVE",
"361 376 QCURVE SMOOTH",
"361 43 LINE SMOOTH",
"361 24 OFFCURVE",
"348 24 QCURVE",
"311 26 LINE",
"311 0 LINE",
"496 0 LINE",
"496 26 LINE",
"460 24 LINE SMOOTH",
"447 23 OFFCURVE",
"447 43 QCURVE SMOOTH"
);
}
);
width = 531;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"284 0 LINE",
"284 34 LINE",
"214 32 LINE SMOOTH",
"201 32 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"291 393 LINE",
"291 425 LINE",
"200 425 LINE",
"200 460 LINE SMOOTH",
"200 489 OFFCURVE",
"191 534 OFFCURVE",
"183 560 QCURVE SMOOTH",
"171 605 OFFCURVE",
"171 620 QCURVE SMOOTH",
"171 695 OFFCURVE",
"271 697 QCURVE SMOOTH",
"318 698 OFFCURVE",
"368 661 OFFCURVE",
"368 621 QCURVE SMOOTH",
"368 603 OFFCURVE",
"361 585 OFFCURVE",
"361 574 QCURVE SMOOTH",
"361 536 OFFCURVE",
"411 536 QCURVE SMOOTH",
"440 536 OFFCURVE",
"470 569 OFFCURVE",
"470 592 QCURVE SMOOTH",
"470 653 OFFCURVE",
"369 736 OFFCURVE",
"279 736 QCURVE SMOOTH",
"181 736 OFFCURVE",
"70 619 OFFCURVE",
"70 539 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
},
{
closed = 1;
nodes = (
"497 425 LINE",
"321 425 LINE",
"321 392 LINE",
"354 394 LINE",
"366 391 OFFCURVE",
"366 374 QCURVE SMOOTH",
"366 51 LINE SMOOTH",
"366 31 OFFCURVE",
"355 32 QCURVE SMOOTH",
"320 34 LINE",
"320 0 LINE",
"543 0 LINE",
"543 34 LINE",
"510 32 LINE SMOOTH",
"497 31 OFFCURVE",
"497 51 QCURVE SMOOTH"
);
}
);
width = 563;
}
);
leftMetricsKey = f;
note = fi;
rightMetricsKey = i;
unicode = FB01;
},
{
glyphname = fl;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"311 0 LINE",
"496 0 LINE",
"496 26 LINE",
"460 24 LINE",
"447 24 OFFCURVE",
"447 43 QCURVE SMOOTH",
"447 730 LINE",
"361 703 LINE",
"361 43 LINE SMOOTH",
"361 27 OFFCURVE",
"348 24 QCURVE",
"311 26 LINE"
);
},
{
closed = 1;
nodes = (
"35 0 LINE",
"250 0 LINE",
"250 26 LINE",
"184 24 LINE SMOOTH",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH",
"171 395 LINE",
"277 395 LINE",
"277 420 LINE",
"170 420 LINE",
"170 443 LINE SMOOTH",
"170 459 OFFCURVE",
"167 517 QCURVE SMOOTH",
"164 549 OFFCURVE",
"164 583 QCURVE SMOOTH",
"164 651 OFFCURVE",
"214 703 OFFCURVE",
"260 703 QCURVE SMOOTH",
"321 703 OFFCURVE",
"370 664 QCURVE",
"370 703 LINE",
"318 736 OFFCURVE",
"256 736 QCURVE SMOOTH",
"85 736 OFFCURVE",
"85 486 QCURVE SMOOTH",
"85 420 LINE",
"46 420 LINE",
"46 395 LINE",
"85 395 LINE",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 1 4 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
13 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 4 5 2 5 4 112 0 3 12 5 3 87 0 12 11 1 5 4 12 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 50 values pushed */
0 4 5 2 5 4 2 126 0 3 12 5 3 87 0 12 11 1 5 4 12 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 24 values pushed */
59 58 57 55 53 52 51 50 45 44 43 42 34 17 23 39 36 35 17 18 32 15 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 531;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"330 0 LINE",
"568 0 LINE",
"568 34 LINE",
"536 32 LINE SMOOTH",
"523 31 OFFCURVE",
"523 51 QCURVE SMOOTH",
"523 731 LINE",
"392 687 LINE",
"392 51 LINE SMOOTH",
"392 35 OFFCURVE",
"379 32 QCURVE",
"330 34 LINE"
);
},
{
closed = 1;
nodes = (
"20 0 LINE",
"256 0 LINE",
"256 34 LINE",
"214 32 LINE SMOOTH",
"201 31 OFFCURVE",
"201 51 QCURVE SMOOTH",
"201 393 LINE",
"290 393 LINE",
"290 425 LINE",
"200 425 LINE",
"200 444 LINE SMOOTH",
"200 472 OFFCURVE",
"197 513 QCURVE SMOOTH",
"194 559 OFFCURVE",
"194 589 QCURVE SMOOTH",
"194 650 OFFCURVE",
"233 700 OFFCURVE",
"274 697 QCURVE SMOOTH",
"345 692 OFFCURVE",
"392 638 QCURVE",
"413 672 LINE",
"352 736 OFFCURVE",
"264 736 QCURVE SMOOTH",
"70 736 OFFCURVE",
"70 486 QCURVE SMOOTH",
"70 425 LINE",
"31 425 LINE",
"31 393 LINE",
"70 393 LINE",
"70 51 LINE SMOOTH",
"70 32 OFFCURVE",
"57 32 QCURVE",
"20 34 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
20 1 4 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
0 4 5 2 5 4 112 12 1 3 11 1 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 4 5 2 5 4 2 126 0 3 12 5 3 87 0 12 11 1 5 4 12 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 4 5 2 5 4 2 126 12 1 3 11 1 5 4 3 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 50 values pushed */
0 4 5 2 5 4 2 126 0 3 12 5 3 87 0 12 11 1 5 4 12 5 103 7 1 1 1 2 93 6 1 2 2 20 75 13 10 8 3 0 0 9 93 14 1 9 9 21 9 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 24 values pushed */
61 60 59 58 55 54 53 52 47 46 45 44 34 17 24 40 36 35 17 18 32 15 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 588;
}
);
leftMetricsKey = f;
note = fl;
rightMetricsKey = l;
unicode = FB02;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"44 342 OFFCURVE",
"128 342 QCURVE SMOOTH",
"192 342 OFFCURVE",
"214 397 QCURVE",
"211 350 LINE",
"306 350 LINE",
"306 374 LINE",
"276 373 LINE SMOOTH",
"270 373 OFFCURVE",
"270 380 QCURVE SMOOTH",
"270 527 LINE SMOOTH",
"270 573 OFFCURVE",
"216 615 OFFCURVE",
"158 615 QCURVE SMOOTH",
"107 615 OFFCURVE",
"55 586 OFFCURVE",
"55 561 QCURVE SMOOTH",
"55 529 OFFCURVE",
"87 529 QCURVE SMOOTH",
"117 529 OFFCURVE",
"117 558 QCURVE SMOOTH",
"117 576 OFFCURVE",
"134 592 OFFCURVE",
"158 592 QCURVE SMOOTH",
"210 592 OFFCURVE",
"210 542 QCURVE SMOOTH",
"210 505 LINE",
"124 505 OFFCURVE",
"44 459 OFFCURVE",
"44 411 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 450 OFFCURVE",
"156 482 OFFCURVE",
"210 482 QCURVE",
"210 457 LINE SMOOTH",
"210 422 OFFCURVE",
"171 373 OFFCURVE",
"145 373 QCURVE SMOOTH",
"107 373 OFFCURVE",
"107 416 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
26 20 2 4 8 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 2 1 0 1 2 112 0 0 0 8 4 0 8 103 0 5 6 4 5 85 7 1 4 0 6 4 6 99 0 1 1 3 95 0 3 3 45 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 2 1 0 1 2 0 126 0 0 0 8 4 0 8 103 0 5 6 4 5 85 7 1 4 0 6 4 6 99 0 1 1 3 95 0 3 3 45 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
19 35 34 17 21 35 36 34 17 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 350;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 342 OFFCURVE",
"104 342 QCURVE SMOOTH",
"167 342 OFFCURVE",
"198 390 QCURVE",
"195 350 LINE",
"323 350 LINE",
"323 382 LINE",
"297 381 LINE",
"291 381 OFFCURVE",
"291 388 QCURVE SMOOTH",
"291 527 LINE SMOOTH",
"291 573 OFFCURVE",
"226 615 OFFCURVE",
"156 615 QCURVE SMOOTH",
"94 615 OFFCURVE",
"31 585 OFFCURVE",
"31 557 QCURVE SMOOTH",
"32 514 OFFCURVE",
"79 514 QCURVE SMOOTH",
"127 514 OFFCURVE",
"127 551 QCURVE SMOOTH",
"127 573 OFFCURVE",
"137 585 OFFCURVE",
"159 585 QCURVE SMOOTH",
"194 585 OFFCURVE",
"194 539 QCURVE SMOOTH",
"194 498 LINE",
"102 498 OFFCURVE",
"20 456 OFFCURVE",
"20 411 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 444 OFFCURVE",
"152 467 OFFCURVE",
"194 467 QCURVE",
"194 451 LINE SMOOTH",
"194 423 OFFCURVE",
"168 384 OFFCURVE",
"149 384 QCURVE SMOOTH",
"121 384 OFFCURVE",
"121 418 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
27 21 2 4 8 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 2 1 0 1 2 112 0 0 0 8 4 0 8 103 0 5 6 4 5 85 7 1 4 0 6 4 6 99 0 1 1 3 95 0 3 3 45 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 2 1 0 1 2 0 126 0 0 0 8 4 0 8 103 0 5 6 4 5 85 7 1 4 0 6 4 6 99 0 1 1 3 95 0 3 3 45 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
19 34 35 17 21 36 36 34 17 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 343;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"44 420 OFFCURVE",
"111 344 OFFCURVE",
"175 344 QCURVE SMOOTH",
"238 344 OFFCURVE",
"307 416 OFFCURVE",
"307 480 QCURVE SMOOTH",
"307 546 OFFCURVE",
"236 618 OFFCURVE",
"175 618 QCURVE SMOOTH",
"114 618 OFFCURVE",
"44 545 OFFCURVE",
"44 480 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 543 OFFCURVE",
"140 594 OFFCURVE",
"175 594 QCURVE SMOOTH",
"210 594 OFFCURVE",
"236 545 OFFCURVE",
"236 480 QCURVE SMOOTH",
"236 434 OFFCURVE",
"224 386 OFFCURVE",
"198 368 OFFCURVE",
"175 368 QCURVE SMOOTH",
"138 368 OFFCURVE",
"115 417 OFFCURVE",
"115 480 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 2 0 1 2 1 99 0 3 3 0 95 0 0 0 45 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
37 36 36 33 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 351;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"22 420 OFFCURVE",
"100 344 OFFCURVE",
"175 344 QCURVE SMOOTH",
"248 344 OFFCURVE",
"330 416 OFFCURVE",
"330 480 QCURVE SMOOTH",
"330 546 OFFCURVE",
"247 618 OFFCURVE",
"175 618 QCURVE SMOOTH",
"104 618 OFFCURVE",
"22 545 OFFCURVE",
"22 480 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"130 539 OFFCURVE",
"149 587 OFFCURVE",
"175 587 QCURVE SMOOTH",
"202 587 OFFCURVE",
"221 541 OFFCURVE",
"221 480 QCURVE SMOOTH",
"221 437 OFFCURVE",
"212 393 OFFCURVE",
"193 376 OFFCURVE",
"175 376 QCURVE SMOOTH",
"148 376 OFFCURVE",
"130 422 OFFCURVE",
"130 480 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 2 0 1 2 1 99 0 3 3 0 95 0 0 0 45 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
37 36 36 33 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 351;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = nmod;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"298 373 LINE",
"290 373 OFFCURVE",
"290 385 QCURVE SMOOTH",
"290 528 LINE SMOOTH",
"290 574 OFFCURVE",
"248 615 OFFCURVE",
"204 615 QCURVE SMOOTH",
"177 615 OFFCURVE",
"129 582 OFFCURVE",
"116 553 QCURVE",
"116 587 LINE SMOOTH",
"116 600 OFFCURVE",
"119 609 QCURVE",
"24 609 LINE",
"24 585 LINE",
"47 586 LINE",
"55 584 OFFCURVE",
"55 574 QCURVE SMOOTH",
"55 385 LINE SMOOTH",
"55 375 OFFCURVE",
"47 373 QCURVE",
"24 374 LINE",
"24 350 LINE",
"152 350 LINE",
"152 374 LINE",
"124 373 LINE",
"116 373 OFFCURVE",
"116 385 QCURVE SMOOTH",
"116 477 LINE SMOOTH",
"116 528 OFFCURVE",
"161 587 OFFCURVE",
"192 587 QCURVE SMOOTH",
"218 587 OFFCURVE",
"230 551 OFFCURVE",
"230 509 QCURVE SMOOTH",
"230 385 LINE SMOOTH",
"230 375 OFFCURVE",
"222 373 QCURVE",
"193 374 LINE",
"193 350 LINE",
"321 350 LINE",
"321 374 LINE"
);
}
);
width = 350;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"316 380 LINE",
"308 380 OFFCURVE",
"308 391 QCURVE SMOOTH",
"308 528 LINE SMOOTH",
"308 573 OFFCURVE",
"263 615 OFFCURVE",
"222 615 QCURVE SMOOTH",
"189 615 OFFCURVE",
"148 583 OFFCURVE",
"135 554 QCURVE",
"135 588 LINE SMOOTH",
"135 600 OFFCURVE",
"138 609 QCURVE",
"7 609 LINE",
"7 579 LINE",
"27 580 LINE",
"35 578 OFFCURVE",
"35 568 QCURVE SMOOTH",
"35 391 LINE SMOOTH",
"35 382 OFFCURVE",
"27 380 QCURVE",
"7 381 LINE",
"7 350 LINE",
"166 350 LINE",
"166 381 LINE",
"143 380 LINE",
"135 380 OFFCURVE",
"135 391 QCURVE SMOOTH",
"135 461 LINE SMOOTH",
"135 517 OFFCURVE",
"165 576 OFFCURVE",
"184 576 QCURVE SMOOTH",
"199 576 OFFCURVE",
"208 550 OFFCURVE",
"208 519 QCURVE SMOOTH",
"208 391 LINE SMOOTH",
"208 382 OFFCURVE",
"201 380 QCURVE",
"177 381 LINE",
"177 350 LINE",
"336 350 LINE",
"336 381 LINE"
);
}
);
width = 343;
}
);
unicode = 207F;
},
{
glyphname = Delta;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"282 607 LINE",
"27 0 LINE",
"562 0 LINE",
"308 607 LINE"
);
},
{
closed = 1;
nodes = (
"67 28 LINE",
"259 488 LINE",
"451 28 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
5 4 1 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 601;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"275 607 LINE",
"20 0 LINE",
"577 0 LINE",
"323 607 LINE"
);
},
{
closed = 1;
nodes = (
"71 36 LINE",
"244 452 LINE",
"418 36 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
5 4 1 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 609;
}
);
note = uni0394;
unicode = "0394,03B4";
},
{
glyphname = Omega;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"611 139 LINE",
"606 93 OFFCURVE",
"563 55 OFFCURVE",
"519 55 QCURVE SMOOTH",
"461 55 LINE",
"518 116 OFFCURVE",
"573 186 OFFCURVE",
"609 283 OFFCURVE",
"609 349 QCURVE SMOOTH",
"609 422 OFFCURVE",
"544 539 OFFCURVE",
"420 607 OFFCURVE",
"335 607 QCURVE SMOOTH",
"250 607 OFFCURVE",
"126 539 OFFCURVE",
"61 422 OFFCURVE",
"61 349 QCURVE SMOOTH",
"61 283 OFFCURVE",
"97 186 OFFCURVE",
"152 116 OFFCURVE",
"209 55 QCURVE",
"151 55 LINE SMOOTH",
"107 55 OFFCURVE",
"64 93 OFFCURVE",
"59 139 QCURVE",
"28 139 LINE",
"48 27 OFFCURVE",
"48 -3 QCURVE",
"59 0 OFFCURVE",
"151 0 QCURVE SMOOTH",
"272 0 LINE",
"274 5 LINE",
"236 53 OFFCURVE",
"157 221 OFFCURVE",
"157 349 QCURVE SMOOTH",
"157 472 OFFCURVE",
"243 580 OFFCURVE",
"335 580 QCURVE SMOOTH",
"427 580 OFFCURVE",
"513 472 OFFCURVE",
"513 349 QCURVE SMOOTH",
"513 221 OFFCURVE",
"434 53 OFFCURVE",
"396 5 QCURVE",
"398 0 LINE",
"519 0 LINE SMOOTH",
"611 0 OFFCURVE",
"622 -3 QCURVE",
"622 27 OFFCURVE",
"642 139 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
38 2 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 670;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"611 162 LINE",
"607 125 OFFCURVE",
"568 93 OFFCURVE",
"527 93 QCURVE SMOOTH",
"474 93 LINE",
"525 138 OFFCURVE",
"586 211 OFFCURVE",
"620 299 OFFCURVE",
"620 357 QCURVE SMOOTH",
"620 427 OFFCURVE",
"552 541 OFFCURVE",
"423 607 OFFCURVE",
"335 607 QCURVE SMOOTH",
"247 607 OFFCURVE",
"118 541 OFFCURVE",
"50 427 OFFCURVE",
"50 357 QCURVE SMOOTH",
"50 299 OFFCURVE",
"84 211 OFFCURVE",
"145 138 OFFCURVE",
"196 93 QCURVE",
"144 93 LINE SMOOTH",
"103 93 OFFCURVE",
"63 125 OFFCURVE",
"59 162 QCURVE",
"24 162 LINE",
"44 32 OFFCURVE",
"44 -3 QCURVE",
"55 0 OFFCURVE",
"140 0 QCURVE SMOOTH",
"283 0 LINE",
"285 43 LINE",
"239 108 OFFCURVE",
"191 245 OFFCURVE",
"191 349 QCURVE SMOOTH",
"191 472 OFFCURVE",
"260 573 OFFCURVE",
"335 573 QCURVE SMOOTH",
"410 573 OFFCURVE",
"479 472 OFFCURVE",
"479 349 QCURVE SMOOTH",
"479 245 OFFCURVE",
"431 107 OFFCURVE",
"385 43 QCURVE",
"387 0 LINE",
"530 0 LINE SMOOTH",
"616 0 OFFCURVE",
"626 -3 QCURVE",
"626 32 OFFCURVE",
"646 162 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
36 2 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 670;
}
);
note = uni03A9;
unicode = "03A9,03C9";
},
{
glyphname = mu;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"465 24 LINE",
"452 24 OFFCURVE",
"452 43 QCURVE SMOOTH",
"452 420 LINE",
"306 420 LINE",
"306 394 LINE",
"353 396 LINE",
"365 396 OFFCURVE",
"365 375 QCURVE SMOOTH",
"365 211 LINE SMOOTH",
"365 124 OFFCURVE",
"290 23 OFFCURVE",
"228 23 QCURVE SMOOTH",
"191 23 OFFCURVE",
"167 80 OFFCURVE",
"167 148 QCURVE SMOOTH",
"167 420 LINE",
"32 420 LINE",
"32 394 LINE",
"68 396 LINE",
"81 396 OFFCURVE",
"81 377 QCURVE SMOOTH",
"81 -195 LINE",
"78 -213 OFFCURVE",
"66 -214 QCURVE",
"20 -213 LINE",
"20 -239 LINE",
"225 -239 LINE",
"225 -213 LINE",
"179 -214 LINE",
"165 -211 OFFCURVE",
"165 -195 QCURVE SMOOTH",
"165 9 LINE",
"191 -10 OFFCURVE",
"224 -10 QCURVE SMOOTH",
"274 -10 OFFCURVE",
"347 43 OFFCURVE",
"365 87 QCURVE",
"365 73 LINE SMOOTH",
"365 17 OFFCURVE",
"359 0 QCURVE",
"501 0 LINE",
"501 26 LINE"
);
}
);
width = 536;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"487 32 LINE",
"474 33 OFFCURVE",
"474 51 QCURVE SMOOTH",
"474 425 LINE",
"291 425 LINE",
"291 392 LINE",
"330 394 LINE",
"343 394 OFFCURVE",
"343 374 QCURVE SMOOTH",
"343 231 LINE SMOOTH",
"343 150 OFFCURVE",
"286 37 OFFCURVE",
"240 37 QCURVE SMOOTH",
"213 37 OFFCURVE",
"196 82 OFFCURVE",
"196 132 QCURVE SMOOTH",
"196 425 LINE",
"19 425 LINE",
"19 392 LINE",
"52 394 LINE",
"65 394 OFFCURVE",
"65 375 QCURVE SMOOTH",
"65 -188 LINE SMOOTH",
"65 -206 OFFCURVE",
"52 -207 QCURVE",
"19 -206 LINE",
"19 -239 LINE",
"267 -239 LINE",
"267 -206 LINE",
"209 -207 LINE SMOOTH",
"196 -207 OFFCURVE",
"196 -188 QCURVE SMOOTH",
"196 -5 LINE",
"208 -7 OFFCURVE",
"214 -7 QCURVE SMOOTH",
"256 -7 OFFCURVE",
"324 49 OFFCURVE",
"343 90 QCURVE",
"343 45 LINE SMOOTH",
"343 15 OFFCURVE",
"337 0 QCURVE",
"520 0 LINE",
"520 34 LINE"
);
}
);
width = 540;
}
);
note = uni03BC;
unicode = 03BC;
},
{
glyphname = pi;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"567 463 LINE",
"559 438 OFFCURVE",
"538 420 OFFCURVE",
"513 420 QCURVE SMOOTH",
"491 420 OFFCURVE",
"395 424 QCURVE SMOOTH",
"267 430 OFFCURVE",
"200 430 QCURVE SMOOTH",
"91 430 OFFCURVE",
"40 322 QCURVE",
"58 310 LINE",
"80 340 OFFCURVE",
"141 365 OFFCURVE",
"186 365 QCURVE SMOOTH",
"207 365 LINE",
"191 234 OFFCURVE",
"174 153 QCURVE",
"165 117 OFFCURVE",
"144 73 OFFCURVE",
"122 73 QCURVE SMOOTH",
"112 73 OFFCURVE",
"80 84 OFFCURVE",
"72 84 QCURVE SMOOTH",
"55 84 OFFCURVE",
"34 58 OFFCURVE",
"34 37 QCURVE SMOOTH",
"34 13 OFFCURVE",
"63 -10 OFFCURVE",
"84 -10 QCURVE SMOOTH",
"138 -10 OFFCURVE",
"192 81 OFFCURVE",
"207 144 QCURVE",
"233 286 OFFCURVE",
"240 364 QCURVE",
"392 358 LINE",
"375 221 OFFCURVE",
"370 156 QCURVE SMOOTH",
"370 56 OFFCURVE",
"409 -6 OFFCURVE",
"472 -6 QCURVE SMOOTH",
"508 -6 OFFCURVE",
"551 19 OFFCURVE",
"570 50 QCURVE",
"553 63 LINE",
"531 23 OFFCURVE",
"495 23 QCURVE SMOOTH",
"472 23 OFFCURVE",
"456 74 OFFCURVE",
"456 126 QCURVE SMOOTH",
"456 226 OFFCURVE",
"466 355 QCURVE",
"546 355 LINE SMOOTH",
"564 355 OFFCURVE",
"576 353 QCURVE",
"576 372 LINE SMOOTH",
"576 407 OFFCURVE",
"593 458 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
65 34 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 608;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"577 463 LINE",
"569 438 OFFCURVE",
"548 420 OFFCURVE",
"523 420 QCURVE SMOOTH",
"501 420 OFFCURVE",
"397 424 QCURVE SMOOTH",
"263 430 OFFCURVE",
"193 430 QCURVE SMOOTH",
"84 430 OFFCURVE",
"33 292 QCURVE",
"58 280 LINE",
"79 310 OFFCURVE",
"136 335 OFFCURVE",
"179 335 QCURVE SMOOTH",
"206 335 LINE",
"194 236 OFFCURVE",
"177 153 QCURVE SMOOTH",
"170 120 OFFCURVE",
"155 91 OFFCURVE",
"135 91 QCURVE SMOOTH",
"124 91 OFFCURVE",
"88 113 OFFCURVE",
"76 113 QCURVE SMOOTH",
"54 113 OFFCURVE",
"26 77 OFFCURVE",
"26 51 QCURVE SMOOTH",
"26 22 OFFCURVE",
"65 -10 OFFCURVE",
"87 -10 QCURVE SMOOTH",
"149 -10 OFFCURVE",
"205 79 OFFCURVE",
"218 144 QCURVE SMOOTH",
"237 244 OFFCURVE",
"248 334 QCURVE",
"366 330 LINE",
"348 206 OFFCURVE",
"348 113 QCURVE SMOOTH",
"348 60 OFFCURVE",
"401 -6 OFFCURVE",
"468 -6 QCURVE SMOOTH",
"510 -6 OFFCURVE",
"563 19 OFFCURVE",
"585 50 QCURVE",
"564 64 LINE",
"538 31 OFFCURVE",
"510 31 QCURVE SMOOTH",
"487 31 OFFCURVE",
"471 78 OFFCURVE",
"471 126 QCURVE SMOOTH",
"471 194 OFFCURVE",
"480 325 QCURVE",
"561 325 LINE SMOOTH",
"579 325 OFFCURVE",
"591 323 QCURVE",
"591 342 LINE SMOOTH",
"591 390 OFFCURVE",
"608 458 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
58 28 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 619;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = ninferior;
layers = (
{
components = (
{
alignment = -1;
name = nmod;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 350;
},
{
components = (
{
alignment = -1;
name = nmod;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 343;
}
);
unicode = 2099;
},
{
glyphname = zero;
layers = (
{
components = (
{
name = zero.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 25 75 0 2 2 1 95 0 1 1 26 1 76 38 37 36 33 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 518;
},
{
components = (
{
name = zero.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 95 0 0 0 25 75 0 2 2 1 95 0 1 1 26 1 76 38 38 38 34 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 520;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
components = (
{
name = one.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
20 19 2 1 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 0 0 17 75 3 1 1 1 2 93 0 2 2 21 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 17 values pushed */
0 0 1 0 131 3 1 1 1 2 93 0 2 2 21 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 17 34 19 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 387;
},
{
components = (
{
name = one.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
20 19 2 1 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 0 0 17 75 3 1 1 1 2 93 0 2 2 21 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 17 values pushed */
0 0 1 0 131 3 1 1 1 2 93 0 2 2 21 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 17 34 19 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 365;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
components = (
{
name = two.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
6 1 0 4 1 74 2 1 0 71 0 2 1 5 1 2 5 126 6 1 5 4 1 5 4 124 0 1 1 3 95 0 3 3 25 75 0 4 4 0 93 0 0 0 21 0 76 0 0 0 43 0 43 39 37 40 40 35 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 506;
},
{
components = (
{
name = two.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
7 1 0 4 1 74 3 1 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 2 1 5 1 2 5 126 6 1 5 4 4 5 110 0 1 1 3 95 0 3 3 25 75 0 4 4 0 94 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 2 1 5 1 2 5 126 6 1 5 4 1 5 4 124 0 1 1 3 95 0 3 3 25 75 0 4 4 0 94 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 43 0 43 39 37 40 39 36 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 499;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
components = (
{
name = three.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
40 1 6 5 31 1 0 6 2 74 0 6 5 0 5 6 0 126 0 2 4 3 4 2 3 126 8 1 0 0 4 2 0 4 103 0 5 5 7 95 0 7 7 25 75 0 3 3 1 95 0 1 1 26 1 76 1 0 56 54 49 47 38 36 30 29 25 23 14 12 7 5 0 61 1 61 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 498;
},
{
components = (
{
name = three.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 84 values pushed */
30 1 2 0 17 1 3 2 2 74 0 6 5 4 5 6 4 126 0 4 0 5 4 0 124 8 1 0 2 5 0 2 124 0 2 3 5 2 3 124 0 5 5 7 95 0 7 7 25 75 0 3 3 1 96 0 1 1 26 1 76 1 0 56 54 50 48 39 37 32 31 25 23 15 13 8 6 0 61 1 61 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 499;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
components = (
{
name = four.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
24 1 0 6 16 1 1 0 2 74 7 1 0 5 1 1 2 0 1 101 0 6 6 17 75 4 1 2 2 3 93 0 3 3 21 3 76 18 23 18 33 17 34 17 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 470;
},
{
components = (
{
name = four.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
24 1 0 6 16 1 1 0 2 74 7 1 0 5 1 1 2 0 1 101 0 6 6 17 75 4 1 2 2 3 93 0 3 3 21 3 76 18 23 18 33 17 34 17 16 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 486;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
components = (
{
name = five.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
42 1 4 3 1 74 38 1 5 72 0 4 3 1 3 4 1 126 0 1 2 3 1 2 124 8 1 7 0 3 4 7 3 103 0 6 6 5 93 0 5 5 17 75 0 2 2 0 95 0 0 0 26 0 76 0 0 0 45 0 44 19 33 18 36 41 37 37 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 492;
},
{
components = (
{
name = five.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
40 1 3 7 1 74 35 1 5 72 0 4 3 1 3 4 1 126 0 1 2 3 1 2 124 8 1 7 0 3 4 7 3 103 0 6 6 5 93 0 5 5 17 75 0 2 2 0 95 0 0 0 26 0 76 0 0 0 43 0 42 20 33 18 35 40 36 37 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 485;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
components = (
{
name = six.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
21 1 2 3 30 1 6 5 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 2 3 4 3 2 4 126 0 3 3 1 95 0 1 1 25 75 0 5 5 4 95 7 1 4 4 20 75 8 1 6 6 0 95 0 0 0 26 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 2 3 4 3 2 4 126 7 1 4 0 5 6 4 5 103 0 3 3 1 95 0 1 1 25 75 8 1 6 6 0 95 0 0 0 26 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 21 values pushed */
34 34 0 0 34 44 34 43 39 37 0 33 0 32 39 37 36 36 9 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 485;
},
{
components = (
{
name = six.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
32 1 6 5 1 74 0 2 3 4 3 2 4 126 7 1 4 0 5 6 4 5 103 0 3 3 1 95 0 1 1 25 75 8 1 6 6 0 95 0 0 0 26 0 76 35 35 0 0 35 45 35 44 40 38 0 34 0 33 40 37 36 37 9 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
components = (
{
name = seven.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
14 1 3 72 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 1 0 1 2 112 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
36 18 36 17 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 427;
},
{
components = (
{
name = seven.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 1 3 72 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 1 0 1 2 112 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 1 0 1 2 112 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 0 3 3 17 75 0 0 0 21 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
36 18 36 20 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 447;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
components = (
{
name = eight.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
44 32 26 13 4 3 2 1 74 4 1 2 2 1 95 0 1 1 25 75 5 1 3 3 0 95 0 0 0 26 0 76 38 38 27 27 38 50 38 49 27 37 27 36 43 38 6 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 493;
},
{
components = (
{
name = eight.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
43 30 24 12 4 3 2 1 74 4 1 2 2 1 95 0 1 1 25 75 5 1 3 3 0 95 0 0 0 26 0 76 37 37 25 25 37 49 37 48 25 36 25 35 42 37 6 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 515;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
components = (
{
name = nine.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
24 1 6 5 15 1 2 1 2 74 0 1 3 2 3 1 2 126 8 1 6 0 3 1 6 3 103 0 5 5 4 95 7 1 4 4 25 75 0 2 2 0 95 0 0 0 26 0 76 34 34 0 0 34 44 34 43 40 38 0 33 0 32 36 39 37 36 9 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 485;
},
{
components = (
{
name = nine.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
25 1 6 5 1 74 0 1 3 2 3 1 2 126 8 1 6 0 3 1 6 3 103 0 5 5 4 95 7 1 4 4 25 75 0 2 2 0 95 0 0 0 26 0 76 35 35 0 0 35 45 35 44 41 39 0 34 0 33 35 40 37 36 9 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = zero.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"30 147 OFFCURVE",
"144 -10 OFFCURVE",
"256 -10 QCURVE SMOOTH",
"366 -10 OFFCURVE",
"488 147 OFFCURVE",
"488 297 QCURVE SMOOTH",
"488 451 OFFCURVE",
"372 607 OFFCURVE",
"260 607 QCURVE SMOOTH",
"152 607 OFFCURVE",
"30 450 OFFCURVE",
"30 297 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"119 452 OFFCURVE",
"183 580 OFFCURVE",
"258 580 QCURVE SMOOTH",
"309 580 OFFCURVE",
"376 529 OFFCURVE",
"401 406 OFFCURVE",
"401 298 QCURVE SMOOTH",
"401 193 OFFCURVE",
"376 71 OFFCURVE",
"309 20 OFFCURVE",
"258 20 QCURVE SMOOTH",
"208 20 OFFCURVE",
"143 69 OFFCURVE",
"119 191 OFFCURVE",
"119 298 QCURVE SMOOTH"
);
}
);
width = 518;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"19 157 OFFCURVE",
"135 -10 OFFCURVE",
"255 -10 QCURVE SMOOTH",
"372 -10 OFFCURVE",
"501 158 OFFCURVE",
"501 297 QCURVE SMOOTH",
"501 440 OFFCURVE",
"382 607 OFFCURVE",
"265 607 QCURVE SMOOTH",
"149 607 OFFCURVE",
"19 439 OFFCURVE",
"19 297 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"153 444 OFFCURVE",
"193 575 OFFCURVE",
"260 575 QCURVE SMOOTH",
"304 575 OFFCURVE",
"354 527 OFFCURVE",
"368 407 OFFCURVE",
"368 298 QCURVE SMOOTH",
"368 192 OFFCURVE",
"354 74 OFFCURVE",
"303 25 OFFCURVE",
"260 25 QCURVE SMOOTH",
"217 25 OFFCURVE",
"167 72 OFFCURVE",
"153 190 OFFCURVE",
"153 298 QCURVE SMOOTH"
);
}
);
width = 520;
}
);
},
{
glyphname = one.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"62 542 LINE",
"144 542 LINE SMOOTH",
"153 542 OFFCURVE",
"165 536 OFFCURVE",
"165 527 QCURVE SMOOTH",
"165 43 LINE SMOOTH",
"165 23 OFFCURVE",
"144 23 QCURVE SMOOTH",
"78 24 LINE",
"78 0 LINE",
"326 0 LINE",
"326 24 LINE",
"261 23 LINE SMOOTH",
"242 23 OFFCURVE",
"242 43 QCURVE SMOOTH",
"242 617 LINE",
"225 617 LINE",
"122 584 OFFCURVE",
"62 568 QCURVE"
);
}
);
width = 387;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 526 LINE",
"116 526 LINE SMOOTH",
"125 526 OFFCURVE",
"136 520 OFFCURVE",
"136 511 QCURVE SMOOTH",
"136 51 LINE SMOOTH",
"136 31 OFFCURVE",
"116 31 QCURVE SMOOTH",
"43 32 LINE",
"43 0 LINE",
"349 0 LINE",
"349 32 LINE",
"277 31 LINE SMOOTH",
"259 31 OFFCURVE",
"259 51 QCURVE SMOOTH",
"259 618 LINE",
"238 618 LINE",
"177 599 OFFCURVE",
"39 560 QCURVE"
);
}
);
width = 365;
}
);
},
{
glyphname = two.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"419 165 LINE",
"413 109 OFFCURVE",
"359 66 OFFCURVE",
"303 66 QCURVE SMOOTH",
"127 66 LINE",
"127 68 LINE",
"301 189 OFFCURVE",
"428 364 OFFCURVE",
"428 445 QCURVE SMOOTH",
"428 532 OFFCURVE",
"326 607 OFFCURVE",
"246 607 QCURVE SMOOTH",
"182 607 OFFCURVE",
"94 567 OFFCURVE",
"52 504 OFFCURVE",
"52 469 QCURVE SMOOTH",
"52 442 OFFCURVE",
"79 412 OFFCURVE",
"102 412 QCURVE SMOOTH",
"119 412 OFFCURVE",
"148 429 OFFCURVE",
"148 449 QCURVE SMOOTH",
"148 461 OFFCURVE",
"137 491 OFFCURVE",
"137 503 QCURVE SMOOTH",
"137 539 OFFCURVE",
"193 580 OFFCURVE",
"238 580 QCURVE SMOOTH",
"284 580 OFFCURVE",
"338 512 OFFCURVE",
"338 449 QCURVE SMOOTH",
"338 360 OFFCURVE",
"231 187 OFFCURVE",
"47 45 QCURVE",
"49 0 LINE",
"376 0 LINE SMOOTH",
"421 0 OFFCURVE",
"430 -3 QCURVE",
"432 33 OFFCURVE",
"455 165 QCURVE"
);
}
);
width = 506;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"423 169 LINE",
"417 128 OFFCURVE",
"366 96 OFFCURVE",
"311 96 QCURVE SMOOTH",
"126 96 LINE",
"126 99 LINE",
"290 187 OFFCURVE",
"448 363 OFFCURVE",
"448 450 QCURVE SMOOTH",
"448 528 OFFCURVE",
"331 607 OFFCURVE",
"238 607 QCURVE SMOOTH",
"179 607 OFFCURVE",
"88 571 OFFCURVE",
"39 511 OFFCURVE",
"39 476 QCURVE SMOOTH",
"39 445 OFFCURVE",
"75 405 OFFCURVE",
"108 405 QCURVE SMOOTH",
"134 405 OFFCURVE",
"169 430 OFFCURVE",
"169 454 QCURVE SMOOTH",
"169 464 OFFCURVE",
"160 501 OFFCURVE",
"160 514 QCURVE SMOOTH",
"160 541 OFFCURVE",
"199 573 OFFCURVE",
"229 573 QCURVE SMOOTH",
"267 573 OFFCURVE",
"313 518 OFFCURVE",
"313 461 QCURVE SMOOTH",
"313 361 OFFCURVE",
"203 189 OFFCURVE",
"41 80 QCURVE",
"44 0 LINE",
"381 0 LINE SMOOTH",
"431 0 OFFCURVE",
"440 -3 QCURVE",
"441 43 OFFCURVE",
"462 169 QCURVE"
);
}
);
width = 499;
}
);
},
{
glyphname = three.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 320 LINE",
"342 337 OFFCURVE",
"424 418 OFFCURVE",
"424 482 QCURVE SMOOTH",
"424 544 OFFCURVE",
"320 607 OFFCURVE",
"245 607 QCURVE SMOOTH",
"163 607 OFFCURVE",
"48 536 OFFCURVE",
"48 484 QCURVE SMOOTH",
"48 461 OFFCURVE",
"72 432 OFFCURVE",
"97 432 QCURVE SMOOTH",
"116 432 OFFCURVE",
"145 452 OFFCURVE",
"145 471 QCURVE SMOOTH",
"145 480 OFFCURVE",
"134 512 OFFCURVE",
"134 519 QCURVE SMOOTH",
"134 546 OFFCURVE",
"191 580 OFFCURVE",
"232 580 QCURVE SMOOTH",
"284 580 OFFCURVE",
"335 529 OFFCURVE",
"335 486 QCURVE SMOOTH",
"335 420 OFFCURVE",
"271 335 OFFCURVE",
"200 327 QCURVE",
"200 299 LINE",
"306 296 OFFCURVE",
"373 224 OFFCURVE",
"373 159 QCURVE SMOOTH",
"373 100 OFFCURVE",
"297 17 OFFCURVE",
"225 17 QCURVE SMOOTH",
"181 17 OFFCURVE",
"121 49 OFFCURVE",
"121 77 QCURVE SMOOTH",
"121 85 OFFCURVE",
"131 114 OFFCURVE",
"131 126 QCURVE SMOOTH",
"131 143 OFFCURVE",
"106 165 OFFCURVE",
"84 165 QCURVE SMOOTH",
"60 165 OFFCURVE",
"35 138 OFFCURVE",
"35 115 QCURVE SMOOTH",
"35 81 OFFCURVE",
"85 24 OFFCURVE",
"175 -10 OFFCURVE",
"233 -10 QCURVE SMOOTH",
"296 -10 OFFCURVE",
"400 29 OFFCURVE",
"462 106 OFFCURVE",
"462 165 QCURVE SMOOTH",
"462 307 OFFCURVE",
"268 318 QCURVE"
);
}
);
width = 498;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"285 324 LINE",
"347 337 OFFCURVE",
"444 420 OFFCURVE",
"444 481 QCURVE SMOOTH",
"444 542 OFFCURVE",
"327 607 OFFCURVE",
"238 607 QCURVE SMOOTH",
"154 607 OFFCURVE",
"30 542 OFFCURVE",
"30 487 QCURVE SMOOTH",
"30 459 OFFCURVE",
"64 421 OFFCURVE",
"99 421 QCURVE SMOOTH",
"123 421 OFFCURVE",
"159 446 OFFCURVE",
"159 471 QCURVE SMOOTH",
"159 479 OFFCURVE",
"149 509 OFFCURVE",
"149 521 QCURVE SMOOTH",
"149 544 OFFCURVE",
"193 573 OFFCURVE",
"225 573 QCURVE SMOOTH",
"267 573 OFFCURVE",
"310 523 OFFCURVE",
"310 484 QCURVE SMOOTH",
"310 413 OFFCURVE",
"247 331 OFFCURVE",
"175 331 QCURVE",
"175 298 LINE",
"290 298 OFFCURVE",
"347 226 OFFCURVE",
"347 161 QCURVE SMOOTH",
"347 102 OFFCURVE",
"278 25 OFFCURVE",
"218 25 QCURVE SMOOTH",
"185 25 OFFCURVE",
"136 52 OFFCURVE",
"136 78 QCURVE SMOOTH",
"136 90 OFFCURVE",
"145 119 OFFCURVE",
"145 126 QCURVE SMOOTH",
"145 149 OFFCURVE",
"112 177 OFFCURVE",
"85 177 QCURVE SMOOTH",
"52 177 OFFCURVE",
"16 140 OFFCURVE",
"16 111 QCURVE SMOOTH",
"16 76 OFFCURVE",
"70 21 OFFCURVE",
"166 -10 OFFCURVE",
"224 -10 QCURVE SMOOTH",
"298 -10 OFFCURVE",
"414 33 OFFCURVE",
"481 114 OFFCURVE",
"481 167 QCURVE SMOOTH",
"481 302 OFFCURVE",
"285 321 QCURVE"
);
}
);
width = 499;
}
);
},
{
glyphname = four.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"364 604 LINE",
"339 604 LINE",
"318 576 LINE",
"302 554 LINE",
"76 276 LINE",
"47 245 LINE",
"36 232 OFFCURVE",
"17 215 QCURVE",
"17 155 LINE",
"286 155 LINE",
"286 43 LINE SMOOTH",
"286 23 OFFCURVE",
"268 23 QCURVE SMOOTH",
"201 24 LINE",
"201 0 LINE",
"429 0 LINE",
"429 24 LINE",
"383 23 LINE SMOOTH",
"364 23 OFFCURVE",
"364 43 QCURVE SMOOTH",
"364 155 LINE",
"444 155 LINE",
"444 224 LINE",
"364 224 LINE"
);
},
{
closed = 1;
nodes = (
"286 224 LINE",
"72 224 LINE",
"286 488 LINE"
);
}
);
width = 470;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"396 604 LINE",
"341 604 LINE",
"320 576 LINE",
"303 554 LINE",
"70 276 LINE",
"40 245 LINE",
"29 232 OFFCURVE",
"10 215 QCURVE",
"10 147 LINE",
"273 147 LINE",
"273 51 LINE SMOOTH",
"273 31 OFFCURVE",
"254 31 QCURVE SMOOTH",
"185 32 LINE",
"185 0 LINE",
"458 0 LINE",
"458 32 LINE",
"415 31 LINE SMOOTH",
"396 31 OFFCURVE",
"396 51 QCURVE SMOOTH",
"396 147 LINE",
"475 147 LINE",
"475 224 LINE",
"396 224 LINE"
);
},
{
closed = 1;
nodes = (
"273 224 LINE",
"73 224 LINE",
"273 463 LINE"
);
}
);
width = 486;
}
);
},
{
glyphname = five.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"214 372 OFFCURVE",
"133 344 OFFCURVE",
"105 322 QCURVE",
"122 531 LINE",
"418 531 LINE",
"424 571 OFFCURVE",
"432 600 QCURVE",
"390 597 OFFCURVE",
"349 597 QCURVE SMOOTH",
"91 597 LINE",
"71 294 LINE",
"97 278 LINE",
"118 301 OFFCURVE",
"180 331 OFFCURVE",
"216 331 QCURVE SMOOTH",
"362 331 OFFCURVE",
"362 191 QCURVE SMOOTH",
"362 111 OFFCURVE",
"294 17 OFFCURVE",
"235 17 QCURVE SMOOTH",
"190 17 OFFCURVE",
"123 53 OFFCURVE",
"123 88 QCURVE SMOOTH",
"123 95 OFFCURVE",
"134 124 OFFCURVE",
"134 136 QCURVE SMOOTH",
"134 155 OFFCURVE",
"107 175 OFFCURVE",
"89 175 QCURVE SMOOTH",
"65 175 OFFCURVE",
"38 150 OFFCURVE",
"38 123 QCURVE SMOOTH",
"38 62 OFFCURVE",
"152 -10 OFFCURVE",
"234 -10 QCURVE SMOOTH",
"293 -10 OFFCURVE",
"393 38 OFFCURVE",
"452 127 OFFCURVE",
"452 187 QCURVE SMOOTH",
"452 272 OFFCURVE",
"342 372 OFFCURVE",
"251 372 QCURVE SMOOTH"
);
}
);
width = 492;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"207 368 OFFCURVE",
"126 343 OFFCURVE",
"96 324 QCURVE",
"114 501 LINE",
"418 501 LINE",
"429 571 OFFCURVE",
"434 600 QCURVE",
"395 597 OFFCURVE",
"352 597 QCURVE SMOOTH",
"81 597 LINE",
"56 285 LINE",
"85 269 LINE",
"98 289 OFFCURVE",
"164 318 OFFCURVE",
"199 318 QCURVE SMOOTH",
"325 318 OFFCURVE",
"325 174 QCURVE SMOOTH",
"325 102 OFFCURVE",
"277 24 OFFCURVE",
"220 24 QCURVE SMOOTH",
"189 24 OFFCURVE",
"145 51 OFFCURVE",
"145 78 QCURVE SMOOTH",
"145 85 OFFCURVE",
"155 117 OFFCURVE",
"155 129 QCURVE SMOOTH",
"155 152 OFFCURVE",
"120 181 OFFCURVE",
"94 181 QCURVE SMOOTH",
"65 181 OFFCURVE",
"26 143 OFFCURVE",
"26 110 QCURVE SMOOTH",
"26 47 OFFCURVE",
"147 -10 OFFCURVE",
"221 -10 QCURVE SMOOTH",
"287 -10 OFFCURVE",
"395 38 OFFCURVE",
"457 128 OFFCURVE",
"457 189 QCURVE SMOOTH",
"457 270 OFFCURVE",
"340 368 OFFCURVE",
"247 368 QCURVE SMOOTH"
);
}
);
width = 485;
}
);
},
{
glyphname = six.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"179 379 OFFCURVE",
"131 296 QCURVE",
"132 430 OFFCURVE",
"204 579 OFFCURVE",
"271 579 QCURVE SMOOTH",
"300 579 OFFCURVE",
"337 551 OFFCURVE",
"337 530 QCURVE SMOOTH",
"337 522 OFFCURVE",
"329 500 OFFCURVE",
"329 493 QCURVE SMOOTH",
"329 476 OFFCURVE",
"355 457 OFFCURVE",
"374 457 QCURVE SMOOTH",
"399 457 OFFCURVE",
"426 489 OFFCURVE",
"426 511 QCURVE SMOOTH",
"426 534 OFFCURVE",
"395 578 OFFCURVE",
"330 607 OFFCURVE",
"282 607 QCURVE SMOOTH",
"153 607 OFFCURVE",
"45 408 OFFCURVE",
"45 270 QCURVE SMOOTH",
"45 138 OFFCURVE",
"142 -11 OFFCURVE",
"248 -11 QCURVE SMOOTH",
"341 -11 OFFCURVE",
"455 100 OFFCURVE",
"455 197 QCURVE SMOOTH",
"455 278 OFFCURVE",
"360 379 OFFCURVE",
"272 379 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"194 14 OFFCURVE",
"130 112 OFFCURVE",
"130 183 QCURVE SMOOTH",
"130 252 OFFCURVE",
"196 352 OFFCURVE",
"256 352 QCURVE SMOOTH",
"369 352 OFFCURVE",
"369 177 QCURVE SMOOTH",
"367 14 OFFCURVE",
"256 14 QCURVE SMOOTH"
);
}
);
width = 485;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"211 375 OFFCURVE",
"162 334 QCURVE",
"168 433 OFFCURVE",
"226 571 OFFCURVE",
"283 571 QCURVE SMOOTH",
"311 571 OFFCURVE",
"339 548 OFFCURVE",
"339 531 QCURVE SMOOTH",
"339 522 OFFCURVE",
"331 494 OFFCURVE",
"331 484 QCURVE SMOOTH",
"331 462 OFFCURVE",
"365 438 OFFCURVE",
"394 438 QCURVE SMOOTH",
"422 438 OFFCURVE",
"458 473 OFFCURVE",
"458 502 QCURVE SMOOTH",
"458 530 OFFCURVE",
"417 578 OFFCURVE",
"342 607 OFFCURVE",
"293 607 QCURVE SMOOTH",
"151 607 OFFCURVE",
"30 415 OFFCURVE",
"30 263 QCURVE SMOOTH",
"30 137 OFFCURVE",
"134 -11 OFFCURVE",
"259 -11 QCURVE SMOOTH",
"362 -11 OFFCURVE",
"483 93 OFFCURVE",
"483 189 QCURVE SMOOTH",
"483 277 OFFCURVE",
"382 375 OFFCURVE",
"280 375 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"209 19 OFFCURVE",
"160 111 OFFCURVE",
"160 183 QCURVE SMOOTH",
"160 255 OFFCURVE",
"200 343 OFFCURVE",
"260 343 QCURVE SMOOTH",
"350 343 OFFCURVE",
"352 182 QCURVE SMOOTH",
"354 19 OFFCURVE",
"260 19 QCURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
glyphname = seven.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"417 597 LINE",
"164 597 LINE SMOOTH",
"58 597 OFFCURVE",
"45 600 QCURVE",
"45 586 OFFCURVE",
"33 492 QCURVE SMOOTH",
"30 472 LINE",
"66 472 LINE",
"70 503 OFFCURVE",
"111 530 OFFCURVE",
"155 530 QCURVE SMOOTH",
"361 530 LINE",
"271 429 OFFCURVE",
"175 244 OFFCURVE",
"142 86 OFFCURVE",
"140 0 QCURVE",
"234 0 LINE",
"230 44 OFFCURVE",
"230 75 QCURVE SMOOTH",
"230 214 OFFCURVE",
"334 458 OFFCURVE",
"421 555 QCURVE"
);
}
);
width = 427;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"439 597 LINE",
"164 597 LINE SMOOTH",
"51 597 OFFCURVE",
"38 601 QCURVE",
"38 584 OFFCURVE",
"30 510 QCURVE SMOOTH",
"23 447 LINE",
"60 447 LINE",
"64 477 OFFCURVE",
"104 501 OFFCURVE",
"148 501 QCURVE SMOOTH",
"350 501 LINE",
"263 406 OFFCURVE",
"170 231 OFFCURVE",
"138 81 OFFCURVE",
"137 0 QCURVE",
"268 0 LINE",
"265 33 OFFCURVE",
"265 64 QCURVE SMOOTH",
"265 210 OFFCURVE",
"352 448 OFFCURVE",
"444 551 QCURVE"
);
}
);
width = 447;
}
);
},
{
glyphname = eight.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"364 340 OFFCURVE",
"448 418 OFFCURVE",
"448 476 QCURVE SMOOTH",
"448 539 OFFCURVE",
"345 607 OFFCURVE",
"266 607 QCURVE SMOOTH",
"179 607 OFFCURVE",
"63 523 OFFCURVE",
"63 456 QCURVE SMOOTH",
"63 408 OFFCURVE",
"123 339 OFFCURVE",
"183 305 QCURVE",
"119 281 OFFCURVE",
"37 188 OFFCURVE",
"37 130 QCURVE SMOOTH",
"37 61 OFFCURVE",
"153 -10 OFFCURVE",
"234 -10 QCURVE SMOOTH",
"294 -10 OFFCURVE",
"399 31 OFFCURVE",
"463 107 OFFCURVE",
"463 155 QCURVE SMOOTH",
"463 214 OFFCURVE",
"367 303 OFFCURVE",
"312 327 QCURVE"
);
},
{
closed = 1;
nodes = (
"325 580 OFFCURVE",
"385 526 OFFCURVE",
"385 475 QCURVE SMOOTH",
"385 384 OFFCURVE",
"288 340 QCURVE",
"221 377 OFFCURVE",
"155 438 OFFCURVE",
"155 484 QCURVE SMOOTH",
"155 528 OFFCURVE",
"219 580 OFFCURVE",
"272 580 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 17 OFFCURVE",
"103 83 OFFCURVE",
"103 134 QCURVE SMOOTH",
"103 182 OFFCURVE",
"164 269 OFFCURVE",
"208 291 QCURVE",
"259 264 OFFCURVE",
"323 222 OFFCURVE",
"369 160 OFFCURVE",
"369 121 QCURVE SMOOTH",
"369 72 OFFCURVE",
"297 17 OFFCURVE",
"240 17 QCURVE SMOOTH"
);
}
);
width = 493;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"395 353 OFFCURVE",
"472 433 OFFCURVE",
"472 481 QCURVE SMOOTH",
"472 543 OFFCURVE",
"359 607 OFFCURVE",
"268 607 QCURVE SMOOTH",
"172 607 OFFCURVE",
"47 528 OFFCURVE",
"47 455 QCURVE SMOOTH",
"47 403 OFFCURVE",
"112 329 OFFCURVE",
"172 295 QCURVE",
"103 265 OFFCURVE",
"26 185 OFFCURVE",
"26 131 QCURVE SMOOTH",
"26 57 OFFCURVE",
"145 -10 OFFCURVE",
"246 -10 QCURVE SMOOTH",
"312 -10 OFFCURVE",
"425 29 OFFCURVE",
"493 104 OFFCURVE",
"493 157 QCURVE SMOOTH",
"493 216 OFFCURVE",
"415 299 OFFCURVE",
"345 338 QCURVE"
);
},
{
closed = 1;
nodes = (
"321 573 OFFCURVE",
"372 523 OFFCURVE",
"372 477 QCURVE SMOOTH",
"372 401 OFFCURVE",
"309 358 QCURVE",
"239 397 OFFCURVE",
"171 454 OFFCURVE",
"171 494 QCURVE SMOOTH",
"171 528 OFFCURVE",
"227 573 OFFCURVE",
"274 573 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 24 OFFCURVE",
"130 89 OFFCURVE",
"130 140 QCURVE SMOOTH",
"130 178 OFFCURVE",
"175 253 OFFCURVE",
"210 274 QCURVE",
"265 244 OFFCURVE",
"325 205 OFFCURVE",
"368 149 OFFCURVE",
"368 113 QCURVE SMOOTH",
"368 71 OFFCURVE",
"307 24 OFFCURVE",
"257 24 QCURVE SMOOTH"
);
}
);
width = 515;
}
);
},
{
glyphname = nine.lf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"323 217 OFFCURVE",
"371 300 QCURVE",
"370 166 OFFCURVE",
"298 17 OFFCURVE",
"231 17 QCURVE SMOOTH",
"202 17 OFFCURVE",
"165 45 OFFCURVE",
"165 66 QCURVE SMOOTH",
"165 74 OFFCURVE",
"173 96 OFFCURVE",
"173 103 QCURVE SMOOTH",
"173 120 OFFCURVE",
"147 139 OFFCURVE",
"128 139 QCURVE SMOOTH",
"103 139 OFFCURVE",
"76 107 OFFCURVE",
"76 85 QCURVE SMOOTH",
"76 62 OFFCURVE",
"107 18 OFFCURVE",
"172 -11 OFFCURVE",
"220 -11 QCURVE SMOOTH",
"349 -11 OFFCURVE",
"457 188 OFFCURVE",
"457 326 QCURVE SMOOTH",
"457 458 OFFCURVE",
"360 607 OFFCURVE",
"254 607 QCURVE SMOOTH",
"161 607 OFFCURVE",
"47 496 OFFCURVE",
"47 399 QCURVE SMOOTH",
"47 318 OFFCURVE",
"142 217 OFFCURVE",
"230 217 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 582 OFFCURVE",
"372 484 OFFCURVE",
"372 413 QCURVE SMOOTH",
"372 344 OFFCURVE",
"306 244 OFFCURVE",
"246 244 QCURVE SMOOTH",
"133 244 OFFCURVE",
"133 419 QCURVE SMOOTH",
"133 582 OFFCURVE",
"246 582 QCURVE SMOOTH"
);
}
);
width = 485;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"307 221 OFFCURVE",
"356 262 QCURVE",
"350 163 OFFCURVE",
"292 25 OFFCURVE",
"235 25 QCURVE SMOOTH",
"207 25 OFFCURVE",
"179 48 OFFCURVE",
"179 65 QCURVE SMOOTH",
"179 74 OFFCURVE",
"187 102 OFFCURVE",
"187 112 QCURVE SMOOTH",
"187 134 OFFCURVE",
"153 158 OFFCURVE",
"124 158 QCURVE SMOOTH",
"96 158 OFFCURVE",
"60 123 OFFCURVE",
"60 94 QCURVE SMOOTH",
"60 66 OFFCURVE",
"101 18 OFFCURVE",
"176 -11 OFFCURVE",
"225 -11 QCURVE SMOOTH",
"367 -11 OFFCURVE",
"488 181 OFFCURVE",
"488 333 QCURVE SMOOTH",
"488 459 OFFCURVE",
"384 607 OFFCURVE",
"259 607 QCURVE SMOOTH",
"156 607 OFFCURVE",
"35 503 OFFCURVE",
"35 407 QCURVE SMOOTH",
"35 319 OFFCURVE",
"136 221 OFFCURVE",
"238 221 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 577 OFFCURVE",
"358 485 OFFCURVE",
"358 413 QCURVE SMOOTH",
"358 341 OFFCURVE",
"318 253 OFFCURVE",
"258 253 QCURVE SMOOTH",
"168 253 OFFCURVE",
"166 414 QCURVE SMOOTH",
"164 577 OFFCURVE",
"258 577 QCURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
glyphname = zero.lf.zero;
layers = (
{
components = (
{
name = zero.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"364 562 LINE",
"103 96 LINE",
"132 62 LINE",
"392 528 LINE"
);
}
);
width = 518;
},
{
components = (
{
name = zero.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"357 558 LINE",
"99 98 LINE",
"140 63 LINE",
"396 524 LINE"
);
}
);
width = 520;
}
);
},
{
glyphname = zero.osf;
layers = (
{
components = (
{
name = zero;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 506;
},
{
components = (
{
name = zero;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 498;
}
);
},
{
glyphname = one.osf;
layers = (
{
components = (
{
name = one;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 319;
},
{
components = (
{
name = one;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 356;
}
);
},
{
glyphname = two.osf;
layers = (
{
components = (
{
name = two;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 458;
},
{
components = (
{
name = two;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 484;
}
);
},
{
glyphname = three.osf;
layers = (
{
components = (
{
name = three;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 476;
},
{
components = (
{
name = three;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 491;
}
);
},
{
glyphname = four.osf;
layers = (
{
components = (
{
name = four;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 431;
},
{
components = (
{
name = four;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 473;
}
);
},
{
glyphname = five.osf;
layers = (
{
components = (
{
name = five;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 449;
},
{
components = (
{
name = five;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 475;
}
);
},
{
glyphname = six.osf;
layers = (
{
components = (
{
name = six;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 476;
},
{
components = (
{
name = six;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 501;
}
);
},
{
glyphname = seven.osf;
layers = (
{
components = (
{
name = seven;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 384;
},
{
components = (
{
name = seven;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 425;
}
);
},
{
glyphname = eight.osf;
layers = (
{
components = (
{
name = eight;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 483;
},
{
components = (
{
name = eight;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 499;
}
);
},
{
glyphname = nine.osf;
layers = (
{
components = (
{
name = nine;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 472;
},
{
components = (
{
name = nine;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 495;
}
);
},
{
glyphname = zero.tf;
layers = (
{
components = (
{
name = zero.lf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = zero.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = one.tf;
layers = (
{
components = (
{
name = one.lf;
transform = "{1, 0, 0, 1, 52, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = one.lf;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = two.tf;
layers = (
{
components = (
{
name = two.lf;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = two.lf;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = three.tf;
layers = (
{
components = (
{
name = three.lf;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = three.lf;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = four.tf;
layers = (
{
components = (
{
name = four.lf;
transform = "{1, 0, 0, 1, 28, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = four.lf;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = five.tf;
layers = (
{
components = (
{
name = five.lf;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = five.lf;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = six.tf;
layers = (
{
components = (
{
name = six.lf;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = six.lf;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = seven.tf;
layers = (
{
components = (
{
name = seven.lf;
transform = "{1, 0, 0, 1, 31, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = seven.lf;
transform = "{1, 0, 0, 1, 26, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = eight.tf;
layers = (
{
components = (
{
name = eight.lf;
transform = "{1, 0, 0, 1, 9, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = eight.lf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = nine.tf;
layers = (
{
components = (
{
name = nine.lf;
transform = "{1, 0, 0, 1, 9, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = nine.lf;
transform = "{1, 0, 0, 1, -3, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = zero.tf.zero;
layers = (
{
components = (
{
name = zero.tf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"364 562 LINE",
"103 96 LINE",
"132 62 LINE",
"392 528 LINE"
);
}
);
width = 518;
},
{
components = (
{
name = zero.tf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"357 558 LINE",
"99 98 LINE",
"140 63 LINE",
"396 524 LINE"
);
}
);
width = 520;
}
);
},
{
glyphname = zero.tosf;
layers = (
{
components = (
{
name = zero;
transform = "{1, 0, 0, 1, 6, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = zero;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = one.tosf;
layers = (
{
components = (
{
name = one;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = one;
transform = "{1, 0, 0, 1, 75, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = two.tosf;
layers = (
{
components = (
{
name = two;
transform = "{1, 0, 0, 1, 32, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = two;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = three.tosf;
layers = (
{
components = (
{
name = three;
transform = "{1, 0, 0, 1, 24, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = three;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = four.tosf;
layers = (
{
components = (
{
name = four;
transform = "{1, 0, 0, 1, 48, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = four;
transform = "{1, 0, 0, 1, 28, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = five.tosf;
layers = (
{
components = (
{
name = five;
transform = "{1, 0, 0, 1, 33, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = five;
transform = "{1, 0, 0, 1, 22, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = six.tosf;
layers = (
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = seven.tosf;
layers = (
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = eight.tosf;
layers = (
{
components = (
{
name = eight;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = eight;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = nine.tosf;
layers = (
{
components = (
{
name = nine;
transform = "{1, 0, 0, 1, 22, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 518;
},
{
components = (
{
name = nine;
transform = "{1, 0, 0, 1, 8, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 520;
}
);
},
{
glyphname = zero.tosf.zero;
layers = (
{
components = (
{
name = zero.tosf;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"335 431 LINE",
"128 61 LINE",
"162 36 LINE",
"368 406 LINE"
);
}
);
width = 518;
},
{
components = (
{
name = zero.tosf;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"324 419 LINE",
"125 63 LINE",
"169 37 LINE",
"365 389 LINE"
);
}
);
width = 520;
}
);
},
{
glyphname = zero.zero;
layers = (
{
components = (
{
name = zero;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"335 431 LINE",
"128 61 LINE",
"162 36 LINE",
"368 406 LINE"
);
}
);
width = 506;
},
{
components = (
{
name = zero;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"324 419 LINE",
"125 63 LINE",
"169 37 LINE",
"365 389 LINE"
);
}
);
width = 498;
}
);
},
{
glyphname = zeroinferior;
layers = (
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 292;
},
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 320;
}
);
leftMetricsKey = zero;
rightMetricsKey = zero;
unicode = 2080;
},
{
glyphname = oneinferior;
layers = (
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 187;
},
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 222;
}
);
leftMetricsKey = one;
rightMetricsKey = one;
unicode = 2081;
},
{
glyphname = twoinferior;
layers = (
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
leftMetricsKey = two;
rightMetricsKey = two;
unicode = 2082;
},
{
glyphname = threeinferior;
layers = (
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
leftMetricsKey = three;
rightMetricsKey = three;
unicode = 2083;
},
{
glyphname = fourinferior;
layers = (
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 2084;
},
{
glyphname = fiveinferior;
layers = (
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
leftMetricsKey = five;
rightMetricsKey = five;
unicode = 2085;
},
{
glyphname = sixinferior;
layers = (
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
leftMetricsKey = six;
rightMetricsKey = six;
unicode = 2086;
},
{
glyphname = seveninferior;
layers = (
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 270;
},
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 271;
}
);
leftMetricsKey = seven;
rightMetricsKey = seven;
unicode = 2087;
},
{
glyphname = eightinferior;
layers = (
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 283;
},
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 283;
}
);
leftMetricsKey = eight;
rightMetricsKey = eight;
unicode = 2088;
},
{
glyphname = nineinferior;
layers = (
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -500}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
leftMetricsKey = nine;
rightMetricsKey = nine;
unicode = 2089;
},
{
glyphname = zero.dnom;
layers = (
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 292;
},
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 320;
}
);
},
{
glyphname = one.dnom;
layers = (
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 187;
},
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 222;
}
);
},
{
glyphname = two.dnom;
layers = (
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
},
{
glyphname = three.dnom;
layers = (
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = four.dnom;
layers = (
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
},
{
glyphname = five.dnom;
layers = (
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = six.dnom;
layers = (
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = seven.dnom;
layers = (
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 270;
},
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 271;
}
);
},
{
glyphname = eight.dnom;
layers = (
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 283;
},
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 283;
}
);
},
{
glyphname = nine.dnom;
layers = (
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = zero.numr;
layers = (
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 292;
},
{
components = (
{
name = zerosuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 320;
}
);
},
{
glyphname = one.numr;
layers = (
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 187;
},
{
components = (
{
name = onesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 222;
}
);
},
{
glyphname = two.numr;
layers = (
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = twosuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
},
{
glyphname = three.numr;
layers = (
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = threesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = four.numr;
layers = (
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 262;
},
{
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 293;
}
);
},
{
glyphname = five.numr;
layers = (
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = fivesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = six.numr;
layers = (
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = sixsuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = seven.numr;
layers = (
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 270;
},
{
components = (
{
name = sevensuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 271;
}
);
},
{
glyphname = eight.numr;
layers = (
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 283;
},
{
components = (
{
name = eightsuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 283;
}
);
},
{
glyphname = nine.numr;
layers = (
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 253;
},
{
components = (
{
name = ninesuperior;
transform = "{1, 0, 0, 1, 0, -70}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 291;
}
);
},
{
glyphname = zerosuperior;
layers = (
{
guideLines = (
{
angle = 90;
position = "{85, 698}";
},
{
angle = 90;
position = "{10, 698}";
},
{
angle = 90;
position = "{282, 698}";
},
{
angle = 90;
position = "{207, 698}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"10 398 OFFCURVE",
"144 398 QCURVE SMOOTH",
"282 398 OFFCURVE",
"282 537 QCURVE SMOOTH",
"282 678 OFFCURVE",
"146 678 QCURVE SMOOTH",
"10 678 OFFCURVE",
"10 537 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 652 OFFCURVE",
"145 652 QCURVE SMOOTH",
"207 652 OFFCURVE",
"207 538 QCURVE SMOOTH",
"207 426 OFFCURVE",
"145 426 QCURVE SMOOTH",
"85 426 OFFCURVE",
"85 538 QCURVE SMOOTH"
);
}
);
width = 292;
},
{
guideLines = (
{
angle = 90;
position = "{174, 726}";
},
{
angle = 90;
position = "{282, 726}";
},
{
angle = 90;
position = "{366, 726}";
},
{
angle = 90;
position = "{474, 726}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"10 397 OFFCURVE",
"157 397 QCURVE SMOOTH",
"310 397 OFFCURVE",
"310 537 QCURVE SMOOTH",
"310 678 OFFCURVE",
"163 678 QCURVE SMOOTH",
"10 678 OFFCURVE",
"10 537 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 650 OFFCURVE",
"160 649 QCURVE SMOOTH",
"202 648 OFFCURVE",
"202 537 QCURVE SMOOTH",
"202 428 OFFCURVE",
"160 428 QCURVE SMOOTH",
"119 428 OFFCURVE",
"118 537 QCURVE SMOOTH"
);
}
);
width = 320;
}
);
unicode = 2070;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"13 630 LINE",
"56 630 LINE SMOOTH",
"61 630 OFFCURVE",
"68 626 OFFCURVE",
"68 621 QCURVE SMOOTH",
"68 435 LINE SMOOTH",
"68 424 OFFCURVE",
"56 424 QCURVE SMOOTH",
"22 424 LINE",
"22 403 LINE",
"181 403 LINE",
"181 424 LINE",
"148 424 LINE SMOOTH",
"137 424 OFFCURVE",
"137 435 QCURVE SMOOTH",
"137 682 LINE",
"121 682 LINE",
"54 662 OFFCURVE",
"13 652 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
15 14 10 3 0 3 1 74 0 3 3 39 75 0 1 1 0 95 2 1 0 0 40 1 76 26 33 17 33 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 187;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"23 617 LINE",
"58 617 LINE SMOOTH",
"64 617 OFFCURVE",
"70 613 OFFCURVE",
"70 608 QCURVE SMOOTH",
"70 440 LINE SMOOTH",
"70 428 OFFCURVE",
"58 428 QCURVE SMOOTH",
"25 429 LINE",
"25 403 LINE",
"218 403 LINE",
"218 429 LINE",
"185 428 LINE SMOOTH",
"175 428 OFFCURVE",
"175 440 QCURVE SMOOTH",
"175 682 LINE",
"154 682 LINE",
"112 671 OFFCURVE",
"23 648 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
14 13 2 0 3 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
45 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 3 3 39 75 0 1 1 0 95 2 1 0 0 40 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 17 values pushed */
0 3 0 3 131 0 1 1 0 95 2 1 0 0 40 1 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
25 33 17 33 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 222;
}
);
note = uni00B9;
unicode = 00B9;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"221 480 LINE",
"218 465 OFFCURVE",
"193 454 OFFCURVE",
"165 454 QCURVE SMOOTH",
"70 454 LINE",
"126 488 LINE SMOOTH",
"174 517 OFFCURVE",
"238 571 OFFCURVE",
"238 607 QCURVE SMOOTH",
"238 642 OFFCURVE",
"176 678 OFFCURVE",
"128 678 QCURVE SMOOTH",
"81 678 OFFCURVE",
"25 644 OFFCURVE",
"25 619 QCURVE SMOOTH",
"25 604 OFFCURVE",
"45 583 OFFCURVE",
"63 583 QCURVE SMOOTH",
"78 583 OFFCURVE",
"98 597 OFFCURVE",
"98 609 QCURVE SMOOTH",
"98 614 OFFCURVE",
"93 634 OFFCURVE",
"93 638 QCURVE SMOOTH",
"93 648 OFFCURVE",
"111 660 OFFCURVE",
"125 660 QCURVE SMOOTH",
"163 660 OFFCURVE",
"163 613 QCURVE SMOOTH",
"163 579 OFFCURVE",
"131 531 OFFCURVE",
"85 493 QCURVE SMOOTH",
"27 447 LINE",
"29 403 LINE",
"200 403 LINE SMOOTH",
"223 403 OFFCURVE",
"231 401 QCURVE",
"236 461 OFFCURVE",
"241 480 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
16 1 2 1 7 1 0 4 2 74 3 1 0 71 0 2 1 5 1 2 5 126 6 1 5 4 1 5 4 124 0 4 0 0 4 0 97 0 1 1 3 95 0 3 3 39 1 76 0 0 0 40 0 40 39 36 39 38 36 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 262;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"251 495 LINE",
"249 483 OFFCURVE",
"227 469 OFFCURVE",
"205 469 QCURVE SMOOTH",
"70 469 LINE",
"152 497 LINE SMOOTH",
"216 521 OFFCURVE",
"279 570 OFFCURVE",
"279 603 QCURVE SMOOTH",
"279 640 OFFCURVE",
"202 678 OFFCURVE",
"140 678 QCURVE SMOOTH",
"78 678 OFFCURVE",
"13 642 OFFCURVE",
"13 612 QCURVE SMOOTH",
"13 592 OFFCURVE",
"39 566 OFFCURVE",
"66 566 QCURVE SMOOTH",
"88 566 OFFCURVE",
"117 585 OFFCURVE",
"117 602 QCURVE SMOOTH",
"117 608 OFFCURVE",
"111 628 OFFCURVE",
"111 634 QCURVE SMOOTH",
"111 644 OFFCURVE",
"127 656 OFFCURVE",
"140 656 QCURVE SMOOTH",
"171 656 OFFCURVE",
"171 612 QCURVE SMOOTH",
"171 576 OFFCURVE",
"137 530 OFFCURVE",
"100 509 QCURVE SMOOTH",
"20 467 LINE",
"23 403 LINE",
"227 403 LINE SMOOTH",
"257 403 OFFCURVE",
"265 401 QCURVE",
"269 466 OFFCURVE",
"276 495 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
19 1 3 2 9 1 1 5 2 74 5 1 1 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 3 2 0 2 3 112 0 0 5 5 0 110 6 1 5 0 1 5 1 98 0 2 2 4 95 0 4 4 39 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 3 2 0 2 3 0 126 0 0 5 5 0 110 6 1 5 0 1 5 1 98 0 2 2 4 95 0 4 4 39 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
47 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 3 2 0 2 3 0 126 0 0 5 5 0 110 0 4 0 2 3 4 2 103 6 1 5 1 1 5 85 6 1 5 5 1 94 0 1 5 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 3 2 0 2 3 0 126 0 0 5 2 0 5 124 0 4 0 2 3 4 2 103 6 1 5 1 1 5 85 6 1 5 5 1 94 0 1 5 1 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 39 0 38 36 39 39 35 18 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 293;
}
);
note = uni00B2;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"67 537 LINE",
"125 532 OFFCURVE",
"170 505 OFFCURVE",
"170 475 QCURVE SMOOTH",
"170 449 OFFCURVE",
"140 416 OFFCURVE",
"114 416 QCURVE SMOOTH",
"99 416 OFFCURVE",
"77 426 OFFCURVE",
"77 438 QCURVE SMOOTH",
"77 443 OFFCURVE",
"81 454 OFFCURVE",
"81 459 QCURVE SMOOTH",
"81 472 OFFCURVE",
"62 486 OFFCURVE",
"47 486 QCURVE SMOOTH",
"29 486 OFFCURVE",
"9 467 OFFCURVE",
"9 453 QCURVE SMOOTH",
"9 428 OFFCURVE",
"70 397 OFFCURVE",
"115 397 QCURVE SMOOTH",
"171 397 OFFCURVE",
"244 443 OFFCURVE",
"244 479 QCURVE SMOOTH",
"244 512 OFFCURVE",
"184 546 OFFCURVE",
"129 547 QCURVE",
"129 550 LINE",
"172 555 OFFCURVE",
"227 591 OFFCURVE",
"227 619 QCURVE SMOOTH",
"227 648 OFFCURVE",
"167 678 OFFCURVE",
"122 678 QCURVE SMOOTH",
"79 678 OFFCURVE",
"16 649 OFFCURVE",
"16 623 QCURVE SMOOTH",
"16 610 OFFCURVE",
"35 590 OFFCURVE",
"53 590 QCURVE SMOOTH",
"67 590 OFFCURVE",
"88 603 OFFCURVE",
"88 616 QCURVE SMOOTH",
"88 621 OFFCURVE",
"84 634 OFFCURVE",
"84 638 QCURVE SMOOTH",
"84 648 OFFCURVE",
"102 660 OFFCURVE",
"115 660 QCURVE SMOOTH",
"133 660 OFFCURVE",
"152 638 OFFCURVE",
"152 621 QCURVE SMOOTH",
"152 589 OFFCURVE",
"101 553 OFFCURVE",
"67 553 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
9 1 2 1 55 27 2 5 0 43 1 6 5 3 74 0 2 1 0 1 2 0 126 0 0 5 1 0 5 124 0 5 6 1 5 6 124 0 1 1 3 95 0 3 3 39 75 0 4 4 6 95 0 6 6 40 4 76 39 36 43 36 39 36 16 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"72 530 LINE",
"136 530 OFFCURVE",
"179 504 OFFCURVE",
"179 475 QCURVE SMOOTH",
"179 449 OFFCURVE",
"156 420 OFFCURVE",
"137 420 QCURVE SMOOTH",
"125 420 OFFCURVE",
"106 428 OFFCURVE",
"106 439 QCURVE SMOOTH",
"106 444 OFFCURVE",
"109 454 OFFCURVE",
"109 459 QCURVE SMOOTH",
"109 475 OFFCURVE",
"80 497 OFFCURVE",
"58 497 QCURVE SMOOTH",
"35 497 OFFCURVE",
"7 473 OFFCURVE",
"7 455 QCURVE SMOOTH",
"7 426 OFFCURVE",
"72 397 OFFCURVE",
"129 397 QCURVE SMOOTH",
"197 397 OFFCURVE",
"282 442 OFFCURVE",
"282 480 QCURVE SMOOTH",
"282 512 OFFCURVE",
"220 544 OFFCURVE",
"164 544 QCURVE",
"164 547 LINE",
"209 552 OFFCURVE",
"265 587 OFFCURVE",
"265 615 QCURVE SMOOTH",
"265 647 OFFCURVE",
"193 678 OFFCURVE",
"139 678 QCURVE SMOOTH",
"84 678 OFFCURVE",
"12 647 OFFCURVE",
"12 619 QCURVE SMOOTH",
"12 602 OFFCURVE",
"38 578 OFFCURVE",
"63 578 QCURVE SMOOTH",
"85 578 OFFCURVE",
"114 597 OFFCURVE",
"114 615 QCURVE SMOOTH",
"114 621 OFFCURVE",
"111 634 OFFCURVE",
"111 638 QCURVE SMOOTH",
"111 646 OFFCURVE",
"125 656 OFFCURVE",
"135 656 QCURVE SMOOTH",
"148 656 OFFCURVE",
"163 637 OFFCURVE",
"163 620 QCURVE SMOOTH",
"163 583 OFFCURVE",
"119 551 OFFCURVE",
"72 551 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
43 1 7 6 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 2 1 0 1 2 0 126 0 6 8 7 7 6 112 4 1 0 0 8 6 0 8 103 0 1 1 3 95 0 3 3 39 75 0 5 5 7 95 0 7 7 40 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 52 values pushed */
0 2 1 0 1 2 0 126 0 4 0 8 0 4 8 126 0 6 8 7 7 6 112 0 0 0 8 6 0 8 103 0 1 1 3 95 0 3 3 39 75 0 5 5 7 95 0 7 7 40 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 53 values pushed */
0 2 1 0 1 2 0 126 0 4 0 8 0 4 8 126 0 6 8 7 8 6 7 126 0 0 0 8 6 0 8 103 0 1 1 3 95 0 3 3 39 75 0 5 5 7 95 0 7 7 40 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 51 values pushed */
0 2 1 0 1 2 0 126 0 4 0 8 0 4 8 126 0 6 8 7 8 6 7 126 0 3 0 1 2 3 1 103 0 0 0 8 6 0 8 103 0 5 5 7 95 0 7 7 40 5 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
21 39 36 36 37 36 39 36 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 291;
}
);
note = uni00B3;
unicode = 00B3;
},
{
glyphname = foursuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"245 468 LINE",
"245 505 LINE",
"209 505 LINE",
"209 677 LINE",
"176 677 LINE",
"13 501 LINE",
"13 468 LINE",
"140 468 LINE",
"140 433 LINE SMOOTH",
"140 424 OFFCURVE",
"131 424 QCURVE SMOOTH",
"98 424 LINE",
"98 403 LINE",
"238 403 LINE",
"238 424 LINE",
"218 424 LINE SMOOTH",
"209 424 OFFCURVE",
"209 433 QCURVE SMOOTH",
"209 468 LINE"
);
},
{
closed = 1;
nodes = (
"140 601 LINE",
"140 505 LINE",
"50 505 LINE"
);
}
);
width = 262;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"281 464 LINE",
"281 505 LINE",
"244 505 LINE",
"244 677 LINE",
"186 677 LINE",
"10 501 LINE",
"10 464 LINE",
"138 464 LINE",
"138 438 LINE SMOOTH",
"138 429 OFFCURVE",
"128 429 QCURVE SMOOTH",
"92 429 LINE",
"92 403 LINE",
"272 403 LINE",
"272 429 LINE",
"254 429 LINE SMOOTH",
"244 429 OFFCURVE",
"244 438 QCURVE SMOOTH",
"244 464 LINE"
);
},
{
closed = 1;
nodes = (
"138 587 LINE",
"138 505 LINE",
"54 505 LINE"
);
}
);
width = 293;
}
);
unicode = 2074;
},
{
glyphname = fivesuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"106 576 OFFCURVE",
"76 567 OFFCURVE",
"64 558 QCURVE",
"72 630 LINE",
"214 630 LINE",
"216 649 OFFCURVE",
"221 680 QCURVE",
"201 678 OFFCURVE",
"179 678 QCURVE SMOOTH",
"48 678 LINE",
"34 530 LINE",
"52 522 LINE",
"61 533 OFFCURVE",
"91 547 OFFCURVE",
"107 547 QCURVE SMOOTH",
"155 547 OFFCURVE",
"155 493 QCURVE SMOOTH",
"155 454 OFFCURVE",
"137 416 OFFCURVE",
"110 416 QCURVE SMOOTH",
"92 416 OFFCURVE",
"72 425 OFFCURVE",
"72 440 QCURVE SMOOTH",
"72 445 OFFCURVE",
"79 456 OFFCURVE",
"79 463 QCURVE SMOOTH",
"79 474 OFFCURVE",
"62 487 OFFCURVE",
"48 487 QCURVE SMOOTH",
"31 487 OFFCURVE",
"13 470 OFFCURVE",
"13 456 QCURVE SMOOTH",
"13 428 OFFCURVE",
"72 398 OFFCURVE",
"113 398 QCURVE SMOOTH",
"165 398 OFFCURVE",
"230 446 OFFCURVE",
"230 490 QCURVE SMOOTH",
"230 528 OFFCURVE",
"179 576 OFFCURVE",
"124 576 QCURVE SMOOTH"
);
}
);
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"138 580 OFFCURVE",
"100 574 OFFCURVE",
"87 568 QCURVE",
"93 608 LINE",
"250 608 LINE",
"253 638 OFFCURVE",
"257 680 QCURVE",
"237 678 OFFCURVE",
"215 678 QCURVE SMOOTH",
"53 678 LINE",
"36 522 LINE",
"65 514 LINE",
"76 526 OFFCURVE",
"104 539 OFFCURVE",
"127 539 QCURVE SMOOTH",
"169 539 OFFCURVE",
"169 485 QCURVE SMOOTH",
"169 448 OFFCURVE",
"152 420 OFFCURVE",
"132 420 QCURVE SMOOTH",
"118 420 OFFCURVE",
"102 429 OFFCURVE",
"102 440 QCURVE SMOOTH",
"102 447 OFFCURVE",
"110 459 OFFCURVE",
"110 468 QCURVE SMOOTH",
"110 482 OFFCURVE",
"90 497 OFFCURVE",
"66 497 QCURVE SMOOTH",
"41 497 OFFCURVE",
"18 477 OFFCURVE",
"18 460 QCURVE SMOOTH",
"18 427 OFFCURVE",
"76 398 OFFCURVE",
"127 398 QCURVE SMOOTH",
"201 398 OFFCURVE",
"271 451 OFFCURVE",
"271 493 QCURVE SMOOTH",
"271 531 OFFCURVE",
"220 580 OFFCURVE",
"158 580 QCURVE SMOOTH"
);
}
);
width = 291;
}
);
unicode = 2075;
},
{
glyphname = sixsuperior;
layers = (
{
guideLines = (
{
angle = 90;
position = "{241, 698}";
},
{
angle = 90;
position = "{166, 698}";
},
{
angle = 90;
position = "{88, 698}";
},
{
angle = 90;
position = "{13, 698}";
},
{
position = "{179, 416}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"115 574 OFFCURVE",
"88 554 QCURVE",
"89 614 OFFCURVE",
"106 657 OFFCURVE",
"136 657 QCURVE SMOOTH",
"150 657 OFFCURVE",
"166 646 OFFCURVE",
"166 635 QCURVE SMOOTH",
"166 630 OFFCURVE",
"159 618 OFFCURVE",
"159 611 QCURVE SMOOTH",
"159 599 OFFCURVE",
"178 588 OFFCURVE",
"193 588 QCURVE SMOOTH",
"208 588 OFFCURVE",
"225 606 OFFCURVE",
"225 621 QCURVE SMOOTH",
"225 647 OFFCURVE",
"180 677 OFFCURVE",
"141.345 677.034 QCURVE SMOOTH",
"76 677 OFFCURVE",
"13 591 OFFCURVE",
"13 525 QCURVE SMOOTH",
"13 465 OFFCURVE",
"70 398 OFFCURVE",
"123 398 QCURVE SMOOTH",
"176 398 OFFCURVE",
"241 448 OFFCURVE",
"241 492 QCURVE SMOOTH",
"241 529 OFFCURVE",
"195 574 OFFCURVE",
"148 574 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"87 416 OFFCURVE",
"88 483 QCURVE SMOOTH",
"87 544 OFFCURVE",
"129 544 QCURVE SMOOTH",
"166 544 OFFCURVE",
"166 483 QCURVE SMOOTH",
"166 416 OFFCURVE",
"129 416 QCURVE SMOOTH"
);
}
);
width = 253;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"139 569 OFFCURVE",
"115 549 QCURVE",
"115 605 OFFCURVE",
"130 655 OFFCURVE",
"152 655 QCURVE SMOOTH",
"163 655 OFFCURVE",
"178 645 OFFCURVE",
"178 633 QCURVE SMOOTH",
"178 627 OFFCURVE",
"170 615 OFFCURVE",
"170 605 QCURVE SMOOTH",
"170 592 OFFCURVE",
"192 578 OFFCURVE",
"214 578 QCURVE SMOOTH",
"238 578 OFFCURVE",
"262 602 OFFCURVE",
"262 620 QCURVE SMOOTH",
"262 648 OFFCURVE",
"204 677 OFFCURVE",
"156 677 QCURVE SMOOTH",
"81 677 OFFCURVE",
"13 591 OFFCURVE",
"13 525 QCURVE SMOOTH",
"13 465 OFFCURVE",
"75 398 OFFCURVE",
"138 398 QCURVE SMOOTH",
"203 398 OFFCURVE",
"271 449 OFFCURVE",
"271 496 QCURVE SMOOTH",
"271 531 OFFCURVE",
"223 569 OFFCURVE",
"178 569 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 420 OFFCURVE",
"115 478 QCURVE SMOOTH",
"115 529 OFFCURVE",
"144 529 QCURVE SMOOTH",
"169 529 OFFCURVE",
"169 478 QCURVE SMOOTH",
"169 420 OFFCURVE",
"144 420 QCURVE SMOOTH"
);
}
);
width = 291;
}
);
unicode = 2076;
},
{
glyphname = sevensuperior;
layers = (
{
guideLines = (
{
position = "{-56, 631}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"237 678 LINE",
"95 678 LINE SMOOTH",
"41 678 OFFCURVE",
"35 680 QCURVE",
"34 668 OFFCURVE",
"31 633 QCURVE SMOOTH",
"28 591 LINE",
"50 591 LINE",
"51 607 OFFCURVE",
"66 629 OFFCURVE",
"87 629 QCURVE SMOOTH",
"188 629 LINE",
"129 556 OFFCURVE",
"93 457 OFFCURVE",
"92 398 QCURVE",
"169 398 LINE",
"168 414 OFFCURVE",
"168 429 QCURVE SMOOTH",
"168 557 OFFCURVE",
"239 648 QCURVE"
);
}
);
width = 270;
},
{
guideLines = (
{
position = "{12, 608}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"246 678 LINE",
"94 678 LINE SMOOTH",
"36 678 OFFCURVE",
"30 680 QCURVE",
"29 645 OFFCURVE",
"26 610 QCURVE SMOOTH",
"23 568 LINE",
"49 568 LINE",
"50 584 OFFCURVE",
"65 606 OFFCURVE",
"86 606 QCURVE SMOOTH",
"182 606 LINE",
"123 548 OFFCURVE",
"82 457 OFFCURVE",
"81 398 QCURVE",
"178 398 LINE",
"177 414 OFFCURVE",
"177 429 QCURVE SMOOTH",
"177 528 OFFCURVE",
"248 625 QCURVE"
);
}
);
width = 271;
}
);
unicode = 2077;
},
{
glyphname = eightsuperior;
layers = (
{
guideLines = (
{
position = "{-185, 417}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"252 576 OFFCURVE",
"252 618 QCURVE SMOOTH",
"252 647 OFFCURVE",
"194 678 OFFCURVE",
"145 678 QCURVE SMOOTH",
"98 678 OFFCURVE",
"34 642 OFFCURVE",
"34 607 QCURVE SMOOTH",
"34 564 OFFCURVE",
"82 539 QCURVE",
"25 509 OFFCURVE",
"25 467 QCURVE SMOOTH",
"25 432 OFFCURVE",
"83 398 OFFCURVE",
"135 398 QCURVE SMOOTH",
"185 398 OFFCURVE",
"258 437 OFFCURVE",
"258 481 QCURVE SMOOTH",
"258 527 OFFCURVE",
"201 555 QCURVE"
);
},
{
closed = 1;
nodes = (
"166 660 OFFCURVE",
"185 641 OFFCURVE",
"185 620 QCURVE SMOOTH",
"185 596 OFFCURVE",
"164 576 QCURVE",
"114 600 OFFCURVE",
"114 626 QCURVE SMOOTH",
"114 641 OFFCURVE",
"129 660 OFFCURVE",
"148 660 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 417 OFFCURVE",
"91 442 OFFCURVE",
"91 464 QCURVE SMOOTH",
"91 492 OFFCURVE",
"119 517 QCURVE",
"182 489 OFFCURVE",
"182 456 QCURVE SMOOTH",
"182 438 OFFCURVE",
"159 417 OFFCURVE",
"137 417 QCURVE SMOOTH"
);
}
);
width = 283;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"262 579 OFFCURVE",
"262 613 QCURVE SMOOTH",
"262 646 OFFCURVE",
"208 678 OFFCURVE",
"149 678 QCURVE SMOOTH",
"99 678 OFFCURVE",
"24 638 OFFCURVE",
"24 597 QCURVE SMOOTH",
"24 560 OFFCURVE",
"67 535 QCURVE",
"15 505 OFFCURVE",
"15 467 QCURVE SMOOTH",
"15 433 OFFCURVE",
"83 398 OFFCURVE",
"135 398 QCURVE SMOOTH",
"193 398 OFFCURVE",
"268 442 OFFCURVE",
"268 481 QCURVE SMOOTH",
"268 530 OFFCURVE",
"216 558 QCURVE"
);
},
{
closed = 1;
nodes = (
"162 657 OFFCURVE",
"173 642 OFFCURVE",
"173 627 QCURVE SMOOTH",
"173 608 OFFCURVE",
"164 588 QCURVE",
"126 600 OFFCURVE",
"126 629 QCURVE SMOOTH",
"126 643 OFFCURVE",
"139 657 OFFCURVE",
"150 657 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 420 OFFCURVE",
"103 438 OFFCURVE",
"103 457 QCURVE SMOOTH",
"103 483 OFFCURVE",
"119 504 QCURVE",
"170 483 OFFCURVE",
"170 453 QCURVE SMOOTH",
"170 437 OFFCURVE",
"154 420 OFFCURVE",
"137 420 QCURVE SMOOTH"
);
}
);
width = 283;
}
);
unicode = 2078;
},
{
glyphname = ninesuperior;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"138 501 OFFCURVE",
"165 521 QCURVE",
"164 461 OFFCURVE",
"147 418 OFFCURVE",
"117 418 QCURVE SMOOTH",
"103 418 OFFCURVE",
"87 429 OFFCURVE",
"87 440 QCURVE SMOOTH",
"87 445 OFFCURVE",
"94 457 OFFCURVE",
"94 464 QCURVE SMOOTH",
"94 476 OFFCURVE",
"75 487 OFFCURVE",
"60 487 QCURVE SMOOTH",
"45 487 OFFCURVE",
"28 469 OFFCURVE",
"28 454 QCURVE SMOOTH",
"28 428 OFFCURVE",
"73 398 OFFCURVE",
"112 398 QCURVE SMOOTH",
"177 398 OFFCURVE",
"240 484 OFFCURVE",
"240 550 QCURVE SMOOTH",
"240 610 OFFCURVE",
"183 677 OFFCURVE",
"130 677 QCURVE SMOOTH",
"77 677 OFFCURVE",
"12 627 OFFCURVE",
"12 583 QCURVE SMOOTH",
"12 546 OFFCURVE",
"58 501 OFFCURVE",
"105 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 659 OFFCURVE",
"165 592 QCURVE SMOOTH",
"166 531 OFFCURVE",
"124 531 QCURVE SMOOTH",
"88 531 OFFCURVE",
"87 592 QCURVE SMOOTH",
"89 659 OFFCURVE",
"124 659 QCURVE SMOOTH"
);
}
);
width = 253;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"152 506 OFFCURVE",
"176 526 QCURVE",
"176 470 OFFCURVE",
"161 420 OFFCURVE",
"139 420 QCURVE SMOOTH",
"128 420 OFFCURVE",
"113 430 OFFCURVE",
"113 442 QCURVE SMOOTH",
"113 448 OFFCURVE",
"121 460 OFFCURVE",
"121 470 QCURVE SMOOTH",
"121 483 OFFCURVE",
"99 497 OFFCURVE",
"77 497 QCURVE SMOOTH",
"53 497 OFFCURVE",
"29 473 OFFCURVE",
"29 455 QCURVE SMOOTH",
"29 427 OFFCURVE",
"87 398 OFFCURVE",
"135 398 QCURVE SMOOTH",
"210 398 OFFCURVE",
"278 484 OFFCURVE",
"278 550 QCURVE SMOOTH",
"278 610 OFFCURVE",
"216 677 OFFCURVE",
"153 677 QCURVE SMOOTH",
"88 677 OFFCURVE",
"20 626 OFFCURVE",
"20 579 QCURVE SMOOTH",
"20 544 OFFCURVE",
"68 506 OFFCURVE",
"113 506 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 655 OFFCURVE",
"176 597 QCURVE SMOOTH",
"176 546 OFFCURVE",
"147 546 QCURVE SMOOTH",
"122 546 OFFCURVE",
"122 597 QCURVE SMOOTH",
"122 655 OFFCURVE",
"147 655 QCURVE SMOOTH"
);
}
);
width = 291;
}
);
unicode = 2079;
},
{
glyphname = fraction;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"-110 -18 LINE",
"319 585 LINE",
"285 605 LINE",
"-143 5 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 139;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"-106 -21 LINE",
"323 581 LINE",
"281 609 LINE",
"-146 10 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 139;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"84 -18 LINE",
"513 585 LINE",
"479 605 LINE",
"51 5 LINE"
);
},
{
closed = 1;
nodes = (
"42 559 LINE",
"85 559 LINE SMOOTH",
"90 559 OFFCURVE",
"97 555 OFFCURVE",
"97 550 QCURVE SMOOTH",
"97 364 LINE SMOOTH",
"97 353 OFFCURVE",
"85 353 QCURVE SMOOTH",
"51 353 LINE",
"51 332 LINE",
"210 332 LINE",
"210 353 LINE",
"177 353 LINE SMOOTH",
"166 353 OFFCURVE",
"166 364 QCURVE SMOOTH",
"166 611 LINE",
"150 611 LINE",
"83 591 OFFCURVE",
"42 581 QCURVE"
);
},
{
closed = 1;
nodes = (
"533 77 LINE",
"530 62 OFFCURVE",
"505 51 OFFCURVE",
"477 51 QCURVE SMOOTH",
"382 51 LINE",
"438 85 LINE SMOOTH",
"486 114 OFFCURVE",
"550 168 OFFCURVE",
"550 204 QCURVE SMOOTH",
"550 239 OFFCURVE",
"488 275 OFFCURVE",
"440 275 QCURVE SMOOTH",
"393 275 OFFCURVE",
"337 241 OFFCURVE",
"337 216 QCURVE SMOOTH",
"337 201 OFFCURVE",
"357 180 OFFCURVE",
"375 180 QCURVE SMOOTH",
"390 180 OFFCURVE",
"410 194 OFFCURVE",
"410 206 QCURVE SMOOTH",
"410 211 OFFCURVE",
"405 231 OFFCURVE",
"405 235 QCURVE SMOOTH",
"405 245 OFFCURVE",
"423 257 OFFCURVE",
"437 257 QCURVE SMOOTH",
"475 257 OFFCURVE",
"475 210 QCURVE SMOOTH",
"475 176 OFFCURVE",
"443 128 OFFCURVE",
"397 90 QCURVE SMOOTH",
"339 44 LINE",
"341 0 LINE",
"512 0 LINE SMOOTH",
"535 0 OFFCURVE",
"543 -2 QCURVE",
"548 58 OFFCURVE",
"553 77 QCURVE"
);
}
);
width = 580;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"108 -21 LINE",
"537 581 LINE",
"495 609 LINE",
"68 10 LINE"
);
},
{
closed = 1;
nodes = (
"52 546 LINE",
"87 546 LINE SMOOTH",
"93 546 OFFCURVE",
"99 542 OFFCURVE",
"99 537 QCURVE SMOOTH",
"99 369 LINE SMOOTH",
"99 357 OFFCURVE",
"87 357 QCURVE SMOOTH",
"54 358 LINE",
"54 332 LINE",
"247 332 LINE",
"247 358 LINE",
"214 357 LINE SMOOTH",
"204 357 OFFCURVE",
"204 369 QCURVE SMOOTH",
"204 611 LINE",
"183 611 LINE",
"141 600 OFFCURVE",
"52 577 QCURVE"
);
},
{
closed = 1;
nodes = (
"563 92 LINE",
"561 80 OFFCURVE",
"539 66 OFFCURVE",
"517 66 QCURVE SMOOTH",
"382 66 LINE",
"464 94 LINE SMOOTH",
"528 118 OFFCURVE",
"591 167 OFFCURVE",
"591 200 QCURVE SMOOTH",
"591 237 OFFCURVE",
"514 275 OFFCURVE",
"452 275 QCURVE SMOOTH",
"390 275 OFFCURVE",
"325 239 OFFCURVE",
"325 209 QCURVE SMOOTH",
"325 189 OFFCURVE",
"351 163 OFFCURVE",
"378 163 QCURVE SMOOTH",
"400 163 OFFCURVE",
"429 182 OFFCURVE",
"429 199 QCURVE SMOOTH",
"429 205 OFFCURVE",
"423 225 OFFCURVE",
"423 231 QCURVE SMOOTH",
"423 241 OFFCURVE",
"439 253 OFFCURVE",
"452 253 QCURVE SMOOTH",
"483 253 OFFCURVE",
"483 209 QCURVE SMOOTH",
"483 173 OFFCURVE",
"449 127 OFFCURVE",
"412 106 QCURVE SMOOTH",
"332 64 LINE",
"335 0 LINE",
"539 0 LINE SMOOTH",
"569 0 OFFCURVE",
"577 -2 QCURVE",
"581 63 OFFCURVE",
"588 92 QCURVE"
);
}
);
width = 625;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"96 -18 LINE",
"525 585 LINE",
"491 605 LINE",
"63 5 LINE"
);
},
{
closed = 1;
nodes = (
"46 559 LINE",
"89 559 LINE SMOOTH",
"94 559 OFFCURVE",
"101 555 OFFCURVE",
"101 550 QCURVE SMOOTH",
"101 364 LINE SMOOTH",
"101 353 OFFCURVE",
"89 353 QCURVE SMOOTH",
"55 353 LINE",
"55 332 LINE",
"214 332 LINE",
"214 353 LINE",
"181 353 LINE SMOOTH",
"170 353 OFFCURVE",
"170 364 QCURVE SMOOTH",
"170 611 LINE",
"154 611 LINE",
"87 591 OFFCURVE",
"46 581 QCURVE"
);
},
{
closed = 1;
nodes = (
"520 65 LINE",
"520 102 LINE",
"484 102 LINE",
"484 274 LINE",
"451 274 LINE",
"288 98 LINE",
"288 65 LINE",
"415 65 LINE",
"415 30 LINE SMOOTH",
"415 21 OFFCURVE",
"406 21 QCURVE SMOOTH",
"373 21 LINE",
"373 0 LINE",
"513 0 LINE",
"513 21 LINE",
"493 21 LINE SMOOTH",
"484 21 OFFCURVE",
"484 30 QCURVE SMOOTH",
"484 65 LINE"
);
},
{
closed = 1;
nodes = (
"415 198 LINE",
"415 102 LINE",
"325 102 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 93 values pushed */
21 16 1 3 1 0 45 1 9 8 37 1 7 9 23 1 5 4 4 74 0 0 1 0 131 0 8 2 9 2 8 9 126 3 1 1 0 2 8 1 2 102 11 1 9 12 10 2 7 4 9 7 101 6 1 4 5 5 4 87 6 1 4 4 5 94 0 5 4 5 78 24 24 44 43 24 42 24 42 41 40 18 18 33 17 44 33 17 34 20 13 7 29 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 559;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"130 -21 LINE",
"559 581 LINE",
"517 609 LINE",
"90 10 LINE"
);
},
{
closed = 1;
nodes = (
"56 546 LINE",
"91 546 LINE SMOOTH",
"97 546 OFFCURVE",
"103 542 OFFCURVE",
"103 537 QCURVE SMOOTH",
"103 369 LINE SMOOTH",
"103 357 OFFCURVE",
"91 357 QCURVE SMOOTH",
"58 358 LINE",
"58 332 LINE",
"251 332 LINE",
"251 358 LINE",
"218 357 LINE SMOOTH",
"208 357 OFFCURVE",
"208 369 QCURVE SMOOTH",
"208 611 LINE",
"187 611 LINE",
"145 600 OFFCURVE",
"56 577 QCURVE"
);
},
{
closed = 1;
nodes = (
"587 61 LINE",
"587 102 LINE",
"550 102 LINE",
"550 274 LINE",
"492 274 LINE",
"316 98 LINE",
"316 61 LINE",
"444 61 LINE",
"444 35 LINE SMOOTH",
"444 26 OFFCURVE",
"434 26 QCURVE SMOOTH",
"398 26 LINE",
"398 0 LINE",
"578 0 LINE",
"578 26 LINE",
"560 26 LINE SMOOTH",
"550 26 OFFCURVE",
"550 35 QCURVE SMOOTH",
"550 61 LINE"
);
},
{
closed = 1;
nodes = (
"444 184 LINE",
"444 102 LINE",
"360 102 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 104 values pushed */
20 6 5 3 1 0 44 1 9 8 36 1 7 9 22 1 5 4 4 74 0 0 1 0 131 0 8 2 9 2 8 9 126 12 3 2 1 0 2 8 1 2 102 11 1 9 13 10 2 7 4 9 7 101 6 1 4 5 5 4 87 6 1 4 4 5 94 0 5 4 5 78 23 23 0 0 43 42 23 41 23 41 40 39 38 37 35 34 32 30 29 28 27 25 0 18 0 17 17 34 25 14 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 629;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"103 -18 LINE",
"532 585 LINE",
"498 605 LINE",
"70 5 LINE"
);
},
{
closed = 1;
nodes = (
"97 466 LINE",
"155 461 OFFCURVE",
"200 434 OFFCURVE",
"200 404 QCURVE SMOOTH",
"200 378 OFFCURVE",
"170 345 OFFCURVE",
"144 345 QCURVE SMOOTH",
"129 345 OFFCURVE",
"107 355 OFFCURVE",
"107 367 QCURVE SMOOTH",
"107 372 OFFCURVE",
"111 383 OFFCURVE",
"111 388 QCURVE SMOOTH",
"111 401 OFFCURVE",
"92 415 OFFCURVE",
"77 415 QCURVE SMOOTH",
"59 415 OFFCURVE",
"39 396 OFFCURVE",
"39 382 QCURVE SMOOTH",
"39 357 OFFCURVE",
"100 326 OFFCURVE",
"145 326 QCURVE SMOOTH",
"201 326 OFFCURVE",
"274 372 OFFCURVE",
"274 408 QCURVE SMOOTH",
"274 441 OFFCURVE",
"214 475 OFFCURVE",
"159 476 QCURVE",
"159 479 LINE",
"202 484 OFFCURVE",
"257 520 OFFCURVE",
"257 548 QCURVE SMOOTH",
"257 577 OFFCURVE",
"197 607 OFFCURVE",
"152 607 QCURVE SMOOTH",
"109 607 OFFCURVE",
"46 578 OFFCURVE",
"46 552 QCURVE SMOOTH",
"46 539 OFFCURVE",
"65 519 OFFCURVE",
"83 519 QCURVE SMOOTH",
"97 519 OFFCURVE",
"118 532 OFFCURVE",
"118 545 QCURVE SMOOTH",
"118 550 OFFCURVE",
"114 563 OFFCURVE",
"114 567 QCURVE SMOOTH",
"114 577 OFFCURVE",
"132 589 OFFCURVE",
"145 589 QCURVE SMOOTH",
"163 589 OFFCURVE",
"182 567 OFFCURVE",
"182 550 QCURVE SMOOTH",
"182 518 OFFCURVE",
"131 482 OFFCURVE",
"97 482 QCURVE"
);
},
{
closed = 1;
nodes = (
"508 65 LINE",
"508 102 LINE",
"472 102 LINE",
"472 274 LINE",
"439 274 LINE",
"276 98 LINE",
"276 65 LINE",
"403 65 LINE",
"403 30 LINE SMOOTH",
"403 21 OFFCURVE",
"394 21 QCURVE SMOOTH",
"361 21 LINE",
"361 0 LINE",
"501 0 LINE",
"501 21 LINE",
"481 21 LINE SMOOTH",
"472 21 OFFCURVE",
"472 30 QCURVE SMOOTH",
"472 65 LINE"
);
},
{
closed = 1;
nodes = (
"403 198 LINE",
"403 102 LINE",
"313 102 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 133 values pushed */
57 33 2 5 4 51 23 2 1 3 11 1 2 1 81 1 12 11 73 1 10 12 59 1 8 7 6 74 0 5 4 3 4 5 3 126 0 3 1 4 3 1 124 0 1 2 4 1 2 124 0 11 0 12 0 11 12 126 0 6 0 4 5 6 4 103 0 2 0 0 11 2 0 104 14 1 12 15 13 2 10 7 12 10 101 9 1 7 8 8 7 87 9 1 7 7 8 94 0 8 7 8 78 60 60 80 79 60 78 60 78 77 76 75 74 72 71 69 67 66 65 64 62 36 39 36 22 39 36 33 16 7 27 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 569;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"140 -21 LINE",
"569 581 LINE",
"527 609 LINE",
"100 10 LINE"
);
},
{
closed = 1;
nodes = (
"95 459 LINE",
"159 459 OFFCURVE",
"202 433 OFFCURVE",
"202 404 QCURVE SMOOTH",
"202 378 OFFCURVE",
"179 349 OFFCURVE",
"160 349 QCURVE SMOOTH",
"148 349 OFFCURVE",
"129 357 OFFCURVE",
"129 368 QCURVE SMOOTH",
"129 373 OFFCURVE",
"132 383 OFFCURVE",
"132 388 QCURVE SMOOTH",
"132 404 OFFCURVE",
"103 426 OFFCURVE",
"81 426 QCURVE SMOOTH",
"58 426 OFFCURVE",
"30 402 OFFCURVE",
"30 384 QCURVE SMOOTH",
"30 355 OFFCURVE",
"95 326 OFFCURVE",
"152 326 QCURVE SMOOTH",
"220 326 OFFCURVE",
"305 371 OFFCURVE",
"305 409 QCURVE SMOOTH",
"305 441 OFFCURVE",
"243 473 OFFCURVE",
"187 473 QCURVE",
"187 476 LINE",
"232 481 OFFCURVE",
"288 516 OFFCURVE",
"288 544 QCURVE SMOOTH",
"288 576 OFFCURVE",
"216 607 OFFCURVE",
"162 607 QCURVE SMOOTH",
"107 607 OFFCURVE",
"35 576 OFFCURVE",
"35 548 QCURVE SMOOTH",
"35 531 OFFCURVE",
"61 507 OFFCURVE",
"86 507 QCURVE SMOOTH",
"108 507 OFFCURVE",
"137 526 OFFCURVE",
"137 544 QCURVE SMOOTH",
"137 550 OFFCURVE",
"134 563 OFFCURVE",
"134 567 QCURVE SMOOTH",
"134 575 OFFCURVE",
"148 585 OFFCURVE",
"158 585 QCURVE SMOOTH",
"171 585 OFFCURVE",
"186 566 OFFCURVE",
"186 549 QCURVE SMOOTH",
"186 512 OFFCURVE",
"142 480 OFFCURVE",
"95 480 QCURVE"
);
},
{
closed = 1;
nodes = (
"567 61 LINE",
"567 102 LINE",
"530 102 LINE",
"530 274 LINE",
"472 274 LINE",
"296 98 LINE",
"296 61 LINE",
"424 61 LINE",
"424 35 LINE SMOOTH",
"424 26 OFFCURVE",
"414 26 QCURVE SMOOTH",
"378 26 LINE",
"378 0 LINE",
"558 0 LINE",
"558 26 LINE",
"540 26 LINE SMOOTH",
"530 26 OFFCURVE",
"530 35 QCURVE SMOOTH",
"530 61 LINE"
);
},
{
closed = 1;
nodes = (
"424 184 LINE",
"424 102 LINE",
"340 102 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 22 values pushed */
1 1 6 5 15 1 2 1 82 1 9 15 77 1 10 9 3 1 12 11 5 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 76 values pushed */
0 6 5 4 5 6 4 126 0 1 3 2 2 1 112 0 15 0 9 0 15 9 126 0 7 0 5 6 7 5 103 8 1 4 0 3 1 4 3 103 0 2 0 0 15 2 0 104 16 1 9 14 1 10 11 9 10 101 13 1 11 12 12 11 87 13 1 11 11 12 94 0 12 11 12 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 83 values pushed */
0 6 5 4 5 6 4 126 0 8 4 3 4 8 3 126 0 1 3 2 2 1 112 0 15 0 9 0 15 9 126 0 7 0 5 6 7 5 103 0 4 0 3 1 4 3 103 0 2 0 0 15 2 0 104 16 1 9 14 1 10 11 9 10 101 13 1 11 12 12 11 87 13 1 11 11 12 94 0 12 11 12 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 84 values pushed */
0 6 5 4 5 6 4 126 0 8 4 3 4 8 3 126 0 1 3 2 3 1 2 126 0 15 0 9 0 15 9 126 0 7 0 5 6 7 5 103 0 4 0 3 1 4 3 103 0 2 0 0 15 2 0 104 16 1 9 14 1 10 11 9 10 101 13 1 11 12 12 11 87 13 1 11 11 12 94 0 12 11 12 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 28 values pushed */
81 80 79 78 76 75 73 71 70 69 68 66 64 63 62 61 37 36 39 36 17 21 39 36 37 17 7 29 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 611;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = period;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"60 21 OFFCURVE",
"97 -10 OFFCURVE",
"125 -10 QCURVE SMOOTH",
"153 -10 OFFCURVE",
"190 21 OFFCURVE",
"190 47 QCURVE SMOOTH",
"190 73 OFFCURVE",
"153 105 OFFCURVE",
"125 105 QCURVE SMOOTH",
"97 105 OFFCURVE",
"60 73 OFFCURVE",
"60 47 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 0 1 95 0 1 1 26 1 76 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"45 30 OFFCURVE",
"96 -10 OFFCURVE",
"137 -10 QCURVE SMOOTH",
"178 -10 OFFCURVE",
"230 30 OFFCURVE",
"230 65 QCURVE SMOOTH",
"230 99 OFFCURVE",
"178 140 OFFCURVE",
"137 140 QCURVE SMOOTH",
"97 140 OFFCURVE",
"45 99 OFFCURVE",
"45 65 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 0 1 95 0 1 1 26 1 76 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 275;
}
);
leftKerningGroup = period;
note = period;
unicode = 002E;
},
{
glyphname = comma;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"79 -160 LINE",
"121 -131 OFFCURVE",
"189 -42 OFFCURVE",
"189 8 QCURVE SMOOTH",
"189 48 OFFCURVE",
"154 91 OFFCURVE",
"119 91 QCURVE SMOOTH",
"96 91 OFFCURVE",
"61 59 OFFCURVE",
"61 38 QCURVE SMOOTH",
"61 21 OFFCURVE",
"75 -5 OFFCURVE",
"93 -5 QCURVE SMOOTH",
"129 -5 OFFCURVE",
"129 -34 QCURVE SMOOTH",
"129 -57 OFFCURVE",
"86 -125 OFFCURVE",
"60 -149 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
17 16 2 0 71 0 1 1 0 95 0 0 0 18 0 76 36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"95 -160 LINE",
"151 -132 OFFCURVE",
"230 -36 OFFCURVE",
"230 22 QCURVE SMOOTH",
"230 66 OFFCURVE",
"174 127 OFFCURVE",
"126 127 QCURVE SMOOTH",
"89 127 OFFCURVE",
"47 83 OFFCURVE",
"47 52 QCURVE SMOOTH",
"47 24 OFFCURVE",
"75 -7 OFFCURVE",
"103 -7 QCURVE SMOOTH",
"140 -7 OFFCURVE",
"140 -37 QCURVE SMOOTH",
"140 -65 OFFCURVE",
"101 -123 OFFCURVE",
"75 -139 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
17 16 2 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 0 95 0 0 0 18 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 0 95 0 0 0 26 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 276;
}
);
leftKerningGroup = comma;
note = comma;
unicode = 002C;
},
{
glyphname = colon;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"60 21 OFFCURVE",
"97 -10 OFFCURVE",
"125 -10 QCURVE SMOOTH",
"153 -10 OFFCURVE",
"190 21 OFFCURVE",
"190 47 QCURVE SMOOTH",
"190 73 OFFCURVE",
"153 105 OFFCURVE",
"125 105 QCURVE SMOOTH",
"97 105 OFFCURVE",
"60 73 OFFCURVE",
"60 47 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 319 OFFCURVE",
"97 288 OFFCURVE",
"125 288 QCURVE SMOOTH",
"153 288 OFFCURVE",
"190 319 OFFCURVE",
"190 345 QCURVE SMOOTH",
"190 371 OFFCURVE",
"153 403 OFFCURVE",
"125 403 QCURVE SMOOTH",
"97 403 OFFCURVE",
"60 371 OFFCURVE",
"60 345 QCURVE SMOOTH"
);
}
);
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"45 30 OFFCURVE",
"96 -10 OFFCURVE",
"137 -10 QCURVE SMOOTH",
"178 -10 OFFCURVE",
"230 30 OFFCURVE",
"230 65 QCURVE SMOOTH",
"230 99 OFFCURVE",
"178 140 OFFCURVE",
"137 140 QCURVE SMOOTH",
"97 140 OFFCURVE",
"45 99 OFFCURVE",
"45 65 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 319 OFFCURVE",
"96 279 OFFCURVE",
"137 279 QCURVE SMOOTH",
"178 279 OFFCURVE",
"230 319 OFFCURVE",
"230 354 QCURVE SMOOTH",
"230 388 OFFCURVE",
"178 429 OFFCURVE",
"137 429 QCURVE SMOOTH",
"97 429 OFFCURVE",
"45 388 OFFCURVE",
"45 354 QCURVE SMOOTH"
);
}
);
width = 275;
}
);
leftKerningGroup = colon;
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"81 -160 LINE",
"123 -131 OFFCURVE",
"191 -42 OFFCURVE",
"191 8 QCURVE SMOOTH",
"191 48 OFFCURVE",
"156 91 OFFCURVE",
"121 91 QCURVE SMOOTH",
"98 91 OFFCURVE",
"63 59 OFFCURVE",
"63 38 QCURVE SMOOTH",
"63 21 OFFCURVE",
"77 -5 OFFCURVE",
"95 -5 QCURVE SMOOTH",
"131 -5 OFFCURVE",
"131 -34 QCURVE SMOOTH",
"131 -57 OFFCURVE",
"88 -125 OFFCURVE",
"62 -149 QCURVE"
);
},
{
closed = 1;
nodes = (
"54 319 OFFCURVE",
"91 288 OFFCURVE",
"119 288 QCURVE SMOOTH",
"147 288 OFFCURVE",
"184 319 OFFCURVE",
"184 345 QCURVE SMOOTH",
"184 371 OFFCURVE",
"147 403 OFFCURVE",
"119 403 QCURVE SMOOTH",
"91 403 OFFCURVE",
"54 371 OFFCURVE",
"54 345 QCURVE SMOOTH"
);
}
);
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"97 -160 LINE",
"153 -132 OFFCURVE",
"232 -36 OFFCURVE",
"232 22 QCURVE SMOOTH",
"232 66 OFFCURVE",
"176 127 OFFCURVE",
"128 127 QCURVE SMOOTH",
"91 127 OFFCURVE",
"49 83 OFFCURVE",
"49 52 QCURVE SMOOTH",
"49 24 OFFCURVE",
"77 -7 OFFCURVE",
"105 -7 QCURVE SMOOTH",
"142 -7 OFFCURVE",
"142 -37 QCURVE SMOOTH",
"142 -65 OFFCURVE",
"103 -123 OFFCURVE",
"77 -139 QCURVE"
);
},
{
closed = 1;
nodes = (
"39 319 OFFCURVE",
"90 279 OFFCURVE",
"131 279 QCURVE SMOOTH",
"172 279 OFFCURVE",
"224 319 OFFCURVE",
"224 354 QCURVE SMOOTH",
"224 388 OFFCURVE",
"172 429 OFFCURVE",
"131 429 QCURVE SMOOTH",
"91 429 OFFCURVE",
"39 388 OFFCURVE",
"39 354 QCURVE SMOOTH"
);
}
);
width = 276;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"60 21 OFFCURVE",
"97 -10 OFFCURVE",
"125 -10 QCURVE SMOOTH",
"153 -10 OFFCURVE",
"190 21 OFFCURVE",
"190 47 QCURVE SMOOTH",
"190 73 OFFCURVE",
"153 105 OFFCURVE",
"125 105 QCURVE SMOOTH",
"97 105 OFFCURVE",
"60 73 OFFCURVE",
"60 47 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 21 OFFCURVE",
"317 -10 OFFCURVE",
"345 -10 QCURVE SMOOTH",
"373 -10 OFFCURVE",
"410 21 OFFCURVE",
"410 47 QCURVE SMOOTH",
"410 73 OFFCURVE",
"373 105 OFFCURVE",
"345 105 QCURVE SMOOTH",
"317 105 OFFCURVE",
"280 73 OFFCURVE",
"280 47 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"500 21 OFFCURVE",
"537 -10 OFFCURVE",
"565 -10 QCURVE SMOOTH",
"593 -10 OFFCURVE",
"630 21 OFFCURVE",
"630 47 QCURVE SMOOTH",
"630 73 OFFCURVE",
"593 105 OFFCURVE",
"565 105 QCURVE SMOOTH",
"537 105 OFFCURVE",
"500 73 OFFCURVE",
"500 47 QCURVE SMOOTH"
);
}
);
width = 690;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"45 30 OFFCURVE",
"96 -10 OFFCURVE",
"137 -10 QCURVE SMOOTH",
"178 -10 OFFCURVE",
"230 30 OFFCURVE",
"230 65 QCURVE SMOOTH",
"230 99 OFFCURVE",
"178 140 OFFCURVE",
"137 140 QCURVE SMOOTH",
"97 140 OFFCURVE",
"45 99 OFFCURVE",
"45 65 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 30 OFFCURVE",
"331 -10 OFFCURVE",
"372 -10 QCURVE SMOOTH",
"413 -10 OFFCURVE",
"465 30 OFFCURVE",
"465 65 QCURVE SMOOTH",
"465 99 OFFCURVE",
"413 140 OFFCURVE",
"372 140 QCURVE SMOOTH",
"332 140 OFFCURVE",
"280 99 OFFCURVE",
"280 65 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"515 30 OFFCURVE",
"566 -10 OFFCURVE",
"607 -10 QCURVE SMOOTH",
"648 -10 OFFCURVE",
"700 30 OFFCURVE",
"700 65 QCURVE SMOOTH",
"700 99 OFFCURVE",
"648 140 OFFCURVE",
"607 140 QCURVE SMOOTH",
"567 140 OFFCURVE",
"515 99 OFFCURVE",
"515 65 QCURVE SMOOTH"
);
}
);
width = 745;
}
);
leftKerningGroup = ellipsis;
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"128 637 OFFCURVE",
"100 607 OFFCURVE",
"100 583 QCURVE SMOOTH",
"100 561 OFFCURVE",
"106 520 QCURVE SMOOTH",
"126 380 LINE SMOOTH",
"135 324 OFFCURVE",
"143 253 OFFCURVE",
"143 217 QCURVE SMOOTH",
"143 201 OFFCURVE",
"155 201 QCURVE SMOOTH",
"166 201 OFFCURVE",
"166 217 QCURVE SMOOTH",
"166 253 OFFCURVE",
"174 324 OFFCURVE",
"183 380 QCURVE SMOOTH",
"203 520 LINE SMOOTH",
"209 561 OFFCURVE",
"209 583 QCURVE SMOOTH",
"209 607 OFFCURVE",
"181 637 OFFCURVE",
"154 637 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"128 105 OFFCURVE",
"90 72 OFFCURVE",
"90 48 QCURVE SMOOTH",
"90 24 OFFCURVE",
"129 -10 OFFCURVE",
"154 -10 QCURVE SMOOTH",
"180 -10 OFFCURVE",
"219 24 OFFCURVE",
"219 47 QCURVE SMOOTH",
"219 71 OFFCURVE",
"182 105 OFFCURVE",
"155 105 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
9 1 0 1 1 74 4 1 1 0 1 131 0 0 3 0 131 5 1 3 3 2 95 0 2 2 26 2 76 26 26 0 0 26 37 26 36 32 30 0 25 0 24 43 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 269;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"118 637 OFFCURVE",
"81 595 OFFCURVE",
"81 560 QCURVE SMOOTH",
"81 536 OFFCURVE",
"90 494 QCURVE SMOOTH",
"109 408 LINE SMOOTH",
"126 332 OFFCURVE",
"139 258 OFFCURVE",
"139 221 QCURVE SMOOTH",
"139 201 OFFCURVE",
"155 201 QCURVE SMOOTH",
"170 201 OFFCURVE",
"170 221 QCURVE SMOOTH",
"170 263 OFFCURVE",
"184 339 OFFCURVE",
"199 408 QCURVE SMOOTH",
"219 494 LINE SMOOTH",
"228 536 OFFCURVE",
"228 560 QCURVE SMOOTH",
"228 595 OFFCURVE",
"190 637 OFFCURVE",
"153 637 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 140 OFFCURVE",
"64 96 OFFCURVE",
"64 65 QCURVE SMOOTH",
"64 33 OFFCURVE",
"116 -10 OFFCURVE",
"155 -10 QCURVE SMOOTH",
"194 -10 OFFCURVE",
"247 33 OFFCURVE",
"247 65 QCURVE SMOOTH",
"247 96 OFFCURVE",
"194 140 OFFCURVE",
"155 140 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
4 1 1 0 1 131 0 0 3 0 131 5 1 3 3 2 95 0 2 2 26 2 76 24 24 0 0 24 35 24 34 30 28 0 23 0 22 41 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 286;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"89 445 OFFCURVE",
"50 411 OFFCURVE",
"50 387 QCURVE SMOOTH",
"50 363 OFFCURVE",
"88 330 OFFCURVE",
"115 330 QCURVE SMOOTH",
"142 330 OFFCURVE",
"179 364 OFFCURVE",
"179 388 QCURVE SMOOTH",
"179 411 OFFCURVE",
"140 445 OFFCURVE",
"114 445 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"103 234 OFFCURVE",
"103 218 QCURVE SMOOTH",
"103 152 OFFCURVE",
"89 12 OFFCURVE",
"77 -82 QCURVE SMOOTH",
"65 -168 OFFCURVE",
"65 -193 QCURVE SMOOTH",
"65 -216 OFFCURVE",
"91 -242 OFFCURVE",
"114 -242 QCURVE SMOOTH",
"138 -242 OFFCURVE",
"164 -216 OFFCURVE",
"164 -193 QCURVE SMOOTH",
"164 -166 OFFCURVE",
"152 -79 QCURVE SMOOTH",
"140 14 OFFCURVE",
"126 152 OFFCURVE",
"126 218 QCURVE SMOOTH",
"126 234 OFFCURVE",
"115 234 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
5 1 3 0 2 0 3 2 126 0 0 0 1 95 4 1 1 1 28 75 0 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
5 1 3 0 2 0 3 2 126 4 1 1 0 0 3 1 0 103 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
12 12 0 0 12 31 12 30 22 20 0 11 0 10 36 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 269;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"92 445 OFFCURVE",
"39 402 OFFCURVE",
"39 370 QCURVE SMOOTH",
"39 339 OFFCURVE",
"92 296 OFFCURVE",
"131 296 QCURVE SMOOTH",
"170 296 OFFCURVE",
"222 339 OFFCURVE",
"222 370 QCURVE SMOOTH",
"222 402 OFFCURVE",
"170 445 OFFCURVE",
"131 445 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 234 OFFCURVE",
"116 214 QCURVE SMOOTH",
"116 153 OFFCURVE",
"96 27 OFFCURVE",
"78 -51 QCURVE",
"59 -145 OFFCURVE",
"59 -166 QCURVE SMOOTH",
"59 -201 OFFCURVE",
"96 -242 OFFCURVE",
"133 -242 QCURVE SMOOTH",
"168 -242 OFFCURVE",
"203 -201 OFFCURVE",
"203 -166 QCURVE SMOOTH",
"203 -146 OFFCURVE",
"184 -55 QCURVE SMOOTH",
"167 24 OFFCURVE",
"146 152 OFFCURVE",
"146 214 QCURVE SMOOTH",
"146 234 OFFCURVE",
"131 234 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
50 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
5 1 3 0 2 0 3 2 126 0 0 0 1 95 4 1 1 1 28 75 0 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
5 1 3 0 2 0 3 2 126 4 1 1 0 0 3 1 0 103 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
12 12 0 0 12 33 12 32 23 21 0 11 0 10 36 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 286;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"229 238 LINE",
"205 251 OFFCURVE",
"182 289 OFFCURVE",
"182 310 QCURVE SMOOTH",
"182 341 OFFCURVE",
"224 391 OFFCURVE",
"268 427 QCURVE SMOOTH",
"315 464 OFFCURVE",
"364 523 OFFCURVE",
"364 561 QCURVE SMOOTH",
"364 612 OFFCURVE",
"271 670 OFFCURVE",
"193 670 QCURVE SMOOTH",
"123 670 OFFCURVE",
"20 625 OFFCURVE",
"20 585 QCURVE SMOOTH",
"20 566 OFFCURVE",
"43 538 OFFCURVE",
"67 538 QCURVE SMOOTH",
"82 538 OFFCURVE",
"103 551 OFFCURVE",
"103 566 QCURVE SMOOTH",
"103 573 OFFCURVE",
"94 595 OFFCURVE",
"94 601 QCURVE SMOOTH",
"94 621 OFFCURVE",
"143 643 OFFCURVE",
"177 643 QCURVE SMOOTH",
"224 643 OFFCURVE",
"273 602 OFFCURVE",
"273 573 QCURVE SMOOTH",
"273 544 OFFCURVE",
"230 486 OFFCURVE",
"188 444 QCURVE SMOOTH",
"147 402 OFFCURVE",
"109 352 OFFCURVE",
"109 327 QCURVE SMOOTH",
"109 304 OFFCURVE",
"145 258 OFFCURVE",
"196 224 OFFCURVE",
"217 219 QCURVE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"200 207 LINE",
"201 276 OFFCURVE",
"209 328 QCURVE SMOOTH",
"214 362 OFFCURVE",
"263 400 OFFCURVE",
"302 427 QCURVE SMOOTH",
"346 457 OFFCURVE",
"383 523 OFFCURVE",
"383 561 QCURVE SMOOTH",
"383 612 OFFCURVE",
"290 670 OFFCURVE",
"212 670 QCURVE SMOOTH",
"142 670 OFFCURVE",
"39 625 OFFCURVE",
"39 585 QCURVE SMOOTH",
"39 566 OFFCURVE",
"62 538 OFFCURVE",
"86 538 QCURVE SMOOTH",
"101 538 OFFCURVE",
"122 551 OFFCURVE",
"122 566 QCURVE SMOOTH",
"122 573 OFFCURVE",
"113 595 OFFCURVE",
"113 601 QCURVE SMOOTH",
"113 621 OFFCURVE",
"162 643 OFFCURVE",
"196 643 QCURVE SMOOTH",
"243 643 OFFCURVE",
"292 602 OFFCURVE",
"292 573 QCURVE SMOOTH",
"292 544 OFFCURVE",
"269 482 OFFCURVE",
"222 444 QCURVE SMOOTH",
"186 415 OFFCURVE",
"143 372 OFFCURVE",
"143 347 QCURVE SMOOTH",
"143 324 OFFCURVE",
"153 244 OFFCURVE",
"159 207 QCURVE"
);
},
{
closed = 1;
nodes = (
"207 -10 OFFCURVE",
"245 21 OFFCURVE",
"245 48 QCURVE SMOOTH",
"245 75 OFFCURVE",
"206 105 OFFCURVE",
"180 105 QCURVE SMOOTH",
"152 105 OFFCURVE",
"115 70 OFFCURVE",
"115 45 QCURVE SMOOTH",
"115 19 OFFCURVE",
"155 -10 OFFCURVE",
"181 -10 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
15 1 1 0 40 39 2 3 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 1 0 3 0 1 3 126 0 0 0 2 95 0 2 2 19 75 0 3 3 4 95 5 1 4 4 26 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 1 0 3 0 1 3 126 0 2 0 0 1 2 0 103 0 3 3 4 95 5 1 4 4 26 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
41 41 41 52 41 51 47 45 36 39 43 6 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 400;
},
{
annotations = (
{
position = "{789, 632}";
type = Arrow;
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"245 242 LINE",
"223 255 OFFCURVE",
"201 292 OFFCURVE",
"201 312 QCURVE SMOOTH",
"201 341 OFFCURVE",
"243 386 OFFCURVE",
"288 420 QCURVE SMOOTH",
"338 457 OFFCURVE",
"392 519 OFFCURVE",
"392 560 QCURVE SMOOTH",
"392 613 OFFCURVE",
"292 670 OFFCURVE",
"198 670 QCURVE SMOOTH",
"115 670 OFFCURVE",
"13 626 OFFCURVE",
"13 581 QCURVE SMOOTH",
"13 555 OFFCURVE",
"47 517 OFFCURVE",
"80 517 QCURVE SMOOTH",
"105 517 OFFCURVE",
"141 541 OFFCURVE",
"141 563 QCURVE SMOOTH",
"141 571 OFFCURVE",
"133 597 OFFCURVE",
"133 603 QCURVE SMOOTH",
"133 618 OFFCURVE",
"160 636 OFFCURVE",
"181 636 QCURVE SMOOTH",
"213 636 OFFCURVE",
"251 597 OFFCURVE",
"251 565 QCURVE SMOOTH",
"251 533 OFFCURVE",
"215 480 OFFCURVE",
"180 444 QCURVE SMOOTH",
"147 411 OFFCURVE",
"114 363 OFFCURVE",
"114 336 QCURVE SMOOTH",
"114 307 OFFCURVE",
"151 257 OFFCURVE",
"205 222 OFFCURVE",
"228 216 QCURVE"
);
},
{
closed = 1;
nodes = (
"233 -10 OFFCURVE",
"286 32 OFFCURVE",
"286 65 QCURVE SMOOTH",
"286 97 OFFCURVE",
"233 139 OFFCURVE",
"194 139 QCURVE SMOOTH",
"154 139 OFFCURVE",
"102 95 OFFCURVE",
"102 64 QCURVE SMOOTH",
"102 32 OFFCURVE",
"155 -10 OFFCURVE",
"194 -10 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"200 195 LINE",
"202 290 OFFCURVE",
"208 324 QCURVE SMOOTH",
"212 348 OFFCURVE",
"255 388 OFFCURVE",
"301 420 QCURVE SMOOTH",
"351 455 OFFCURVE",
"394 521 OFFCURVE",
"394 560 QCURVE SMOOTH",
"394 613 OFFCURVE",
"294 670 OFFCURVE",
"200 670 QCURVE SMOOTH",
"117 670 OFFCURVE",
"15 626 OFFCURVE",
"15 581 QCURVE SMOOTH",
"15 555 OFFCURVE",
"49 517 OFFCURVE",
"82 517 QCURVE SMOOTH",
"107 517 OFFCURVE",
"143 541 OFFCURVE",
"143 563 QCURVE SMOOTH",
"143 571 OFFCURVE",
"135 597 OFFCURVE",
"135 603 QCURVE SMOOTH",
"135 618 OFFCURVE",
"162 636 OFFCURVE",
"183 636 QCURVE SMOOTH",
"215 636 OFFCURVE",
"253 597 OFFCURVE",
"253 565 QCURVE SMOOTH",
"253 527 OFFCURVE",
"230 476 OFFCURVE",
"193 444 QCURVE SMOOTH",
"160 416 OFFCURVE",
"127 379 OFFCURVE",
"127 342 QCURVE SMOOTH",
"127 319 OFFCURVE",
"138 240 OFFCURVE",
"146 195 QCURVE"
);
},
{
closed = 1;
nodes = (
"214 -10 OFFCURVE",
"267 32 OFFCURVE",
"267 65 QCURVE SMOOTH",
"267 97 OFFCURVE",
"214 139 OFFCURVE",
"175 139 QCURVE SMOOTH",
"135 139 OFFCURVE",
"83 95 OFFCURVE",
"83 64 QCURVE SMOOTH",
"83 32 OFFCURVE",
"136 -10 OFFCURVE",
"175 -10 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
15 1 1 0 40 39 2 3 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 1 0 3 0 1 3 126 0 0 0 2 95 0 2 2 19 75 0 3 3 4 95 5 1 4 4 26 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 1 0 3 0 1 3 126 0 2 0 0 1 2 0 103 0 3 3 4 95 5 1 4 4 26 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
41 41 41 52 41 51 47 45 36 39 43 6 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 413;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"193 445 OFFCURVE",
"155 414 OFFCURVE",
"155 387 QCURVE SMOOTH",
"155 360 OFFCURVE",
"194 330 OFFCURVE",
"220 330 QCURVE SMOOTH",
"248 330 OFFCURVE",
"285 365 OFFCURVE",
"285 390 QCURVE SMOOTH",
"285 416 OFFCURVE",
"245 445 OFFCURVE",
"219 445 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171 197 LINE",
"195 184 OFFCURVE",
"218 146 OFFCURVE",
"218 125 QCURVE SMOOTH",
"218 94 OFFCURVE",
"176 44 OFFCURVE",
"132 8 QCURVE SMOOTH",
"85 -29 OFFCURVE",
"36 -88 OFFCURVE",
"36 -126 QCURVE SMOOTH",
"36 -177 OFFCURVE",
"129 -235 OFFCURVE",
"207 -235 QCURVE SMOOTH",
"277 -235 OFFCURVE",
"380 -190 OFFCURVE",
"380 -150 QCURVE SMOOTH",
"380 -131 OFFCURVE",
"357 -103 OFFCURVE",
"333 -103 QCURVE SMOOTH",
"318 -103 OFFCURVE",
"297 -116 OFFCURVE",
"297 -131 QCURVE SMOOTH",
"297 -138 OFFCURVE",
"306 -160 OFFCURVE",
"306 -166 QCURVE SMOOTH",
"306 -186 OFFCURVE",
"257 -208 OFFCURVE",
"223 -208 QCURVE SMOOTH",
"176 -208 OFFCURVE",
"127 -167 OFFCURVE",
"127 -138 QCURVE SMOOTH",
"127 -109 OFFCURVE",
"170 -51 OFFCURVE",
"212 -9 QCURVE SMOOTH",
"253 33 OFFCURVE",
"291 83 OFFCURVE",
"291 108 QCURVE SMOOTH",
"291 131 OFFCURVE",
"255 177 OFFCURVE",
"204 211 OFFCURVE",
"183 216 QCURVE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"200 228 LINE",
"199 159 OFFCURVE",
"191 107 QCURVE SMOOTH",
"186 73 OFFCURVE",
"137 35 OFFCURVE",
"98 8 QCURVE SMOOTH",
"54 -22 OFFCURVE",
"17 -88 OFFCURVE",
"17 -126 QCURVE SMOOTH",
"17 -177 OFFCURVE",
"110 -235 OFFCURVE",
"188 -235 QCURVE SMOOTH",
"258 -235 OFFCURVE",
"361 -190 OFFCURVE",
"361 -150 QCURVE SMOOTH",
"361 -131 OFFCURVE",
"338 -103 OFFCURVE",
"314 -103 QCURVE SMOOTH",
"299 -103 OFFCURVE",
"278 -116 OFFCURVE",
"278 -131 QCURVE SMOOTH",
"278 -138 OFFCURVE",
"287 -160 OFFCURVE",
"287 -166 QCURVE SMOOTH",
"287 -186 OFFCURVE",
"238 -208 OFFCURVE",
"204 -208 QCURVE SMOOTH",
"157 -208 OFFCURVE",
"108 -167 OFFCURVE",
"108 -138 QCURVE SMOOTH",
"108 -109 OFFCURVE",
"131 -47 OFFCURVE",
"178 -9 QCURVE SMOOTH",
"214 20 OFFCURVE",
"257 63 OFFCURVE",
"257 88 QCURVE SMOOTH",
"257 111 OFFCURVE",
"247 191 OFFCURVE",
"241 228 QCURVE"
);
},
{
closed = 1;
nodes = (
"193 445 OFFCURVE",
"155 414 OFFCURVE",
"155 387 QCURVE SMOOTH",
"155 360 OFFCURVE",
"194 330 OFFCURVE",
"220 330 QCURVE SMOOTH",
"248 330 OFFCURVE",
"285 365 OFFCURVE",
"285 390 QCURVE SMOOTH",
"285 416 OFFCURVE",
"245 445 OFFCURVE",
"219 445 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
52 51 2 3 0 27 1 2 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 3 0 2 0 3 2 126 0 0 0 1 95 5 1 1 1 28 75 0 2 2 4 95 0 4 4 22 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 3 0 2 0 3 2 126 5 1 1 0 0 3 1 0 103 0 2 2 4 95 0 4 4 22 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 40 38 34 32 25 23 0 11 0 10 36 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 400;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"180 445 OFFCURVE",
"127 403 OFFCURVE",
"127 370 QCURVE SMOOTH",
"127 338 OFFCURVE",
"180 296 OFFCURVE",
"219 296 QCURVE SMOOTH",
"259 296 OFFCURVE",
"311 340 OFFCURVE",
"311 371 QCURVE SMOOTH",
"311 403 OFFCURVE",
"258 445 OFFCURVE",
"219 445 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"168 193 LINE",
"190 180 OFFCURVE",
"212 143 OFFCURVE",
"212 123 QCURVE SMOOTH",
"212 94 OFFCURVE",
"170 49 OFFCURVE",
"125 15 QCURVE SMOOTH",
"75 -22 OFFCURVE",
"21 -84 OFFCURVE",
"21 -125 QCURVE SMOOTH",
"21 -178 OFFCURVE",
"121 -235 OFFCURVE",
"215 -235 QCURVE SMOOTH",
"298 -235 OFFCURVE",
"400 -191 OFFCURVE",
"400 -146 QCURVE SMOOTH",
"400 -120 OFFCURVE",
"366 -82 OFFCURVE",
"333 -82 QCURVE SMOOTH",
"308 -82 OFFCURVE",
"272 -106 OFFCURVE",
"272 -128 QCURVE SMOOTH",
"272 -136 OFFCURVE",
"280 -162 OFFCURVE",
"280 -168 QCURVE SMOOTH",
"280 -183 OFFCURVE",
"253 -201 OFFCURVE",
"232 -201 QCURVE SMOOTH",
"200 -201 OFFCURVE",
"162 -162 OFFCURVE",
"162 -130 QCURVE SMOOTH",
"162 -98 OFFCURVE",
"198 -45 OFFCURVE",
"233 -9 QCURVE SMOOTH",
"266 24 OFFCURVE",
"299 72 OFFCURVE",
"299 99 QCURVE SMOOTH",
"299 128 OFFCURVE",
"262 178 OFFCURVE",
"208 213 OFFCURVE",
"185 219 QCURVE"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"211 240 LINE",
"209 145 OFFCURVE",
"203 111 QCURVE SMOOTH",
"199 87 OFFCURVE",
"156 47 OFFCURVE",
"110 15 QCURVE SMOOTH",
"60 -20 OFFCURVE",
"17 -86 OFFCURVE",
"17 -125 QCURVE SMOOTH",
"17 -178 OFFCURVE",
"117 -235 OFFCURVE",
"211 -235 QCURVE SMOOTH",
"294 -235 OFFCURVE",
"396 -191 OFFCURVE",
"396 -146 QCURVE SMOOTH",
"396 -120 OFFCURVE",
"362 -82 OFFCURVE",
"329 -82 QCURVE SMOOTH",
"304 -82 OFFCURVE",
"268 -106 OFFCURVE",
"268 -128 QCURVE SMOOTH",
"268 -136 OFFCURVE",
"276 -162 OFFCURVE",
"276 -168 QCURVE SMOOTH",
"276 -183 OFFCURVE",
"249 -201 OFFCURVE",
"228 -201 QCURVE SMOOTH",
"196 -201 OFFCURVE",
"158 -162 OFFCURVE",
"158 -130 QCURVE SMOOTH",
"158 -92 OFFCURVE",
"181 -41 OFFCURVE",
"218 -9 QCURVE SMOOTH",
"251 19 OFFCURVE",
"284 56 OFFCURVE",
"284 93 QCURVE SMOOTH",
"284 116 OFFCURVE",
"273 195 OFFCURVE",
"265 240 QCURVE"
);
},
{
closed = 1;
nodes = (
"197 445 OFFCURVE",
"144 403 OFFCURVE",
"144 370 QCURVE SMOOTH",
"144 338 OFFCURVE",
"197 296 OFFCURVE",
"236 296 QCURVE SMOOTH",
"276 296 OFFCURVE",
"328 340 OFFCURVE",
"328 371 QCURVE SMOOTH",
"328 403 OFFCURVE",
"275 445 OFFCURVE",
"236 445 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
52 51 2 3 0 27 1 2 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
50 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 3 0 2 0 3 2 126 0 0 0 1 95 5 1 1 1 28 75 0 2 2 4 95 0 4 4 22 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 3 0 2 0 3 2 126 5 1 1 0 0 3 1 0 103 0 2 2 4 95 0 4 4 22 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 40 38 34 32 25 23 0 11 0 10 36 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 413;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"60 158 OFFCURVE",
"97 127 OFFCURVE",
"125 127 QCURVE SMOOTH",
"153 127 OFFCURVE",
"190 158 OFFCURVE",
"190 184 QCURVE SMOOTH",
"190 210 OFFCURVE",
"153 242 OFFCURVE",
"125 242 QCURVE SMOOTH",
"97 242 OFFCURVE",
"60 210 OFFCURVE",
"60 184 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"45 159 OFFCURVE",
"96 119 OFFCURVE",
"137 119 QCURVE SMOOTH",
"178 119 OFFCURVE",
"230 159 OFFCURVE",
"230 194 QCURVE SMOOTH",
"230 228 OFFCURVE",
"178 269 OFFCURVE",
"137 269 QCURVE SMOOTH",
"97 269 OFFCURVE",
"45 228 OFFCURVE",
"45 194 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 275;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"105 196 OFFCURVE",
"177 131 OFFCURVE",
"234 131 QCURVE SMOOTH",
"288 131 OFFCURVE",
"362 196 OFFCURVE",
"362 247 QCURVE SMOOTH",
"362 298 OFFCURVE",
"289 363 OFFCURVE",
"234 363 QCURVE SMOOTH",
"179 363 OFFCURVE",
"105 298 OFFCURVE",
"105 247 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 469;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"83 189 OFFCURVE",
"167 116 OFFCURVE",
"234 116 QCURVE SMOOTH",
"299 116 OFFCURVE",
"385 189 OFFCURVE",
"385 247 QCURVE SMOOTH",
"385 305 OFFCURVE",
"299 378 OFFCURVE",
"234 378 QCURVE SMOOTH",
"169 378 OFFCURVE",
"83 305 OFFCURVE",
"83 247 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 468;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"274 530 OFFCURVE",
"262 514 OFFCURVE",
"248 506 OFFCURVE",
"230 506 QCURVE SMOOTH",
"215 506 OFFCURVE",
"203 511 QCURVE",
"205 526 OFFCURVE",
"212 538 QCURVE SMOOTH",
"222 555 OFFCURVE",
"236 562 OFFCURVE",
"255 564 OFFCURVE",
"260 573 QCURVE",
"267 587 OFFCURVE",
"267 594 QCURVE SMOOTH",
"267 608 OFFCURVE",
"243 621 QCURVE",
"228 630 OFFCURVE",
"218 630 QCURVE SMOOTH",
"206 630 OFFCURVE",
"194 611 QCURVE",
"191 605 OFFCURVE",
"191 601 QCURVE SMOOTH",
"191 598 OFFCURVE",
"196 584 OFFCURVE",
"196 579 QCURVE SMOOTH",
"196 569 OFFCURVE",
"187 552 QCURVE SMOOTH",
"182 542 OFFCURVE",
"169 531 QCURVE",
"156 542 OFFCURVE",
"151 552 QCURVE",
"141 569 OFFCURVE",
"141 579 QCURVE SMOOTH",
"141 584 OFFCURVE",
"147 598 OFFCURVE",
"147 601 QCURVE SMOOTH",
"147 605 OFFCURVE",
"144 611 QCURVE",
"132 630 OFFCURVE",
"120 630 QCURVE SMOOTH",
"110 630 OFFCURVE",
"95 621 QCURVE",
"71 608 OFFCURVE",
"71 594 QCURVE SMOOTH",
"71 587 OFFCURVE",
"78 573 QCURVE",
"83 564 OFFCURVE",
"103 562 OFFCURVE",
"117 553 OFFCURVE",
"126 538 QCURVE SMOOTH",
"135 524 OFFCURVE",
"136 512 QCURVE",
"122 506 OFFCURVE",
"108 506 QCURVE SMOOTH",
"88 506 OFFCURVE",
"75 515 OFFCURVE",
"64 530 OFFCURVE",
"53 530 QCURVE SMOOTH",
"20 531 OFFCURVE",
"20 492 QCURVE SMOOTH",
"20 470 OFFCURVE",
"34 454 OFFCURVE",
"53 454 QCURVE SMOOTH",
"64 454 OFFCURVE",
"76 470 OFFCURVE",
"90 478 OFFCURVE",
"108 478 QCURVE SMOOTH",
"123 478 OFFCURVE",
"135 473 QCURVE",
"133 458 OFFCURVE",
"126 446 QCURVE SMOOTH",
"116 429 OFFCURVE",
"102 422 OFFCURVE",
"83 420 OFFCURVE",
"78 411 QCURVE",
"71 397 OFFCURVE",
"71 390 QCURVE SMOOTH",
"71 376 OFFCURVE",
"95 363 QCURVE",
"110 354 OFFCURVE",
"120 354 QCURVE SMOOTH",
"132 354 OFFCURVE",
"144 373 QCURVE",
"147 379 OFFCURVE",
"147 383 QCURVE SMOOTH",
"147 386 OFFCURVE",
"142 400 OFFCURVE",
"142 405 QCURVE SMOOTH",
"142 415 OFFCURVE",
"151 432 QCURVE SMOOTH",
"156 442 OFFCURVE",
"169 453 QCURVE",
"182 442 OFFCURVE",
"187 432 QCURVE",
"197 415 OFFCURVE",
"197 405 QCURVE SMOOTH",
"197 400 OFFCURVE",
"191 386 OFFCURVE",
"191 383 QCURVE SMOOTH",
"191 379 OFFCURVE",
"194 373 QCURVE",
"206 354 OFFCURVE",
"218 354 QCURVE SMOOTH",
"227 354 OFFCURVE",
"244 363 QCURVE SMOOTH",
"267 376 OFFCURVE",
"267 390 QCURVE SMOOTH",
"267 397 OFFCURVE",
"260 411 QCURVE",
"255 420 OFFCURVE",
"235 422 OFFCURVE",
"221 431 OFFCURVE",
"212 446 QCURVE SMOOTH",
"203 460 OFFCURVE",
"202 472 QCURVE",
"216 478 OFFCURVE",
"230 478 QCURVE SMOOTH",
"250 478 OFFCURVE",
"263 469 OFFCURVE",
"274 454 OFFCURVE",
"285 454 QCURVE SMOOTH",
"304 454 OFFCURVE",
"318 470 OFFCURVE",
"318 492 QCURVE SMOOTH",
"318 514 OFFCURVE",
"304 530 OFFCURVE",
"285 530 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
113 102 98 3 6 8 121 75 2 7 6 57 11 2 0 1 49 38 34 3 2 0 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
3 1 2 0 1 2 111 10 1 7 4 1 1 0 7 1 104 12 11 2 6 5 1 0 2 6 0 103 9 1 8 8 25 8 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
3 1 2 0 2 132 10 1 7 4 1 1 0 7 1 104 12 11 2 6 5 1 0 2 6 0 103 9 1 8 8 25 8 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
9 1 8 6 8 131 3 1 2 0 2 132 12 11 2 6 7 0 6 87 10 1 7 4 1 1 0 7 1 104 12 11 2 6 6 0 95 5 1 0 6 0 79 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 28 values pushed */
0 0 0 127 0 126 124 122 110 108 88 86 74 72 70 68 64 62 60 58 46 44 44 34 36 13 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 338;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"277 538 OFFCURVE",
"264 530 OFFCURVE",
"243 508 OFFCURVE",
"225 508 QCURVE SMOOTH",
"215 508 OFFCURVE",
"208 513 QCURVE",
"204 524 OFFCURVE",
"211 533 QCURVE",
"217 543 OFFCURVE",
"230 551 OFFCURVE",
"262 560 OFFCURVE",
"267 569 QCURVE",
"272 579 OFFCURVE",
"272 587 QCURVE SMOOTH",
"272 606 OFFCURVE",
"243 621 QCURVE",
"222 633 OFFCURVE",
"211 633 QCURVE SMOOTH",
"198 633 OFFCURVE",
"187 616 QCURVE",
"183 609 OFFCURVE",
"183 602 QCURVE SMOOTH",
"183 597 OFFCURVE",
"189 575 OFFCURVE",
"189 569 QCURVE SMOOTH",
"188 558 OFFCURVE",
"183 548 QCURVE SMOOTH",
"178 538 OFFCURVE",
"169 536 QCURVE",
"161 538 OFFCURVE",
"155 548 QCURVE SMOOTH",
"149 558 OFFCURVE",
"149 568 QCURVE SMOOTH",
"149 575 OFFCURVE",
"155 597 OFFCURVE",
"155 602 QCURVE SMOOTH",
"155 609 OFFCURVE",
"151 616 QCURVE",
"141 632 OFFCURVE",
"126 632 QCURVE SMOOTH",
"112 632 OFFCURVE",
"95 621 QCURVE",
"65 605 OFFCURVE",
"65 588 QCURVE SMOOTH",
"65 581 OFFCURVE",
"71 569 QCURVE",
"75 562 OFFCURVE",
"99 557 OFFCURVE",
"122 543 OFFCURVE",
"128 533 QCURVE",
"132 525 OFFCURVE",
"131 513 QCURVE",
"124 508 OFFCURVE",
"113 508 QCURVE SMOOTH",
"101 508 OFFCURVE",
"72 531 OFFCURVE",
"62 538 OFFCURVE",
"53 538 QCURVE SMOOTH",
"20 538 OFFCURVE",
"20 492 QCURVE SMOOTH",
"20 467 OFFCURVE",
"35 446 OFFCURVE",
"53 446 QCURVE SMOOTH",
"62 446 OFFCURVE",
"72 453 OFFCURVE",
"95 477 OFFCURVE",
"113 477 QCURVE SMOOTH",
"122 477 OFFCURVE",
"130 471 QCURVE",
"131 457 OFFCURVE",
"128 451 QCURVE",
"122 441 OFFCURVE",
"109 433 OFFCURVE",
"80 430 OFFCURVE",
"71 415 QCURVE",
"66 405 OFFCURVE",
"66 398 QCURVE SMOOTH",
"66 378 OFFCURVE",
"95 363 QCURVE SMOOTH",
"119 351 OFFCURVE",
"127 351 QCURVE SMOOTH",
"141 351 OFFCURVE",
"151 369 QCURVE SMOOTH",
"155 376 OFFCURVE",
"155 383 QCURVE SMOOTH",
"155 388 OFFCURVE",
"149 410 OFFCURVE",
"149 416 QCURVE SMOOTH",
"149 426 OFFCURVE",
"155 436 QCURVE",
"159 446 OFFCURVE",
"169 448 QCURVE",
"179 446 OFFCURVE",
"183 436 QCURVE",
"189 426 OFFCURVE",
"189 415 QCURVE SMOOTH",
"189 409 OFFCURVE",
"184 387 OFFCURVE",
"184 382 QCURVE SMOOTH",
"184 375 OFFCURVE",
"187 369 QCURVE",
"197 353 OFFCURVE",
"212 353 QCURVE SMOOTH",
"225 353 OFFCURVE",
"244 363 QCURVE SMOOTH",
"273 379 OFFCURVE",
"273 396 QCURVE SMOOTH",
"273 405 OFFCURVE",
"267 415 QCURVE SMOOTH",
"262 424 OFFCURVE",
"230 433 OFFCURVE",
"217 441 OFFCURVE",
"211 451 QCURVE",
"206 461 OFFCURVE",
"207 471 QCURVE",
"215 477 OFFCURVE",
"225 477 QCURVE SMOOTH",
"237 477 OFFCURVE",
"252 468 OFFCURVE",
"270 446 OFFCURVE",
"285 446 QCURVE SMOOTH",
"301 446 OFFCURVE",
"318 467 OFFCURVE",
"318 492 QCURVE SMOOTH",
"318 517 OFFCURVE",
"303 538 OFFCURVE",
"285 538 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
129 118 2 6 8 114 1 7 6 39 1 0 1 54 43 2 2 0 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
9 1 8 6 7 8 110 3 1 2 0 1 2 111 12 11 2 6 7 0 6 87 10 1 7 4 1 1 0 7 1 104 12 11 2 6 6 0 95 5 1 0 6 0 79 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
9 1 8 6 8 131 3 1 2 0 2 132 12 11 2 6 7 0 6 87 10 1 7 4 1 1 0 7 1 104 12 11 2 6 6 0 95 5 1 0 6 0 79 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 28 values pushed */
0 0 0 147 0 146 142 140 126 124 104 102 86 84 80 78 75 73 69 67 50 49 47 37 20 13 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 338;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"117 194 LINE",
"56 -9 LINE",
"96 -9 LINE",
"157 194 LINE",
"271 194 LINE",
"210 -9 LINE",
"250 -9 LINE",
"311 194 LINE",
"412 194 LINE",
"424 234 LINE",
"323 234 LINE",
"374 405 LINE",
"476 405 LINE",
"487 445 LINE",
"386 445 LINE",
"444 639 LINE",
"404 639 LINE",
"345 445 LINE",
"231 445 LINE",
"290 639 LINE",
"250 639 LINE",
"191 445 LINE",
"91 445 LINE",
"80 405 LINE",
"180 405 LINE",
"128 234 LINE",
"29 234 LINE",
"18 194 LINE"
);
},
{
closed = 1;
nodes = (
"220 405 LINE",
"334 405 LINE",
"283 234 LINE",
"168 234 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
5 1 3 2 3 131 14 8 2 0 16 13 11 3 9 10 0 9 101 15 7 2 1 1 2 93 6 4 2 2 2 20 75 12 1 10 10 18 10 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
5 1 3 2 3 131 6 4 2 2 15 7 2 1 0 2 1 102 14 8 2 0 16 13 11 3 9 10 0 9 101 12 1 10 10 18 10 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 505;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"112 191 LINE",
"52 -9 LINE",
"100 -9 LINE",
"159 191 LINE",
"266 191 LINE",
"206 -9 LINE",
"254 -9 LINE",
"313 191 LINE",
"411 191 LINE",
"425 238 LINE",
"328 238 LINE",
"376 402 LINE",
"475 402 LINE",
"488 449 LINE",
"391 449 LINE",
"448 639 LINE",
"400 639 LINE",
"342 449 LINE",
"236 449 LINE",
"294 639 LINE",
"246 639 LINE",
"188 449 LINE",
"92 449 LINE",
"79 402 LINE",
"175 402 LINE",
"125 238 LINE",
"30 238 LINE",
"17 191 LINE"
);
},
{
closed = 1;
nodes = (
"222 402 LINE",
"329 402 LINE",
"280 238 LINE",
"173 238 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
5 1 3 2 3 131 14 8 2 0 16 13 11 3 9 10 0 9 101 15 7 2 1 1 2 93 6 4 2 2 2 20 75 12 1 10 10 18 10 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
5 1 3 2 3 131 6 4 2 2 15 7 2 1 0 2 1 102 14 8 2 0 16 13 11 3 9 10 0 9 101 12 1 10 10 18 10 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 504;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"34 -5 LINE",
"252 626 LINE",
"214 635 LINE",
"-5 6 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 247;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"42 -7 LINE",
"260 625 LINE",
"214 635 LINE",
"-5 6 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 255;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"210 -5 LINE",
"250 6 LINE",
"31 635 LINE",
"-8 626 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 248;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"210 -5 LINE",
"259 8 LINE",
"40 637 LINE",
"-8 626 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
3 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 257;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = exclamdown.case;
layers = (
{
components = (
{
name = exclamdown;
transform = "{1, 0, 0, 1, 0, 230}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 269;
},
{
components = (
{
name = exclamdown;
transform = "{1, 0, 0, 1, 0, 231}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 286;
}
);
},
{
glyphname = questiondown.case;
layers = (
{
components = (
{
name = questiondown;
transform = "{1, 0, 0, 1, 0, 227}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 400;
},
{
components = (
{
name = questiondown;
transform = "{1, 0, 0, 1, 0, 230}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 413;
}
);
},
{
glyphname = periodcentered.loclCAT.case;
layers = (
{
anchors = (
{
name = _center;
position = "{106, 312}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"290 308 OFFCURVE",
"327 277 OFFCURVE",
"355 277 QCURVE SMOOTH",
"383 277 OFFCURVE",
"420 308 OFFCURVE",
"420 334 QCURVE SMOOTH",
"420 360 OFFCURVE",
"383 392 OFFCURVE",
"355 392 QCURVE SMOOTH",
"327 392 OFFCURVE",
"290 360 OFFCURVE",
"290 334 QCURVE SMOOTH"
);
}
);
width = 514;
},
{
anchors = (
{
name = _center;
position = "{90, 313}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"255 309 OFFCURVE",
"306 269 OFFCURVE",
"347 269 QCURVE SMOOTH",
"388 269 OFFCURVE",
"440 309 OFFCURVE",
"440 344 QCURVE SMOOTH",
"440 378 OFFCURVE",
"388 419 OFFCURVE",
"347 419 QCURVE SMOOTH",
"307 419 OFFCURVE",
"255 378 OFFCURVE",
"255 344 QCURVE SMOOTH"
);
}
);
width = 514;
}
);
},
{
glyphname = periodcentered.loclCAT;
layers = (
{
anchors = (
{
name = _center;
position = "{38, 359}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"112 333 OFFCURVE",
"142 306 OFFCURVE",
"166 306 QCURVE SMOOTH",
"190 306 OFFCURVE",
"220 333 OFFCURVE",
"220 354 QCURVE SMOOTH",
"220 375 OFFCURVE",
"188 403 OFFCURVE",
"166 403 QCURVE SMOOTH",
"143 403 OFFCURVE",
"112 375 OFFCURVE",
"112 354 QCURVE SMOOTH"
);
}
);
width = 255;
},
{
anchors = (
{
name = _center;
position = "{30, 362}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"118 325 OFFCURVE",
"155 291 OFFCURVE",
"184 291 QCURVE SMOOTH",
"213 291 OFFCURVE",
"249 325 OFFCURVE",
"249 354 QCURVE SMOOTH",
"249 382 OFFCURVE",
"212 417 OFFCURVE",
"184 417 QCURVE SMOOTH",
"155 417 OFFCURVE",
"118 382 OFFCURVE",
"118 354 QCURVE SMOOTH"
);
}
);
width = 263;
}
);
},
{
glyphname = parenleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"18 -3 OFFCURVE",
"211 -231 QCURVE",
"254 -231 LINE",
"211 -176 OFFCURVE",
"112 67 OFFCURVE",
"112 240 QCURVE SMOOTH",
"112 400 OFFCURVE",
"211 656 OFFCURVE",
"254 711 QCURVE",
"211 711 LINE",
"18 483 OFFCURVE",
"18 240 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 1 0 131 0 1 1 22 1 76 24 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 254;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"18 -8 OFFCURVE",
"226 -231 QCURVE",
"277 -231 LINE",
"224 -144 OFFCURVE",
"165 101 OFFCURVE",
"165 240 QCURVE SMOOTH",
"165 380 OFFCURVE",
"224 624 OFFCURVE",
"277 711 QCURVE",
"226 711 LINE",
"18 481 OFFCURVE",
"18 240 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 19 75 0 1 1 22 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 131 0 1 1 22 1 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
22 19 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 277;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"236 483 OFFCURVE",
"43 711 QCURVE",
"0 711 LINE",
"43 656 OFFCURVE",
"142 413 OFFCURVE",
"142 240 QCURVE SMOOTH",
"142 80 OFFCURVE",
"43 -176 OFFCURVE",
"0 -231 QCURVE",
"43 -231 LINE",
"236 -3 OFFCURVE",
"236 240 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 1 0 1 131 0 0 0 22 0 76 24 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 254;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"259 488 OFFCURVE",
"51 711 QCURVE",
"0 711 LINE",
"53 624 OFFCURVE",
"112 379 OFFCURVE",
"112 240 QCURVE SMOOTH",
"112 100 OFFCURVE",
"53 -144 OFFCURVE",
"0 -231 QCURVE",
"51 -231 LINE",
"259 -1 OFFCURVE",
"259 240 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 19 75 0 0 0 22 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 131 0 0 0 22 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
22 19 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 277;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"30 257 LINE",
"63 250 OFFCURVE",
"91 236 OFFCURVE",
"102 207 OFFCURVE",
"102 176 QCURVE SMOOTH",
"102 -53 LINE SMOOTH",
"102 -90 OFFCURVE",
"118 -129 OFFCURVE",
"160 -146 OFFCURVE",
"201 -146 QCURVE SMOOTH",
"235 -146 LINE",
"235 -116 LINE",
"208 -116 LINE SMOOTH",
"169 -116 OFFCURVE",
"169 -60 QCURVE SMOOTH",
"169 176 LINE SMOOTH",
"169 207 OFFCURVE",
"152 240 OFFCURVE",
"113 258 OFFCURVE",
"73 267 QCURVE",
"112 274 OFFCURVE",
"152 292 OFFCURVE",
"169 327 OFFCURVE",
"169 358 QCURVE SMOOTH",
"169 589 LINE SMOOTH",
"169 645 OFFCURVE",
"208 645 QCURVE SMOOTH",
"235 645 LINE",
"235 675 LINE",
"201 675 LINE SMOOTH",
"162 675 OFFCURVE",
"120 658 OFFCURVE",
"102 619 OFFCURVE",
"102 582 QCURVE SMOOTH",
"102 358 LINE SMOOTH",
"102 319 OFFCURVE",
"70 283 OFFCURVE",
"30 277 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
37 18 0 3 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 19 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 44 33 39 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 280;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 253 LINE",
"53 246 OFFCURVE",
"72 232 OFFCURVE",
"80 205 OFFCURVE",
"80 176 QCURVE SMOOTH",
"80 -53 LINE SMOOTH",
"80 -90 OFFCURVE",
"100 -129 OFFCURVE",
"151 -146 OFFCURVE",
"201 -146 QCURVE SMOOTH",
"250 -146 LINE",
"250 -109 LINE",
"223 -109 LINE SMOOTH",
"192 -109 OFFCURVE",
"192 -60 QCURVE SMOOTH",
"192 176 LINE",
"191 207 OFFCURVE",
"172 240 OFFCURVE",
"127 258 OFFCURVE",
"81 267 QCURVE",
"127 274 OFFCURVE",
"173 292 OFFCURVE",
"192 327 OFFCURVE",
"192 358 QCURVE SMOOTH",
"192 589 LINE SMOOTH",
"192 638 OFFCURVE",
"223 638 QCURVE SMOOTH",
"250 638 LINE",
"250 675 LINE",
"201 675 LINE SMOOTH",
"153 675 OFFCURVE",
"101 658 OFFCURVE",
"80 619 OFFCURVE",
"80 582 QCURVE SMOOTH",
"80 358 LINE SMOOTH",
"80 321 OFFCURVE",
"58 287 OFFCURVE",
"30 281 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
38 18 0 3 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 19 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 45 33 39 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 280;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"260 277 LINE",
"220 283 OFFCURVE",
"188 319 OFFCURVE",
"188 358 QCURVE SMOOTH",
"188 582 LINE SMOOTH",
"188 619 OFFCURVE",
"170 658 OFFCURVE",
"128 675 OFFCURVE",
"89 675 QCURVE SMOOTH",
"55 675 LINE",
"55 645 LINE",
"82 645 LINE SMOOTH",
"121 645 OFFCURVE",
"121 589 QCURVE SMOOTH",
"121 358 LINE SMOOTH",
"121 327 OFFCURVE",
"138 292 OFFCURVE",
"178 274 OFFCURVE",
"217 267 QCURVE",
"177 258 OFFCURVE",
"138 240 OFFCURVE",
"121 207 OFFCURVE",
"121 176 QCURVE SMOOTH",
"121 -60 LINE SMOOTH",
"121 -116 OFFCURVE",
"82 -116 QCURVE SMOOTH",
"55 -116 LINE",
"55 -146 LINE",
"89 -146 LINE SMOOTH",
"130 -146 OFFCURVE",
"172 -129 OFFCURVE",
"188 -90 OFFCURVE",
"188 -53 QCURVE SMOOTH",
"188 176 LINE SMOOTH",
"188 207 OFFCURVE",
"199 236 OFFCURVE",
"227 250 OFFCURVE",
"260 257 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
37 36 18 3 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 0 0 1 0 99 0 2 2 3 95 0 3 3 19 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 44 33 39 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 290;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"253 281 LINE",
"225 287 OFFCURVE",
"203 321 OFFCURVE",
"203 358 QCURVE SMOOTH",
"203 582 LINE SMOOTH",
"203 619 OFFCURVE",
"182 658 OFFCURVE",
"130 675 OFFCURVE",
"82 675 QCURVE SMOOTH",
"33 675 LINE",
"33 638 LINE",
"60 638 LINE SMOOTH",
"91 638 OFFCURVE",
"91 589 QCURVE SMOOTH",
"91 358 LINE SMOOTH",
"91 327 OFFCURVE",
"110 292 OFFCURVE",
"156 274 OFFCURVE",
"202 267 QCURVE",
"156 258 OFFCURVE",
"111 240 OFFCURVE",
"92 207 OFFCURVE",
"91 176 QCURVE SMOOTH",
"91 -60 LINE SMOOTH",
"94 -109 OFFCURVE",
"60 -109 QCURVE SMOOTH",
"33 -109 LINE",
"33 -146 LINE",
"82 -146 LINE SMOOTH",
"132 -146 OFFCURVE",
"183 -129 OFFCURVE",
"203 -90 OFFCURVE",
"203 -53 QCURVE SMOOTH",
"203 176 LINE SMOOTH",
"203 205 OFFCURVE",
"211 232 OFFCURVE",
"230 246 OFFCURVE",
"253 253 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
38 37 19 3 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 0 0 1 0 99 0 2 2 3 95 0 3 3 19 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
33 45 33 39 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 283;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"223 -147 LINE",
"223 -120 LINE",
"119 -120 LINE",
"119 648 LINE",
"223 648 LINE",
"223 675 LINE",
"46 675 LINE",
"46 -147 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 4 1 3 2 3 97 0 1 1 0 93 0 0 0 19 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 25 values pushed */
0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 4 1 3 2 3 77 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 256;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"246 -147 LINE",
"246 -113 LINE",
"164 -113 LINE",
"164 641 LINE",
"246 641 LINE",
"246 675 LINE",
"46 675 LINE",
"46 -147 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 4 1 3 2 3 97 0 1 1 0 93 0 0 0 19 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 25 values pushed */
0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 4 1 3 2 3 77 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 279;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"211 675 LINE",
"34 675 LINE",
"34 648 LINE",
"138 648 LINE",
"138 -120 LINE",
"34 -120 LINE",
"34 -147 LINE",
"211 -147 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 0 0 1 0 97 0 2 2 3 93 0 3 3 19 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 3 0 2 1 3 2 101 0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
17 17 17 16 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 256;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"233 675 LINE",
"33 675 LINE",
"33 641 LINE",
"115 641 LINE",
"115 -113 LINE",
"33 -113 LINE",
"33 -147 LINE",
"233 -147 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 0 0 1 0 97 0 2 2 3 93 0 3 3 19 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 3 0 2 1 3 2 101 0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
17 17 17 16 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 279;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"228 189 LINE",
"228 244 LINE",
"22 244 LINE",
"22 189 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 250;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"228 182 LINE",
"228 244 LINE",
"22 244 LINE",
"22 182 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 250;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = hyphen;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 250;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = endash;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"459 191 LINE",
"459 230 LINE",
"18 230 LINE",
"18 191 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 477;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"459 187 LINE",
"459 234 LINE",
"18 234 LINE",
"18 187 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 477;
}
);
leftKerningGroup = endash;
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"794 191 LINE",
"794 230 LINE",
"0 230 LINE",
"0 191 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 794;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"794 187 LINE",
"794 234 LINE",
"0 234 LINE",
"0 187 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 794;
}
);
leftKerningGroup = emdash;
note = emdash;
unicode = 2014;
},
{
glyphname = hyphentwo;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
components = (
{
name = hyphen;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
unicode = 2010;
},
{
glyphname = nonbreakinghyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = hyphen;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 250;
}
);
unicode = 2011;
},
{
glyphname = underscore;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"0 -183 LINE",
"493 -183 LINE",
"493 -143 LINE",
"0 -143 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 493;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"0 -191 LINE",
"493 -191 LINE",
"493 -143 LINE",
"0 -143 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 493;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = hyphen.case;
layers = (
{
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 250;
}
);
},
{
glyphname = softhyphen.case;
layers = (
{
components = (
{
name = hyphen.case;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = hyphen.case;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 250;
}
);
},
{
glyphname = endash.case;
layers = (
{
components = (
{
name = endash;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 477;
},
{
components = (
{
name = endash;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 477;
}
);
},
{
glyphname = emdash.case;
layers = (
{
components = (
{
name = emdash;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 794;
},
{
components = (
{
name = emdash;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 794;
}
);
},
{
glyphname = nonbreakinghyphen.case;
layers = (
{
components = (
{
name = hyphen.case;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 250;
},
{
components = (
{
name = hyphen.case;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 250;
}
);
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"121 -160 LINE",
"163 -131 OFFCURVE",
"231 -42 OFFCURVE",
"231 8 QCURVE SMOOTH",
"231 48 OFFCURVE",
"196 91 OFFCURVE",
"161 91 QCURVE SMOOTH",
"138 91 OFFCURVE",
"103 59 OFFCURVE",
"103 38 QCURVE SMOOTH",
"103 21 OFFCURVE",
"117 -5 OFFCURVE",
"135 -5 QCURVE SMOOTH",
"171 -5 OFFCURVE",
"171 -34 QCURVE SMOOTH",
"171 -57 OFFCURVE",
"128 -125 OFFCURVE",
"102 -149 QCURVE"
);
}
);
width = 264;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"136 -160 LINE",
"192 -134 OFFCURVE",
"268 -50 OFFCURVE",
"268 7 QCURVE SMOOTH",
"268 45 OFFCURVE",
"220 97 OFFCURVE",
"181 97 QCURVE SMOOTH",
"144 97 OFFCURVE",
"102 57 OFFCURVE",
"102 28 QCURVE SMOOTH",
"102 2 OFFCURVE",
"135 -30 OFFCURVE",
"160 -30 QCURVE SMOOTH",
"188 -30 OFFCURVE",
"188 -54 QCURVE SMOOTH",
"188 -77 OFFCURVE",
"150 -123 OFFCURVE",
"123 -138 QCURVE"
);
}
);
width = 301;
}
);
leftKerningGroup = quotesinglbase;
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"121 -160 LINE",
"163 -131 OFFCURVE",
"231 -42 OFFCURVE",
"231 8 QCURVE SMOOTH",
"231 48 OFFCURVE",
"196 91 OFFCURVE",
"161 91 QCURVE SMOOTH",
"138 91 OFFCURVE",
"103 59 OFFCURVE",
"103 38 QCURVE SMOOTH",
"103 21 OFFCURVE",
"117 -5 OFFCURVE",
"135 -5 QCURVE SMOOTH",
"171 -5 OFFCURVE",
"171 -34 QCURVE SMOOTH",
"171 -57 OFFCURVE",
"128 -125 OFFCURVE",
"102 -149 QCURVE"
);
},
{
closed = 1;
nodes = (
"301 -160 LINE",
"343 -131 OFFCURVE",
"411 -42 OFFCURVE",
"411 8 QCURVE SMOOTH",
"411 48 OFFCURVE",
"376 91 OFFCURVE",
"341 91 QCURVE SMOOTH",
"318 91 OFFCURVE",
"283 59 OFFCURVE",
"283 38 QCURVE SMOOTH",
"283 21 OFFCURVE",
"297 -5 OFFCURVE",
"315 -5 QCURVE SMOOTH",
"351 -5 OFFCURVE",
"351 -34 QCURVE SMOOTH",
"351 -57 OFFCURVE",
"308 -125 OFFCURVE",
"282 -149 QCURVE"
);
}
);
width = 444;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"136 -160 LINE",
"192 -134 OFFCURVE",
"268 -50 OFFCURVE",
"268 7 QCURVE SMOOTH",
"268 45 OFFCURVE",
"220 97 OFFCURVE",
"181 97 QCURVE SMOOTH",
"144 97 OFFCURVE",
"102 57 OFFCURVE",
"102 28 QCURVE SMOOTH",
"102 2 OFFCURVE",
"135 -30 OFFCURVE",
"160 -30 QCURVE SMOOTH",
"188 -30 OFFCURVE",
"188 -54 QCURVE SMOOTH",
"188 -77 OFFCURVE",
"150 -123 OFFCURVE",
"123 -138 QCURVE"
);
},
{
closed = 1;
nodes = (
"343 -160 LINE",
"399 -134 OFFCURVE",
"475 -50 OFFCURVE",
"475 7 QCURVE SMOOTH",
"475 45 OFFCURVE",
"427 97 OFFCURVE",
"388 97 QCURVE SMOOTH",
"351 97 OFFCURVE",
"309 57 OFFCURVE",
"309 28 QCURVE SMOOTH",
"309 2 OFFCURVE",
"342 -30 OFFCURVE",
"367 -30 QCURVE SMOOTH",
"395 -30 OFFCURVE",
"395 -54 QCURVE SMOOTH",
"395 -77 OFFCURVE",
"357 -123 OFFCURVE",
"330 -138 QCURVE"
);
}
);
width = 508;
}
);
leftKerningGroup = quotedblbase;
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"137 646 LINE",
"95 617 OFFCURVE",
"27 528 OFFCURVE",
"27 478 QCURVE SMOOTH",
"27 438 OFFCURVE",
"62 395 OFFCURVE",
"97 395 QCURVE SMOOTH",
"120 395 OFFCURVE",
"155 427 OFFCURVE",
"155 448 QCURVE SMOOTH",
"155 465 OFFCURVE",
"141 491 OFFCURVE",
"123 491 QCURVE SMOOTH",
"87 491 OFFCURVE",
"87 520 QCURVE SMOOTH",
"87 543 OFFCURVE",
"130 611 OFFCURVE",
"156 635 QCURVE"
);
},
{
closed = 1;
nodes = (
"303 646 LINE",
"261 617 OFFCURVE",
"193 528 OFFCURVE",
"193 478 QCURVE SMOOTH",
"193 438 OFFCURVE",
"228 395 OFFCURVE",
"263 395 QCURVE SMOOTH",
"286 395 OFFCURVE",
"321 427 OFFCURVE",
"321 448 QCURVE SMOOTH",
"321 465 OFFCURVE",
"307 491 OFFCURVE",
"289 491 QCURVE SMOOTH",
"253 491 OFFCURVE",
"253 520 QCURVE SMOOTH",
"253 543 OFFCURVE",
"296 611 OFFCURVE",
"322 635 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
35 34 17 16 4 0 72 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 36 42 36 35 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 386;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"158 646 LINE",
"102 620 OFFCURVE",
"26 536 OFFCURVE",
"26 479 QCURVE SMOOTH",
"26 441 OFFCURVE",
"74 389 OFFCURVE",
"113 389 QCURVE SMOOTH",
"150 389 OFFCURVE",
"192 429 OFFCURVE",
"192 458 QCURVE SMOOTH",
"192 484 OFFCURVE",
"159 516 OFFCURVE",
"134 516 QCURVE SMOOTH",
"106 516 OFFCURVE",
"106 540 QCURVE SMOOTH",
"106 563 OFFCURVE",
"144 609 OFFCURVE",
"171 624 QCURVE"
);
},
{
closed = 1;
nodes = (
"362 646 LINE",
"306 620 OFFCURVE",
"230 536 OFFCURVE",
"230 479 QCURVE SMOOTH",
"230 441 OFFCURVE",
"278 389 OFFCURVE",
"317 389 QCURVE SMOOTH",
"354 389 OFFCURVE",
"396 429 OFFCURVE",
"396 458 QCURVE SMOOTH",
"396 484 OFFCURVE",
"363 516 OFFCURVE",
"338 516 QCURVE SMOOTH",
"310 516 OFFCURVE",
"310 540 QCURVE SMOOTH",
"310 563 OFFCURVE",
"348 609 OFFCURVE",
"375 624 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
35 34 17 16 4 0 72 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 36 42 36 35 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"83 379 LINE",
"125 408 OFFCURVE",
"193 497 OFFCURVE",
"193 547 QCURVE SMOOTH",
"193 587 OFFCURVE",
"158 630 OFFCURVE",
"123 630 QCURVE SMOOTH",
"100 630 OFFCURVE",
"65 598 OFFCURVE",
"65 577 QCURVE SMOOTH",
"65 560 OFFCURVE",
"79 534 OFFCURVE",
"97 534 QCURVE SMOOTH",
"133 534 OFFCURVE",
"133 505 QCURVE SMOOTH",
"133 482 OFFCURVE",
"90 414 OFFCURVE",
"64 390 QCURVE"
);
},
{
closed = 1;
nodes = (
"249 379 LINE",
"291 408 OFFCURVE",
"359 497 OFFCURVE",
"359 547 QCURVE SMOOTH",
"359 587 OFFCURVE",
"324 630 OFFCURVE",
"289 630 QCURVE SMOOTH",
"266 630 OFFCURVE",
"231 598 OFFCURVE",
"231 577 QCURVE SMOOTH",
"231 560 OFFCURVE",
"245 534 OFFCURVE",
"263 534 QCURVE SMOOTH",
"299 534 OFFCURVE",
"299 505 QCURVE SMOOTH",
"299 482 OFFCURVE",
"256 414 OFFCURVE",
"230 390 QCURVE"
);
}
);
width = 386;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"98 379 LINE",
"154 405 OFFCURVE",
"230 489 OFFCURVE",
"230 546 QCURVE SMOOTH",
"230 584 OFFCURVE",
"182 636 OFFCURVE",
"143 636 QCURVE SMOOTH",
"106 636 OFFCURVE",
"64 596 OFFCURVE",
"64 567 QCURVE SMOOTH",
"64 541 OFFCURVE",
"97 509 OFFCURVE",
"122 509 QCURVE SMOOTH",
"150 509 OFFCURVE",
"150 485 QCURVE SMOOTH",
"150 462 OFFCURVE",
"112 416 OFFCURVE",
"85 401 QCURVE"
);
},
{
closed = 1;
nodes = (
"302 379 LINE",
"358 405 OFFCURVE",
"434 489 OFFCURVE",
"434 546 QCURVE SMOOTH",
"434 584 OFFCURVE",
"386 636 OFFCURVE",
"347 636 QCURVE SMOOTH",
"310 636 OFFCURVE",
"268 596 OFFCURVE",
"268 567 QCURVE SMOOTH",
"268 541 OFFCURVE",
"301 509 OFFCURVE",
"326 509 QCURVE SMOOTH",
"354 509 OFFCURVE",
"354 485 QCURVE SMOOTH",
"354 462 OFFCURVE",
"316 416 OFFCURVE",
"289 401 QCURVE"
);
}
);
width = 460;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"137 645 LINE",
"95 616 OFFCURVE",
"27 527 OFFCURVE",
"27 477 QCURVE SMOOTH",
"27 437 OFFCURVE",
"62 394 OFFCURVE",
"97 394 QCURVE SMOOTH",
"120 394 OFFCURVE",
"155 426 OFFCURVE",
"155 447 QCURVE SMOOTH",
"155 464 OFFCURVE",
"141 490 OFFCURVE",
"123 490 QCURVE SMOOTH",
"87 490 OFFCURVE",
"87 519 QCURVE SMOOTH",
"87 542 OFFCURVE",
"130 610 OFFCURVE",
"156 634 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
17 16 2 0 72 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 220;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"159 645 LINE",
"103 619 OFFCURVE",
"27 535 OFFCURVE",
"27 478 QCURVE SMOOTH",
"27 440 OFFCURVE",
"75 388 OFFCURVE",
"114 388 QCURVE SMOOTH",
"151 388 OFFCURVE",
"193 428 OFFCURVE",
"193 457 QCURVE SMOOTH",
"193 483 OFFCURVE",
"160 515 OFFCURVE",
"135 515 QCURVE SMOOTH",
"107 515 OFFCURVE",
"107 539 QCURVE SMOOTH",
"107 562 OFFCURVE",
"145 608 OFFCURVE",
"172 623 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
17 16 2 0 72 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 257;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"83 379 LINE",
"125 408 OFFCURVE",
"193 497 OFFCURVE",
"193 547 QCURVE SMOOTH",
"193 587 OFFCURVE",
"158 630 OFFCURVE",
"123 630 QCURVE SMOOTH",
"100 630 OFFCURVE",
"65 598 OFFCURVE",
"65 577 QCURVE SMOOTH",
"65 560 OFFCURVE",
"79 534 OFFCURVE",
"97 534 QCURVE SMOOTH",
"133 534 OFFCURVE",
"133 505 QCURVE SMOOTH",
"133 482 OFFCURVE",
"90 414 OFFCURVE",
"64 390 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
17 16 2 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 1 95 0 1 1 25 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 220;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"98 379 LINE",
"154 405 OFFCURVE",
"230 489 OFFCURVE",
"230 546 QCURVE SMOOTH",
"230 584 OFFCURVE",
"182 636 OFFCURVE",
"143 636 QCURVE SMOOTH",
"106 636 OFFCURVE",
"64 596 OFFCURVE",
"64 567 QCURVE SMOOTH",
"64 541 OFFCURVE",
"97 509 OFFCURVE",
"122 509 QCURVE SMOOTH",
"150 509 OFFCURVE",
"150 485 QCURVE SMOOTH",
"150 462 OFFCURVE",
"112 416 OFFCURVE",
"85 401 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
17 16 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 257;
}
);
leftKerningGroup = quoteright;
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"342 16 LINE",
"378 16 LINE",
"280 187 LINE",
"378 358 LINE",
"342 358 LINE",
"193 187 LINE"
);
},
{
closed = 1;
nodes = (
"174 16 LINE",
"210 16 LINE",
"112 187 LINE",
"210 358 LINE",
"174 358 LINE",
"25 187 LINE"
);
}
);
width = 428;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"395 35 LINE",
"439 35 LINE",
"341 206 LINE",
"439 377 LINE",
"395 377 LINE",
"209 206 LINE"
);
},
{
closed = 1;
nodes = (
"212 35 LINE",
"256 35 LINE",
"158 206 LINE",
"256 377 LINE",
"212 377 LINE",
"26 206 LINE"
);
}
);
width = 488;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"86 358 LINE",
"50 358 LINE",
"148 187 LINE",
"50 16 LINE",
"86 16 LINE",
"235 187 LINE"
);
},
{
closed = 1;
nodes = (
"258 358 LINE",
"222 358 LINE",
"320 187 LINE",
"222 16 LINE",
"258 16 LINE",
"407 187 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
9 3 2 0 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 13 values pushed */
3 1 1 0 1 131 2 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
3 1 1 0 1 131 2 1 0 0 116 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
18 18 18 17 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 433;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"94 377 LINE",
"50 377 LINE",
"148 206 LINE",
"50 35 LINE",
"94 35 LINE",
"280 206 LINE"
);
},
{
closed = 1;
nodes = (
"266 377 LINE",
"222 377 LINE",
"320 206 LINE",
"222 35 LINE",
"266 35 LINE",
"452 206 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
9 3 2 0 1 1 74 3 1 1 0 0 1 85 3 1 1 1 0 93 2 1 0 1 0 77 18 18 18 17 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 478;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"175 16 LINE",
"211 16 LINE",
"113 187 LINE",
"211 358 LINE",
"175 358 LINE",
"26 187 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
3 1 1 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 131 0 1 1 21 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 131 0 1 1 116 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
18 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 261;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"208 35 LINE",
"252 35 LINE",
"154 206 LINE",
"252 377 LINE",
"208 377 LINE",
"22 206 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
3 1 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 18 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 302;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"86 358 LINE",
"50 358 LINE",
"148 187 LINE",
"50 16 LINE",
"86 16 LINE",
"235 187 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
3 1 0 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
32 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 131 0 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 1 0 1 131 0 0 0 116 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
18 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 260;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"94 377 LINE",
"50 377 LINE",
"148 206 LINE",
"50 35 LINE",
"94 35 LINE",
"280 206 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
3 1 0 1 1 74 0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 18 17 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 301;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"34 587 OFFCURVE",
"45 500 OFFCURVE",
"47 480 QCURVE",
"54 431 OFFCURVE",
"54 426 QCURVE SMOOTH",
"54 409 OFFCURVE",
"67 409 QCURVE SMOOTH",
"80 409 OFFCURVE",
"80 426 QCURVE SMOOTH",
"80 431 OFFCURVE",
"87 480 QCURVE",
"89 500 OFFCURVE",
"100 587 OFFCURVE",
"100 600 QCURVE SMOOTH",
"100 619 OFFCURVE",
"82 640 OFFCURVE",
"67 640 QCURVE SMOOTH",
"52 640 OFFCURVE",
"34 619 OFFCURVE",
"34 600 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 587 OFFCURVE",
"163 500 OFFCURVE",
"165 480 QCURVE",
"172 431 OFFCURVE",
"172 426 QCURVE SMOOTH",
"172 409 OFFCURVE",
"185 409 QCURVE SMOOTH",
"198 409 OFFCURVE",
"198 426 QCURVE SMOOTH",
"198 431 OFFCURVE",
"205 480 QCURVE",
"207 500 OFFCURVE",
"218 587 OFFCURVE",
"218 600 QCURVE SMOOTH",
"218 619 OFFCURVE",
"200 640 OFFCURVE",
"185 640 QCURVE SMOOTH",
"170 640 OFFCURVE",
"152 619 OFFCURVE",
"152 600 QCURVE SMOOTH"
);
}
);
width = 252;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"15 574 OFFCURVE",
"25 536 OFFCURVE",
"31 517 QCURVE SMOOTH",
"50 447 OFFCURVE",
"50 430 QCURVE SMOOTH",
"50 409 OFFCURVE",
"67 409 QCURVE SMOOTH",
"84 409 OFFCURVE",
"84 430 QCURVE SMOOTH",
"84 447 OFFCURVE",
"103 517 QCURVE SMOOTH",
"109 536 OFFCURVE",
"119 574 OFFCURVE",
"119 585 QCURVE SMOOTH",
"119 611 OFFCURVE",
"92 640 OFFCURVE",
"67 640 QCURVE SMOOTH",
"42 640 OFFCURVE",
"15 611 OFFCURVE",
"15 585 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148 574 OFFCURVE",
"158 536 OFFCURVE",
"164 517 QCURVE SMOOTH",
"183 447 OFFCURVE",
"183 430 QCURVE SMOOTH",
"183 409 OFFCURVE",
"200 409 QCURVE SMOOTH",
"217 409 OFFCURVE",
"217 430 QCURVE SMOOTH",
"217 447 OFFCURVE",
"236 517 QCURVE SMOOTH",
"242 536 OFFCURVE",
"252 574 OFFCURVE",
"252 585 QCURVE SMOOTH",
"252 611 OFFCURVE",
"225 640 OFFCURVE",
"200 640 QCURVE SMOOTH",
"175 640 OFFCURVE",
"148 611 OFFCURVE",
"148 585 QCURVE SMOOTH"
);
}
);
width = 267;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"34 587 OFFCURVE",
"45 500 OFFCURVE",
"47 480 QCURVE",
"54 431 OFFCURVE",
"54 426 QCURVE SMOOTH",
"54 409 OFFCURVE",
"67 409 QCURVE SMOOTH",
"80 409 OFFCURVE",
"80 426 QCURVE SMOOTH",
"80 431 OFFCURVE",
"87 480 QCURVE",
"89 500 OFFCURVE",
"100 587 OFFCURVE",
"100 600 QCURVE SMOOTH",
"100 619 OFFCURVE",
"82 640 OFFCURVE",
"67 640 QCURVE SMOOTH",
"52 640 OFFCURVE",
"34 619 OFFCURVE",
"34 600 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 41 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 133;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"15 574 OFFCURVE",
"25 536 OFFCURVE",
"31 517 QCURVE SMOOTH",
"50 447 OFFCURVE",
"50 430 QCURVE SMOOTH",
"50 409 OFFCURVE",
"67 409 QCURVE SMOOTH",
"84 409 OFFCURVE",
"84 430 QCURVE SMOOTH",
"84 447 OFFCURVE",
"103 517 QCURVE SMOOTH",
"109 536 OFFCURVE",
"119 574 OFFCURVE",
"119 585 QCURVE SMOOTH",
"119 611 OFFCURVE",
"92 640 OFFCURVE",
"67 640 QCURVE SMOOTH",
"42 640 OFFCURVE",
"15 611 OFFCURVE",
"15 585 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 41 33 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 134;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"275 -214 LINE",
"311 -214 LINE",
"113 157 LINE",
"311 528 LINE",
"275 528 LINE",
"26 157 LINE"
);
}
);
width = 341;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"299 -195 LINE",
"352 -195 LINE",
"129 176 LINE",
"352 547 LINE",
"299 547 LINE",
"22 176 LINE"
);
}
);
width = 382;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"66 528 LINE",
"30 528 LINE",
"228 157 LINE",
"30 -214 LINE",
"66 -214 LINE",
"315 157 LINE"
);
}
);
width = 341;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"83 547 LINE",
"30 547 LINE",
"253 176 LINE",
"30 -195 LINE",
"83 -195 LINE",
"360 176 LINE"
);
}
);
width = 382;
}
);
unicode = 27E9;
},
{
glyphname = space;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 220;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 205;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 220;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 205;
}
);
widthMetricsKey = space;
note = uni00A0;
unicode = 00A0;
},
{
glyphname = thinspace;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 120;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 105;
}
);
unicode = 2009;
},
{
glyphname = CR;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
note = CR;
},
{
glyphname = .notdef;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"451 0 LINE",
"452 604 LINE",
"21 604 LINE"
);
},
{
closed = 1;
nodes = (
"236 341 LINE",
"89 561 LINE",
"382 561 LINE"
);
},
{
closed = 1;
nodes = (
"62 522 LINE",
"210 302 LINE",
"62 82 LINE"
);
},
{
closed = 1;
nodes = (
"262 302 LINE",
"408 522 LINE",
"408 82 LINE"
);
},
{
closed = 1;
nodes = (
"89 43 LINE",
"235 263 LINE",
"382 43 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
67 62 59 58 56 54 52 42 40 36 32 26 23 22 18 16 10 4 1 0 10 48 
CALL[ ]\011/* CallFunction */";
};
width = 472;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"451 0 LINE",
"452 604 LINE",
"21 604 LINE"
);
},
{
closed = 1;
nodes = (
"236 341 LINE",
"89 561 LINE",
"382 561 LINE"
);
},
{
closed = 1;
nodes = (
"62 522 LINE",
"210 302 LINE",
"62 82 LINE"
);
},
{
closed = 1;
nodes = (
"262 302 LINE",
"408 522 LINE",
"408 82 LINE"
);
},
{
closed = 1;
nodes = (
"89 43 LINE",
"235 263 LINE",
"382 43 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
67 62 59 58 56 54 52 42 40 36 32 26 23 22 18 16 10 4 1 0 10 48 
CALL[ ]\011/* CallFunction */";
};
width = 472;
}
);
note = .notdef;
},
{
glyphname = zeroWidthNoBreakSpace;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = FEFF;
},
{
glyphname = cedi;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"26 161 OFFCURVE",
"161 -10 OFFCURVE",
"291 -10 QCURVE SMOOTH",
"324 -10 OFFCURVE",
"386 4 OFFCURVE",
"424 17 QCURVE",
"452 26 OFFCURVE",
"490 35 OFFCURVE",
"504 35 QCURVE SMOOTH",
"510 35 LINE",
"507 53 OFFCURVE",
"507 82 QCURVE SMOOTH",
"507 120 OFFCURVE",
"513 167 QCURVE",
"485 167 LINE",
"471 102 OFFCURVE",
"365 17 OFFCURVE",
"296 17 QCURVE SMOOTH",
"215 17 OFFCURVE",
"128 176 OFFCURVE",
"128 295 QCURVE SMOOTH",
"128 424 OFFCURVE",
"215 582 OFFCURVE",
"291 582 QCURVE SMOOTH",
"362 582 OFFCURVE",
"471 487 OFFCURVE",
"480 433 QCURVE",
"504 433 LINE",
"502 435 OFFCURVE",
"500 468 OFFCURVE",
"500 489 QCURVE SMOOTH",
"500 533 OFFCURVE",
"504 564 QCURVE",
"480 564 OFFCURVE",
"443 574 OFFCURVE",
"418 583 QCURVE SMOOTH",
"382 596 OFFCURVE",
"333 607 OFFCURVE",
"296 607 QCURVE SMOOTH",
"171 607 OFFCURVE",
"26 442 OFFCURVE",
"26 295 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 -75 LINE",
"316 -75 LINE",
"316 680 LINE",
"280 680 LINE"
);
}
);
width = 547;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"22 142 OFFCURVE",
"174 -10 OFFCURVE",
"298 -10 QCURVE SMOOTH",
"331 -10 OFFCURVE",
"386 3 OFFCURVE",
"431 16 QCURVE SMOOTH",
"462 25 OFFCURVE",
"501 35 OFFCURVE",
"519 35 QCURVE SMOOTH",
"525 35 LINE",
"522 53 OFFCURVE",
"522 82 QCURVE SMOOTH",
"522 118 OFFCURVE",
"528 167 QCURVE",
"492 167 LINE",
"479 106 OFFCURVE",
"384 25 OFFCURVE",
"321 25 QCURVE SMOOTH",
"259 25 OFFCURVE",
"173 166 OFFCURVE",
"173 295 QCURVE SMOOTH",
"173 430 OFFCURVE",
"254 575 OFFCURVE",
"317 575 QCURVE SMOOTH",
"377 575 OFFCURVE",
"475 492 OFFCURVE",
"487 433 QCURVE",
"519 433 LINE",
"517 435 OFFCURVE",
"515 468 OFFCURVE",
"515 489 QCURVE SMOOTH",
"515 533 OFFCURVE",
"519 564 QCURVE",
"496 564 OFFCURVE",
"458 573 OFFCURVE",
"432 583 QCURVE",
"395 595 OFFCURVE",
"343 607 OFFCURVE",
"303 607 QCURVE SMOOTH",
"180 607 OFFCURVE",
"22 446 OFFCURVE",
"22 295 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 -95 LINE",
"328 -95 LINE",
"328 680 LINE",
"285 680 LINE"
);
}
);
width = 546;
}
);
unicode = 20B5;
},
{
glyphname = cent;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"132 465 OFFCURVE",
"42 371 OFFCURVE",
"42 288 QCURVE SMOOTH",
"42 206 OFFCURVE",
"131 117 OFFCURVE",
"206 115 QCURVE",
"206 -95 LINE",
"243 -95 LINE",
"243 117 LINE",
"331 128 OFFCURVE",
"358 209 QCURVE",
"336 222 LINE",
"303 140 OFFCURVE",
"226 140 QCURVE SMOOTH",
"181 140 OFFCURVE",
"134 215 OFFCURVE",
"134 298 QCURVE SMOOTH",
"134 377 OFFCURVE",
"176 443 OFFCURVE",
"216 443 QCURVE SMOOTH",
"240 443 OFFCURVE",
"274 423 OFFCURVE",
"274 404 QCURVE SMOOTH",
"274 396 OFFCURVE",
"266 375 OFFCURVE",
"266 369 QCURVE SMOOTH",
"266 355 OFFCURVE",
"286 340 OFFCURVE",
"302 340 QCURVE SMOOTH",
"324 340 OFFCURVE",
"346 366 OFFCURVE",
"346 384 QCURVE SMOOTH",
"346 414 OFFCURVE",
"288 459 OFFCURVE",
"243 465 QCURVE",
"243 647 LINE",
"206 647 LINE",
"206 467 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
13 1 5 2 22 1 4 5 38 37 2 6 4 1 1 1 6 4 74 0 3 2 3 131 0 4 5 6 5 4 6 126 0 0 1 0 132 0 2 0 5 4 2 5 104 0 6 1 1 6 87 0 6 6 1 95 0 1 6 1 79 36 39 38 17 20 17 18 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 394;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"128 463 OFFCURVE",
"34 375 OFFCURVE",
"34 289 QCURVE SMOOTH",
"34 200 OFFCURVE",
"131 117 OFFCURVE",
"206 113 QCURVE",
"206 -95 LINE",
"251 -95 LINE",
"251 113 LINE",
"338 116 OFFCURVE",
"381 208 QCURVE",
"353 218 LINE",
"322 146 OFFCURVE",
"257 146 QCURVE SMOOTH",
"216 146 OFFCURVE",
"167 210 OFFCURVE",
"167 301 QCURVE SMOOTH",
"167 376 OFFCURVE",
"203 439 OFFCURVE",
"235 439 QCURVE SMOOTH",
"253 439 OFFCURVE",
"277 423 OFFCURVE",
"277 406 QCURVE SMOOTH",
"277 400 OFFCURVE",
"270 380 OFFCURVE",
"270 372 QCURVE SMOOTH",
"270 351 OFFCURVE",
"300 330 OFFCURVE",
"323 330 QCURVE SMOOTH",
"351 330 OFFCURVE",
"382 361 OFFCURVE",
"382 384 QCURVE SMOOTH",
"382 418 OFFCURVE",
"310 465 OFFCURVE",
"251 469 QCURVE",
"251 647 LINE",
"206 647 LINE",
"206 469 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
14 1 4 3 26 1 5 6 2 1 2 7 5 3 74 0 1 0 1 132 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 103 8 1 7 0 0 7 87 8 1 7 7 0 95 2 1 0 7 0 79 0 0 0 38 0 37 39 36 17 22 17 17 20 9 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 414;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"192 -93 LINE",
"221 -93 LINE",
"449 688 LINE",
"420 688 LINE"
);
},
{
closed = 1;
nodes = (
"97 -93 LINE",
"126 -93 LINE",
"354 688 LINE",
"325 688 LINE"
);
},
{
closed = 1;
nodes = (
"28 161 OFFCURVE",
"163 -10 OFFCURVE",
"293 -10 QCURVE SMOOTH",
"326 -10 OFFCURVE",
"388 4 OFFCURVE",
"426 17 QCURVE",
"454 26 OFFCURVE",
"492 35 OFFCURVE",
"506 35 QCURVE SMOOTH",
"512 35 LINE",
"509 53 OFFCURVE",
"509 82 QCURVE SMOOTH",
"509 120 OFFCURVE",
"515 167 QCURVE",
"487 167 LINE",
"473 102 OFFCURVE",
"367 17 OFFCURVE",
"298 17 QCURVE SMOOTH",
"217 17 OFFCURVE",
"130 176 OFFCURVE",
"130 295 QCURVE SMOOTH",
"130 424 OFFCURVE",
"217 582 OFFCURVE",
"293 582 QCURVE SMOOTH",
"364 582 OFFCURVE",
"473 487 OFFCURVE",
"482 433 QCURVE",
"506 433 LINE",
"504 435 OFFCURVE",
"502 468 OFFCURVE",
"502 489 QCURVE SMOOTH",
"502 533 OFFCURVE",
"506 564 QCURVE",
"482 564 OFFCURVE",
"445 574 OFFCURVE",
"420 583 QCURVE SMOOTH",
"384 596 OFFCURVE",
"335 607 OFFCURVE",
"298 607 QCURVE SMOOTH",
"173 607 OFFCURVE",
"28 442 OFFCURVE",
"28 295 QCURVE SMOOTH"
);
}
);
width = 547;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"186 -93 LINE",
"231 -93 LINE",
"459 688 LINE",
"414 688 LINE"
);
},
{
closed = 1;
nodes = (
"93 -93 LINE",
"138 -93 LINE",
"366 688 LINE",
"321 688 LINE"
);
},
{
closed = 1;
nodes = (
"22 142 OFFCURVE",
"174 -10 OFFCURVE",
"298 -10 QCURVE SMOOTH",
"331 -10 OFFCURVE",
"386 3 OFFCURVE",
"431 16 QCURVE SMOOTH",
"462 25 OFFCURVE",
"501 35 OFFCURVE",
"519 35 QCURVE SMOOTH",
"525 35 LINE",
"522 53 OFFCURVE",
"522 82 QCURVE SMOOTH",
"522 118 OFFCURVE",
"528 167 QCURVE",
"492 167 LINE",
"479 106 OFFCURVE",
"384 25 OFFCURVE",
"321 25 QCURVE SMOOTH",
"259 25 OFFCURVE",
"173 166 OFFCURVE",
"173 295 QCURVE SMOOTH",
"173 430 OFFCURVE",
"254 575 OFFCURVE",
"317 575 QCURVE SMOOTH",
"377 575 OFFCURVE",
"475 492 OFFCURVE",
"487 433 QCURVE",
"519 433 LINE",
"517 435 OFFCURVE",
"515 468 OFFCURVE",
"515 489 QCURVE SMOOTH",
"515 533 OFFCURVE",
"519 564 QCURVE",
"496 564 OFFCURVE",
"458 573 OFFCURVE",
"432 583 QCURVE",
"395 595 OFFCURVE",
"343 607 OFFCURVE",
"303 607 QCURVE SMOOTH",
"180 607 OFFCURVE",
"22 446 OFFCURVE",
"22 295 QCURVE SMOOTH"
);
}
);
width = 546;
}
);
unicode = 20A1;
},
{
glyphname = currency;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"393 327 OFFCURVE",
"354 372 QCURVE",
"402 419 LINE",
"379 442 LINE",
"332 395 LINE",
"286 435 OFFCURVE",
"222 435 QCURVE SMOOTH",
"164 435 OFFCURVE",
"113 396 QCURVE",
"66 443 LINE",
"43 420 LINE",
"90 373 LINE",
"52 325 OFFCURVE",
"52 265 QCURVE SMOOTH",
"52 205 OFFCURVE",
"91 156 QCURVE",
"42 107 LINE",
"65 84 LINE",
"114 133 LINE",
"161 94 OFFCURVE",
"222 94 QCURVE SMOOTH",
"283 94 OFFCURVE",
"330 132 QCURVE",
"378 83 LINE",
"401 106 LINE",
"353 155 LINE",
"393 200 OFFCURVE",
"393 265 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"184 126 OFFCURVE",
"120 163 OFFCURVE",
"83 227 OFFCURVE",
"83 265 QCURVE SMOOTH",
"83 302 OFFCURVE",
"120 365 OFFCURVE",
"184 403 OFFCURVE",
"222 403 QCURVE SMOOTH",
"260 403 OFFCURVE",
"324 365 OFFCURVE",
"361 302 OFFCURVE",
"361 265 QCURVE SMOOTH",
"361 227 OFFCURVE",
"324 163 OFFCURVE",
"260 126 OFFCURVE",
"222 126 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
25 16 2 2 1 26 23 18 15 11 8 4 1 8 3 2 10 2 2 0 3 3 74 24 17 2 1 72 9 3 2 0 71 4 1 3 0 0 3 0 99 0 2 2 1 95 0 1 1 28 2 76 29 29 29 44 29 43 45 45 37 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 443;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"393 322 OFFCURVE",
"358 368 QCURVE",
"406 415 LINE",
"375 446 LINE",
"328 399 LINE",
"281 435 OFFCURVE",
"222 435 QCURVE SMOOTH",
"163 435 OFFCURVE",
"118 399 QCURVE",
"70 447 LINE",
"39 416 LINE",
"87 368 LINE",
"52 323 OFFCURVE",
"52 265 QCURVE SMOOTH",
"52 206 OFFCURVE",
"88 161 QCURVE",
"38 111 LINE",
"69 80 LINE",
"119 130 LINE",
"163 94 OFFCURVE",
"222 94 QCURVE SMOOTH",
"280 94 OFFCURVE",
"326 128 QCURVE",
"374 79 LINE",
"405 110 LINE",
"357 159 LINE",
"393 205 OFFCURVE",
"393 265 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 134 OFFCURVE",
"126 169 OFFCURVE",
"91 230 OFFCURVE",
"91 265 QCURVE SMOOTH",
"91 300 OFFCURVE",
"126 360 OFFCURVE",
"187 396 OFFCURVE",
"222 396 QCURVE SMOOTH",
"258 396 OFFCURVE",
"318 360 OFFCURVE",
"354 300 OFFCURVE",
"354 265 QCURVE SMOOTH",
"354 230 OFFCURVE",
"319 169 OFFCURVE",
"258 134 OFFCURVE",
"222 134 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
24 22 18 16 4 2 1 25 15 11 1 4 3 2 10 8 4 2 4 0 3 3 74 23 17 2 1 72 9 3 2 0 71 4 1 3 0 0 3 0 99 0 2 2 1 95 0 1 1 28 2 76 28 28 28 43 28 42 45 44 37 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 443;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = dollar;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"364 270 OFFCURVE",
"326 318 OFFCURVE",
"278 331 QCURVE SMOOTH",
"209 349 LINE SMOOTH",
"160 361 OFFCURVE",
"160 397 QCURVE SMOOTH",
"160 419 OFFCURVE",
"193 447 OFFCURVE",
"222 447 QCURVE SMOOTH",
"267 447 OFFCURVE",
"318 400 OFFCURVE",
"318 369 QCURVE",
"339 369 LINE",
"344 460 LINE",
"332 453 OFFCURVE",
"320 453 QCURVE SMOOTH",
"306 453 OFFCURVE",
"282 460 QCURVE",
"264 466 OFFCURVE",
"243 469 QCURVE",
"243 647 LINE",
"206 647 LINE",
"206 471 LINE",
"151 468 OFFCURVE",
"89 410 OFFCURVE",
"89 366 QCURVE SMOOTH",
"89 330 OFFCURVE",
"130 280 OFFCURVE",
"169 270 QCURVE SMOOTH",
"239 251 LINE",
"270 244 OFFCURVE",
"295 218 OFFCURVE",
"295 198 QCURVE SMOOTH",
"295 173 OFFCURVE",
"260 143 OFFCURVE",
"230 143 QCURVE SMOOTH",
"181 143 OFFCURVE",
"111 199 OFFCURVE",
"111 242 QCURVE",
"87 241 LINE",
"83 135 LINE",
"91 140 OFFCURVE",
"107 140 QCURVE SMOOTH",
"115 140 OFFCURVE",
"130 137 QCURVE",
"184 122 OFFCURVE",
"206 120 QCURVE",
"206 -95 LINE",
"243 -95 LINE",
"243 120 LINE",
"298 125 OFFCURVE",
"364 183 OFFCURVE",
"364 232 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
38 1 6 4 11 5 2 3 0 1 2 74 32 1 4 1 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 5 4 5 131 0 4 0 8 7 4 8 104 0 2 0 1 0 2 1 103 0 3 0 0 3 0 97 0 7 7 6 95 0 6 6 28 7 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 45 values pushed */
0 5 4 5 131 0 4 0 8 7 4 8 104 0 6 0 7 2 6 7 101 0 3 1 0 3 87 0 2 0 1 0 2 1 103 0 3 3 0 93 0 0 3 0 77 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
34 18 36 17 27 34 18 36 19 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 447;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"373 285 OFFCURVE",
"328 339 OFFCURVE",
"263 354 QCURVE SMOOTH",
"218 365 LINE",
"177 373 OFFCURVE",
"177 406 QCURVE SMOOTH",
"177 423 OFFCURVE",
"205 443 OFFCURVE",
"227 443 QCURVE SMOOTH",
"272 443 OFFCURVE",
"323 400 OFFCURVE",
"323 372 QCURVE",
"351 372 LINE",
"355 463 LINE",
"345 457 OFFCURVE",
"331 457 QCURVE SMOOTH",
"315 457 OFFCURVE",
"289 464 QCURVE SMOOTH",
"264 470 OFFCURVE",
"247 472 QCURVE",
"247 647 LINE",
"202 647 LINE",
"202 473 LINE",
"143 469 OFFCURVE",
"79 405 OFFCURVE",
"79 355 QCURVE SMOOTH",
"79 314 OFFCURVE",
"128 263 OFFCURVE",
"185 247 QCURVE SMOOTH",
"232 234 LINE SMOOTH",
"260 227 OFFCURVE",
"282 206 OFFCURVE",
"282 189 QCURVE SMOOTH",
"282 169 OFFCURVE",
"253 148 OFFCURVE",
"229 148 QCURVE SMOOTH",
"180 148 OFFCURVE",
"110 199 OFFCURVE",
"110 239 QCURVE",
"79 238 LINE",
"75 132 LINE",
"83 137 OFFCURVE",
"100 137 QCURVE SMOOTH",
"108 137 OFFCURVE",
"125 134 QCURVE",
"178 120 OFFCURVE",
"202 117 QCURVE",
"202 -95 LINE",
"247 -95 LINE",
"247 117 LINE",
"305 122 OFFCURVE",
"373 188 OFFCURVE",
"373 242 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
32 1 4 5 38 1 6 4 11 5 2 3 0 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 4 5 6 5 4 6 126 0 5 0 8 7 5 8 103 0 2 0 1 0 2 1 103 0 3 0 0 3 0 97 0 7 7 6 95 0 6 6 28 7 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 48 values pushed */
0 4 5 6 5 4 6 126 0 5 0 8 7 5 8 103 0 6 0 7 2 6 7 101 0 3 1 0 3 87 0 2 0 1 0 2 1 103 0 3 3 0 93 0 0 3 0 77 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
34 18 36 17 27 34 18 36 19 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 448;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
layers = (
{
components = (
{
name = dcroat;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 -109 LINE",
"474 -109 LINE",
"474 -86 LINE",
"55 -86 LINE"
);
}
);
width = 516;
},
{
components = (
{
name = dcroat;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"46 -114 LINE",
"511 -114 LINE",
"511 -84 LINE",
"46 -84 LINE"
);
}
);
width = 538;
}
);
unicode = 20AB;
},
{
glyphname = euro;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"434 167 LINE",
"423 102 OFFCURVE",
"346 17 OFFCURVE",
"294 17 QCURVE SMOOTH",
"239 17 OFFCURVE",
"163 125 OFFCURVE",
"152 217 QCURVE",
"373 217 LINE",
"383 258 LINE",
"148 258 LINE",
"147 270 OFFCURVE",
"147 295 QCURVE SMOOTH",
"147 319 OFFCURVE",
"148 331 QCURVE",
"373 331 LINE",
"383 372 LINE",
"151 372 LINE",
"162 469 OFFCURVE",
"234 582 OFFCURVE",
"289 582 QCURVE SMOOTH",
"339 582 OFFCURVE",
"419 495 OFFCURVE",
"429 433 QCURVE",
"453 433 LINE",
"451 435 OFFCURVE",
"449 468 OFFCURVE",
"449 489 QCURVE SMOOTH",
"449 533 OFFCURVE",
"453 564 QCURVE",
"434 564 OFFCURVE",
"404 574 OFFCURVE",
"384 583 QCURVE SMOOTH",
"355 595 OFFCURVE",
"316 607 OFFCURVE",
"286 607 QCURVE SMOOTH",
"189 607 OFFCURVE",
"66 485 OFFCURVE",
"50 372 QCURVE",
"12 372 LINE",
"2 331 LINE",
"46 331 LINE",
"45 319 OFFCURVE",
"45 295 QCURVE SMOOTH",
"45 270 OFFCURVE",
"46 258 QCURVE",
"12 258 LINE",
"2 217 LINE",
"51 217 LINE",
"68 110 OFFCURVE",
"189 -10 OFFCURVE",
"282 -10 QCURVE SMOOTH",
"308 -10 OFFCURVE",
"357 4 OFFCURVE",
"389 17 QCURVE SMOOTH",
"407 24 OFFCURVE",
"441 35 OFFCURVE",
"453 35 QCURVE SMOOTH",
"459 35 LINE",
"456 53 OFFCURVE",
"456 82 QCURVE SMOOTH",
"456 120 OFFCURVE",
"462 167 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 81 values pushed */
0 7 8 5 8 7 5 126 9 1 5 10 1 4 3 5 4 101 11 1 3 12 1 2 14 3 2 101 0 14 0 0 13 14 0 103 0 8 8 6 95 0 6 6 25 75 0 13 13 1 95 0 1 1 26 1 76 61 60 58 56 54 53 52 51 47 46 45 44 40 20 34 17 20 17 18 36 35 15 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 466;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"445 167 LINE",
"436 106 OFFCURVE",
"368 25 OFFCURVE",
"323 25 QCURVE SMOOTH",
"274 25 OFFCURVE",
"210 124 OFFCURVE",
"200 216 QCURVE",
"388 216 LINE",
"398 257 LINE",
"197 257 LINE",
"196 269 OFFCURVE",
"196 295 QCURVE SMOOTH",
"196 319 OFFCURVE",
"197 330 QCURVE",
"388 330 LINE",
"398 371 LINE",
"199 371 LINE",
"207 470 OFFCURVE",
"270 575 OFFCURVE",
"319 575 QCURVE SMOOTH",
"362 575 OFFCURVE",
"432 492 OFFCURVE",
"440 433 QCURVE",
"472 433 LINE",
"470 435 OFFCURVE",
"468 468 OFFCURVE",
"468 489 QCURVE SMOOTH",
"468 533 OFFCURVE",
"472 564 QCURVE",
"453 564 OFFCURVE",
"423 573 OFFCURVE",
"402 583 QCURVE",
"372 595 OFFCURVE",
"329 607 OFFCURVE",
"297 607 QCURVE SMOOTH",
"195 607 OFFCURVE",
"67 484 OFFCURVE",
"50 371 QCURVE",
"12 371 LINE",
"2 330 LINE",
"46 330 LINE",
"45 319 OFFCURVE",
"45 295 QCURVE SMOOTH",
"45 269 OFFCURVE",
"46 257 QCURVE",
"12 257 LINE",
"2 216 LINE",
"51 216 LINE",
"68 109 OFFCURVE",
"196 -10 OFFCURVE",
"293 -10 QCURVE SMOOTH",
"319 -10 OFFCURVE",
"365 3 OFFCURVE",
"400 16 QCURVE SMOOTH",
"425 26 OFFCURVE",
"457 35 OFFCURVE",
"472 35 QCURVE SMOOTH",
"478 35 LINE",
"475 53 OFFCURVE",
"475 82 QCURVE SMOOTH",
"475 118 OFFCURVE",
"481 167 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 83 values pushed */
0 7 0 8 5 7 8 103 10 1 5 11 1 4 3 5 4 101 12 1 3 13 1 2 15 3 2 101 0 15 0 0 14 15 0 103 0 9 9 6 95 0 6 6 25 75 0 14 14 1 95 0 1 1 26 1 76 61 60 58 56 54 53 52 51 47 46 45 44 42 40 36 20 34 17 20 17 18 36 35 16 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 485;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"266 607 OFFCURVE",
"177 475 OFFCURVE",
"152 364 QCURVE",
"75 364 LINE",
"48 333 LINE",
"145 333 LINE",
"93 98 LINE SMOOTH",
"46 -98 OFFCURVE",
"5 -161 OFFCURVE",
"-25 -161 QCURVE SMOOTH",
"-41 -161 OFFCURVE",
"-57 -147 OFFCURVE",
"-57 -136 QCURVE SMOOTH",
"-57 -131 OFFCURVE",
"-51 -111 OFFCURVE",
"-51 -105 QCURVE SMOOTH",
"-51 -90 OFFCURVE",
"-73 -77 OFFCURVE",
"-88 -77 QCURVE SMOOTH",
"-110 -77 OFFCURVE",
"-133 -103 OFFCURVE",
"-133 -121 QCURVE SMOOTH",
"-133 -151 OFFCURVE",
"-75 -188 OFFCURVE",
"-35 -188 QCURVE SMOOTH",
"53 -188 OFFCURVE",
"160 -12 OFFCURVE",
"182 87 QCURVE SMOOTH",
"233 333 LINE",
"310 333 LINE",
"339 349 LINE",
"339 364 LINE",
"240 364 LINE",
"266 492 OFFCURVE",
"311 580 OFFCURVE",
"351 580 QCURVE SMOOTH",
"368 580 OFFCURVE",
"386 562 OFFCURVE",
"386 549 QCURVE SMOOTH",
"386 542 OFFCURVE",
"377 521 OFFCURVE",
"377 513 QCURVE SMOOTH",
"377 498 OFFCURVE",
"398 485 OFFCURVE",
"413 485 QCURVE SMOOTH",
"437 485 OFFCURVE",
"460 514 OFFCURVE",
"460 534 QCURVE SMOOTH",
"460 568 OFFCURVE",
"397 607 OFFCURVE",
"352 607 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
8 1 0 1 20 1 3 2 35 1 6 5 3 74 0 0 1 2 1 0 2 126 0 5 3 6 3 5 6 126 8 1 2 7 1 3 5 2 3 101 0 6 0 4 6 4 99 0 1 1 9 95 10 1 9 9 25 1 76 0 0 0 55 0 54 17 21 39 36 35 18 19 39 36 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 450;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"280 607 OFFCURVE",
"176 482 OFFCURVE",
"150 365 QCURVE",
"74 365 LINE",
"40 326 LINE",
"142 326 LINE",
"93 76 LINE",
"65 -73 OFFCURVE",
"34 -154 OFFCURVE",
"7 -154 QCURVE SMOOTH",
"-4 -154 OFFCURVE",
"-16 -142 OFFCURVE",
"-16 -132 QCURVE SMOOTH",
"-16 -125 OFFCURVE",
"-8 -95 OFFCURVE",
"-8 -86 QCURVE SMOOTH",
"-8 -68 OFFCURVE",
"-38 -46 OFFCURVE",
"-62 -46 QCURVE SMOOTH",
"-91 -46 OFFCURVE",
"-126 -78 OFFCURVE",
"-126 -105 QCURVE SMOOTH",
"-126 -146 OFFCURVE",
"-48 -188 OFFCURVE",
"0 -188 QCURVE SMOOTH",
"95 -188 OFFCURVE",
"202 -29 OFFCURVE",
"226 87 QCURVE SMOOTH",
"275 326 LINE",
"347 326 LINE",
"395 354 LINE",
"395 365 LINE",
"283 365 LINE",
"301 477 OFFCURVE",
"337 573 OFFCURVE",
"363 573 QCURVE SMOOTH",
"374 573 OFFCURVE",
"385 560 OFFCURVE",
"385 549 QCURVE SMOOTH",
"385 542 OFFCURVE",
"376 515 OFFCURVE",
"376 504 QCURVE SMOOTH",
"376 485 OFFCURVE",
"406 462 OFFCURVE",
"432 462 QCURVE SMOOTH",
"466 462 OFFCURVE",
"495 500 OFFCURVE",
"495 522 QCURVE SMOOTH",
"495 559 OFFCURVE",
"424 607 OFFCURVE",
"372 607 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
21 1 3 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
0 0 1 2 1 0 112 0 5 3 6 6 5 112 8 1 2 7 1 3 5 2 3 101 0 6 0 4 6 4 100 0 1 1 9 95 10 1 9 9 25 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
0 0 1 2 1 0 2 126 0 5 3 6 6 5 112 8 1 2 7 1 3 5 2 3 101 0 6 0 4 6 4 100 0 1 1 9 95 10 1 9 9 25 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 45 values pushed */
0 0 1 2 1 0 2 126 0 5 3 6 3 5 6 126 8 1 2 7 1 3 5 2 3 101 0 6 0 4 6 4 100 0 1 1 9 95 10 1 9 9 25 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
0 0 0 55 0 54 17 21 40 36 35 18 19 40 36 11 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 485;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"272 0 LINE",
"272 30 LINE",
"220 27 LINE",
"212 27 OFFCURVE",
"201 39 OFFCURVE",
"201 48 QCURVE SMOOTH",
"201 287 LINE",
"276 287 LINE SMOOTH",
"311 287 OFFCURVE",
"355 232 OFFCURVE",
"355 187 QCURVE",
"382 187 LINE",
"382 417 LINE",
"355 417 LINE",
"355 370 OFFCURVE",
"312 315 OFFCURVE",
"276 315 QCURVE SMOOTH",
"201 315 LINE",
"201 556 LINE SMOOTH",
"201 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"330 569 LINE SMOOTH",
"404 569 OFFCURVE",
"472 509 OFFCURVE",
"472 443 QCURVE",
"499 443 LINE",
"499 598 LINE",
"496 597 OFFCURVE",
"484 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"91 569 LINE SMOOTH",
"108 569 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"90 27 QCURVE",
"50 30 LINE"
);
},
{
closed = 1;
nodes = (
"50 143 LINE",
"314 143 LINE",
"314 172 LINE",
"50 172 LINE"
);
}
);
width = 529;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"302 0 LINE",
"302 38 LINE",
"250 35 LINE",
"242 35 OFFCURVE",
"231 47 OFFCURVE",
"231 56 QCURVE SMOOTH",
"231 280 LINE",
"299 280 LINE SMOOTH",
"334 280 OFFCURVE",
"378 225 OFFCURVE",
"378 180 QCURVE",
"412 180 LINE",
"412 417 LINE",
"378 417 LINE",
"378 370 OFFCURVE",
"335 315 OFFCURVE",
"299 315 QCURVE SMOOTH",
"231 315 LINE",
"231 549 LINE SMOOTH",
"231 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"330 562 LINE SMOOTH",
"405 562 OFFCURVE",
"473 505 OFFCURVE",
"472 443 QCURVE",
"507 443 LINE",
"507 598 LINE",
"504 597 OFFCURVE",
"492 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"76 562 LINE SMOOTH",
"93 562 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"75 35 QCURVE",
"39 38 LINE"
);
},
{
closed = 1;
nodes = (
"39 146 LINE",
"331 146 LINE",
"331 182 LINE",
"39 182 LINE"
);
}
);
width = 529;
}
);
unicode = 20A3;
},
{
glyphname = guarani;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"28 145 OFFCURVE",
"165 -10 OFFCURVE",
"298 -10 QCURVE SMOOTH",
"345 -10 OFFCURVE",
"408 4 OFFCURVE",
"453 20 QCURVE SMOOTH",
"497 36 OFFCURVE",
"516 36 QCURVE SMOOTH",
"525 36 OFFCURVE",
"529 35 QCURVE",
"529 224 LINE SMOOTH",
"529 233 OFFCURVE",
"539 245 OFFCURVE",
"548 245 QCURVE",
"589 243 LINE",
"589 272 LINE",
"298 272 LINE",
"298 243 LINE",
"417 245 LINE SMOOTH",
"436 245 OFFCURVE",
"436 223 QCURVE SMOOTH",
"436 63 LINE",
"409 36 OFFCURVE",
"353 16 OFFCURVE",
"308 17 QCURVE SMOOTH",
"130 21 OFFCURVE",
"130 295 QCURVE SMOOTH",
"130 425 OFFCURVE",
"226 582 OFFCURVE",
"303 582 QCURVE SMOOTH",
"389 582 OFFCURVE",
"477 510 OFFCURVE",
"477 448 QCURVE SMOOTH",
"477 437 OFFCURVE",
"476 433 QCURVE",
"516 433 LINE",
"512 481 OFFCURVE",
"512 495 QCURVE SMOOTH",
"512 544 OFFCURVE",
"516 564 QCURVE",
"502 562 OFFCURVE",
"459 578 QCURVE SMOOTH",
"383 606 OFFCURVE",
"306 607 QCURVE SMOOTH",
"173 609 OFFCURVE",
"28 439 OFFCURVE",
"28 295 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 -75 LINE",
"316 -75 LINE",
"316 680 LINE",
"280 680 LINE"
);
}
);
width = 616;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 146 OFFCURVE",
"172 -10 OFFCURVE",
"315 -10 QCURVE SMOOTH",
"364 -10 OFFCURVE",
"437 7 OFFCURVE",
"477 21 QCURVE SMOOTH",
"527 39 OFFCURVE",
"541 37 QCURVE SMOOTH",
"550 36 OFFCURVE",
"560 35 QCURVE",
"560 217 LINE SMOOTH",
"560 226 OFFCURVE",
"570 238 OFFCURVE",
"579 238 QCURVE",
"611 236 LINE",
"611 272 LINE",
"314 272 LINE",
"314 236 LINE",
"403 238 LINE SMOOTH",
"422 238 OFFCURVE",
"422 216 QCURVE SMOOTH",
"422 68 LINE",
"401 44 OFFCURVE",
"355 25 OFFCURVE",
"324 25 QCURVE SMOOTH",
"181 25 OFFCURVE",
"181 288 QCURVE SMOOTH",
"181 428 OFFCURVE",
"261 575 OFFCURVE",
"334 575 QCURVE SMOOTH",
"410 575 OFFCURVE",
"495 506 OFFCURVE",
"495 444 QCURVE SMOOTH",
"495 433 OFFCURVE",
"494 426 QCURVE",
"544 426 LINE",
"540 486 OFFCURVE",
"540 504 QCURVE SMOOTH",
"540 538 OFFCURVE",
"544 564 QCURVE",
"532 562 OFFCURVE",
"479 579 QCURVE SMOOTH",
"392 607 OFFCURVE",
"323 607 QCURVE SMOOTH",
"183 607 OFFCURVE",
"30 449 OFFCURVE",
"30 297 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 -95 LINE",
"336 -95 LINE",
"336 680 LINE",
"293 680 LINE"
);
}
);
width = 630;
}
);
unicode = 20B2;
},
{
glyphname = kip;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"428 52 LINE SMOOTH",
"433 45 OFFCURVE",
"433 38 QCURVE SMOOTH",
"433 26 OFFCURVE",
"416 27 QCURVE SMOOTH",
"362 30 LINE",
"362 0 LINE",
"599 0 LINE",
"599 30 LINE",
"581 27 OFFCURVE",
"565 27 QCURVE SMOOTH",
"552 27 OFFCURVE",
"541 41 QCURVE SMOOTH",
"339 315 LINE",
"258 315 LINE",
"455 540 LINE SMOOTH",
"471 558 OFFCURVE",
"497 570 OFFCURVE",
"513 569 QCURVE SMOOTH",
"547 567 LINE",
"547 597 LINE",
"369 597 LINE",
"369 567 LINE",
"411 569 LINE",
"421 569 OFFCURVE",
"421 560 QCURVE SMOOTH",
"421 553 OFFCURVE",
"404 533 QCURVE SMOOTH",
"227 323 LINE"
);
},
{
closed = 1;
nodes = (
"189 547 LINE SMOOTH",
"189 569 OFFCURVE",
"209 569 QCURVE",
"258 567 LINE",
"258 597 LINE",
"38 597 LINE",
"38 567 LINE",
"77 569 LINE",
"86 570 OFFCURVE",
"96 558 OFFCURVE",
"96 548 QCURVE SMOOTH",
"96 49 LINE SMOOTH",
"96 27 OFFCURVE",
"77 27 QCURVE",
"38 29 LINE",
"38 0 LINE",
"258 0 LINE",
"258 29 LINE",
"209 27 LINE",
"189 27 OFFCURVE",
"189 49 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 304 LINE",
"567 304 LINE",
"567 327 LINE",
"38 327 LINE"
);
}
);
width = 617;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"396 59 LINE SMOOTH",
"401 52 OFFCURVE",
"401 45 QCURVE SMOOTH",
"401 33 OFFCURVE",
"384 34 QCURVE SMOOTH",
"338 37 LINE",
"338 0 LINE",
"623 0 LINE",
"623 37 LINE",
"610 34 OFFCURVE",
"593 34 QCURVE SMOOTH",
"578 34 OFFCURVE",
"569 48 QCURVE SMOOTH",
"395 305 LINE",
"292 305 LINE",
"489 533 LINE SMOOTH",
"504 551 OFFCURVE",
"531 563 OFFCURVE",
"547 562 QCURVE SMOOTH",
"581 560 LINE",
"581 597 LINE",
"401 597 LINE",
"401 560 LINE",
"437 562 LINE",
"447 562 OFFCURVE",
"447 553 QCURVE SMOOTH",
"447 546 OFFCURVE",
"430 526 QCURVE SMOOTH",
"238 298 LINE"
);
},
{
closed = 1;
nodes = (
"221 540 LINE SMOOTH",
"221 562 OFFCURVE",
"241 562 QCURVE",
"290 560 LINE",
"290 597 LINE",
"29 597 LINE",
"29 560 LINE",
"64 562 LINE",
"73 563 OFFCURVE",
"83 551 OFFCURVE",
"83 541 QCURVE SMOOTH",
"83 57 LINE SMOOTH",
"83 34 OFFCURVE",
"66 35 QCURVE SMOOTH",
"29 37 LINE",
"29 0 LINE",
"286 0 LINE",
"286 37 LINE",
"241 35 LINE",
"221 33 OFFCURVE",
"221 57 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 288 LINE",
"599 288 LINE",
"599 318 LINE",
"29 318 LINE"
);
}
);
width = 639;
}
);
unicode = 20AD;
},
{
glyphname = lira;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"439 168 LINE",
"439 130 OFFCURVE",
"417 90 OFFCURVE",
"361 73 OFFCURVE",
"308 73 QCURVE SMOOTH",
"150 73 LINE",
"176 102 OFFCURVE",
"212 182 OFFCURVE",
"212 226 QCURVE SMOOTH",
"212 306 LINE",
"331 306 LINE",
"331 329 LINE",
"212 329 LINE",
"211 355 OFFCURVE",
"202 423 OFFCURVE",
"201 433 QCURVE SMOOTH",
"195 481 OFFCURVE",
"195 487 QCURVE SMOOTH",
"195 531 OFFCURVE",
"246 584 OFFCURVE",
"286 584 QCURVE SMOOTH",
"343 584 OFFCURVE",
"343 547 QCURVE SMOOTH",
"343 542 OFFCURVE",
"335 521 OFFCURVE",
"335 514 QCURVE SMOOTH",
"335 500 OFFCURVE",
"360 480 OFFCURVE",
"376 480 QCURVE SMOOTH",
"392 480 OFFCURVE",
"417 504 OFFCURVE",
"417 520 QCURVE SMOOTH",
"417 557 OFFCURVE",
"345 607 OFFCURVE",
"292 607 QCURVE SMOOTH",
"199 607 OFFCURVE",
"116 513 OFFCURVE",
"116 410 QCURVE SMOOTH",
"116 329 LINE",
"36 329 LINE",
"36 306 LINE",
"116 306 LINE",
"116 156 LINE SMOOTH",
"116 110 OFFCURVE",
"68 26 OFFCURVE",
"28 1 QCURVE",
"30 -3 LINE",
"90 0 OFFCURVE",
"120 0 QCURVE SMOOTH",
"376 0 LINE SMOOTH",
"395 0 OFFCURVE",
"421 -2 QCURVE",
"454 -3 LINE",
"464 168 LINE"
);
},
{
closed = 1;
nodes = (
"36 218 LINE",
"331 218 LINE",
"331 241 LINE",
"36 241 LINE"
);
}
);
width = 507;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"432 168 LINE",
"432 140 OFFCURVE",
"411 110 OFFCURVE",
"358 97 OFFCURVE",
"308 97 QCURVE SMOOTH",
"179 97 LINE",
"213 125 OFFCURVE",
"257 200 OFFCURVE",
"257 241 QCURVE SMOOTH",
"257 299 LINE",
"376 299 LINE",
"376 329 LINE",
"257 329 LINE",
"256 355 OFFCURVE",
"247 423 OFFCURVE",
"246 433 QCURVE SMOOTH",
"240 481 OFFCURVE",
"240 487 QCURVE SMOOTH",
"240 528 OFFCURVE",
"275 577 OFFCURVE",
"303 577 QCURVE SMOOTH",
"342 577 OFFCURVE",
"342 543 QCURVE SMOOTH",
"342 536 OFFCURVE",
"333 512 OFFCURVE",
"333 504 QCURVE SMOOTH",
"333 486 OFFCURVE",
"366 461 OFFCURVE",
"390 461 QCURVE SMOOTH",
"416 461 OFFCURVE",
"452 493 OFFCURVE",
"452 518 QCURVE SMOOTH",
"452 556 OFFCURVE",
"378 607 OFFCURVE",
"318 607 QCURVE SMOOTH",
"207 607 OFFCURVE",
"109 513 OFFCURVE",
"109 410 QCURVE SMOOTH",
"111 329 LINE",
"36 329 LINE",
"36 299 LINE",
"112 299 LINE",
"116 156 LINE SMOOTH",
"116 114 OFFCURVE",
"68 39 OFFCURVE",
"28 16 QCURVE",
"30 -3 LINE",
"105 0 OFFCURVE",
"143 0 QCURVE SMOOTH",
"376 0 LINE SMOOTH",
"401 0 OFFCURVE",
"429 -2 QCURVE SMOOTH",
"454 -3 LINE",
"464 168 LINE"
);
},
{
closed = 1;
nodes = (
"36 208 LINE",
"376 208 LINE",
"376 238 LINE",
"36 238 LINE"
);
}
);
width = 507;
}
);
unicode = 20A4;
},
{
glyphname = liraTurkish;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"201 0 LINE SMOOTH",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"211 569 OFFCURVE",
"219 569 QCURVE SMOOTH",
"270 567 LINE",
"270 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"97 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"93 27 QCURVE",
"50 30 LINE"
);
},
{
closed = 1;
nodes = (
"182 0 LINE",
"323 0 LINE SMOOTH",
"396 0 OFFCURVE",
"490 69 OFFCURVE",
"490 132 QCURVE SMOOTH",
"490 185 OFFCURVE",
"440 251 OFFCURVE",
"403 251 QCURVE SMOOTH",
"387 251 OFFCURVE",
"363 226 OFFCURVE",
"363 210 QCURVE SMOOTH",
"363 194 OFFCURVE",
"383 169 OFFCURVE",
"397 169 QCURVE SMOOTH",
"404 169 OFFCURVE",
"425 177 OFFCURVE",
"430 177 QCURVE SMOOTH",
"467 177 OFFCURVE",
"467 126 QCURVE SMOOTH",
"467 86 OFFCURVE",
"404 29 OFFCURVE",
"360 29 QCURVE SMOOTH",
"182 29 LINE"
);
},
{
closed = 1;
nodes = (
"50 262 LINE",
"345 442 LINE",
"345 471 LINE",
"50 291 LINE"
);
},
{
closed = 1;
nodes = (
"50 162 LINE",
"345 342 LINE",
"345 371 LINE",
"50 191 LINE"
);
}
);
width = 514;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"231 0 LINE SMOOTH",
"231 541 LINE SMOOTH",
"231 550 OFFCURVE",
"241 562 OFFCURVE",
"249 562 QCURVE SMOOTH",
"300 560 LINE",
"300 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"82 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"78 35 QCURVE",
"39 38 LINE"
);
},
{
closed = 1;
nodes = (
"223 0 LINE",
"354 0 LINE SMOOTH",
"423 0 OFFCURVE",
"501 73 OFFCURVE",
"501 140 QCURVE SMOOTH",
"501 210 OFFCURVE",
"450 274 OFFCURVE",
"412 274 QCURVE SMOOTH",
"387 274 OFFCURVE",
"355 238 OFFCURVE",
"355 212 QCURVE SMOOTH",
"355 188 OFFCURVE",
"380 155 OFFCURVE",
"398 155 QCURVE SMOOTH",
"406 155 OFFCURVE",
"430 164 OFFCURVE",
"437 164 QCURVE SMOOTH",
"471 164 OFFCURVE",
"471 119 QCURVE SMOOTH",
"471 85 OFFCURVE",
"422 37 OFFCURVE",
"381 37 QCURVE SMOOTH",
"223 37 LINE"
);
},
{
closed = 1;
nodes = (
"50 254 LINE",
"345 434 LINE",
"345 471 LINE",
"50 291 LINE"
);
},
{
closed = 1;
nodes = (
"50 134 LINE",
"345 314 LINE",
"345 351 LINE",
"50 171 LINE"
);
}
);
width = 514;
}
);
unicode = 20BA;
},
{
glyphname = manat;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"589 0 LINE",
"589 349 LINE SMOOTH",
"589 422 OFFCURVE",
"524 539 OFFCURVE",
"400 607 OFFCURVE",
"315 607 QCURVE SMOOTH",
"230 607 OFFCURVE",
"106 539 OFFCURVE",
"41 420 OFFCURVE",
"41 349 QCURVE SMOOTH",
"41 0 LINE",
"137 0 LINE",
"137 349 LINE SMOOTH",
"137 472 OFFCURVE",
"223 580 OFFCURVE",
"315 580 QCURVE SMOOTH",
"407 580 OFFCURVE",
"493 472 OFFCURVE",
"493 349 QCURVE SMOOTH",
"493 0 LINE"
);
},
{
closed = 1;
nodes = (
"296 55 LINE",
"332 55 LINE",
"332 680 LINE",
"296 680 LINE"
);
}
);
width = 630;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"600 0 LINE",
"600 357 LINE SMOOTH",
"600 427 OFFCURVE",
"532 541 OFFCURVE",
"403 607 OFFCURVE",
"315 607 QCURVE SMOOTH",
"227 607 OFFCURVE",
"98 541 OFFCURVE",
"30 426 OFFCURVE",
"30 357 QCURVE SMOOTH",
"30 0 LINE",
"171 0 LINE",
"171 349 LINE SMOOTH",
"171 472 OFFCURVE",
"240 573 OFFCURVE",
"315 573 QCURVE SMOOTH",
"390 573 OFFCURVE",
"459 470 OFFCURVE",
"459 349 QCURVE SMOOTH",
"459 0 LINE"
);
},
{
closed = 1;
nodes = (
"292 48 LINE",
"335 48 LINE",
"335 680 LINE",
"292 680 LINE"
);
}
);
width = 630;
}
);
unicode = 20BC;
},
{
glyphname = naira;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"456 597 LINE",
"456 567 LINE",
"505 569 LINE",
"508 569 LINE SMOOTH",
"525 569 OFFCURVE",
"525 549 QCURVE SMOOTH",
"525 155 LINE",
"200 597 LINE",
"45 597 LINE",
"45 567 LINE",
"84 569 LINE",
"93 570 OFFCURVE",
"104 557 OFFCURVE",
"104 548 QCURVE SMOOTH",
"104 49 LINE SMOOTH",
"104 27 OFFCURVE",
"84 27 QCURVE",
"45 29 LINE",
"45 0 LINE",
"206 0 LINE",
"206 29 LINE",
"157 27 LINE",
"138 27 OFFCURVE",
"138 49 QCURVE SMOOTH",
"138 525 LINE",
"529 -6 LINE",
"559 -6 LINE",
"559 548 LINE SMOOTH",
"559 569 OFFCURVE",
"576 569 QCURVE SMOOTH",
"578 569 LINE",
"617 567 LINE",
"617 597 LINE"
);
},
{
closed = 1;
nodes = (
"45 308 LINE",
"617 308 LINE",
"617 331 LINE",
"45 331 LINE"
);
}
);
width = 662;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"475 597 LINE",
"475 567 LINE",
"524 569 LINE",
"527 569 LINE SMOOTH",
"544 569 OFFCURVE",
"544 549 QCURVE SMOOTH",
"544 183 LINE",
"240 597 LINE",
"34 597 LINE",
"34 567 LINE",
"73 569 LINE",
"82 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE SMOOTH",
"93 49 LINE SMOOTH",
"93 27 OFFCURVE",
"73 27 QCURVE",
"34 29 LINE",
"34 0 LINE",
"202 0 LINE",
"202 29 LINE",
"153 27 LINE",
"134 27 OFFCURVE",
"134 49 QCURVE SMOOTH",
"134 525 LINE",
"525 -6 LINE",
"585 -6 LINE",
"585 548 LINE SMOOTH",
"585 569 OFFCURVE",
"602 569 QCURVE SMOOTH",
"604 569 LINE",
"643 567 LINE",
"643 597 LINE"
);
},
{
closed = 1;
nodes = (
"34 298 LINE",
"643 298 LINE",
"643 328 LINE",
"34 328 LINE"
);
}
);
width = 677;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"30 0 LINE",
"250 0 LINE",
"250 29 LINE",
"201 27 LINE",
"181 27 OFFCURVE",
"181 49 QCURVE SMOOTH",
"181 263 LINE",
"286 263 LINE SMOOTH",
"370 263 OFFCURVE",
"468 357 OFFCURVE",
"468 436 QCURVE SMOOTH",
"468 518 OFFCURVE",
"369 597 OFFCURVE",
"265 597 QCURVE SMOOTH",
"30 597 LINE",
"30 567 LINE",
"65 569 LINE SMOOTH",
"78 570 OFFCURVE",
"88 559 OFFCURVE",
"88 547 QCURVE SMOOTH",
"88 49 LINE SMOOTH",
"88 27 OFFCURVE",
"69 27 QCURVE",
"30 29 LINE"
);
},
{
closed = 1;
nodes = (
"181 291 LINE",
"181 557 LINE SMOOTH",
"181 562 OFFCURVE",
"189 569 OFFCURVE",
"193 569 QCURVE SMOOTH",
"249 569 LINE SMOOTH",
"305 569 OFFCURVE",
"372 496 OFFCURVE",
"372 436 QCURVE SMOOTH",
"372 373 OFFCURVE",
"311 291 OFFCURVE",
"265 291 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"30 418 LINE",
"532 418 LINE",
"532 441 LINE",
"30 441 LINE"
);
}
);
width = 553;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"289 0 LINE",
"289 37 LINE",
"240 35 LINE",
"220 35 OFFCURVE",
"220 57 QCURVE SMOOTH",
"220 248 LINE",
"318 248 LINE SMOOTH",
"407 248 OFFCURVE",
"512 347 OFFCURVE",
"512 429 QCURVE SMOOTH",
"512 514 OFFCURVE",
"404 597 OFFCURVE",
"291 597 QCURVE SMOOTH",
"28 597 LINE",
"28 560 LINE",
"59 562 LINE SMOOTH",
"72 563 OFFCURVE",
"82 552 OFFCURVE",
"82 540 QCURVE SMOOTH",
"82 57 LINE SMOOTH",
"82 34 OFFCURVE",
"65 35 QCURVE SMOOTH",
"28 37 LINE"
);
},
{
closed = 1;
nodes = (
"220 284 LINE",
"220 550 LINE SMOOTH",
"220 555 OFFCURVE",
"228 562 OFFCURVE",
"232 562 QCURVE SMOOTH",
"272 562 LINE SMOOTH",
"315 562 OFFCURVE",
"368 488 OFFCURVE",
"368 429 QCURVE SMOOTH",
"368 366 OFFCURVE",
"315 284 OFFCURVE",
"275 284 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"28 408 LINE",
"576 408 LINE",
"576 438 LINE",
"28 438 LINE"
);
}
);
width = 587;
}
);
unicode = 20A7;
},
{
glyphname = peso;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"30 0 LINE",
"250 0 LINE",
"250 29 LINE",
"201 27 LINE",
"181 27 OFFCURVE",
"181 49 QCURVE SMOOTH",
"181 263 LINE",
"286 263 LINE SMOOTH",
"370 263 OFFCURVE",
"468 357 OFFCURVE",
"468 436 QCURVE SMOOTH",
"468 518 OFFCURVE",
"369 597 OFFCURVE",
"265 597 QCURVE SMOOTH",
"30 597 LINE",
"30 567 LINE",
"65 569 LINE SMOOTH",
"78 570 OFFCURVE",
"88 559 OFFCURVE",
"88 547 QCURVE SMOOTH",
"88 49 LINE SMOOTH",
"88 27 OFFCURVE",
"69 27 QCURVE",
"30 29 LINE"
);
},
{
closed = 1;
nodes = (
"181 291 LINE",
"181 557 LINE SMOOTH",
"181 562 OFFCURVE",
"189 569 OFFCURVE",
"193 569 QCURVE SMOOTH",
"249 569 LINE SMOOTH",
"305 569 OFFCURVE",
"372 496 OFFCURVE",
"372 436 QCURVE SMOOTH",
"372 373 OFFCURVE",
"311 291 OFFCURVE",
"265 291 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"30 458 LINE",
"532 458 LINE",
"532 481 LINE",
"30 481 LINE"
);
},
{
closed = 1;
nodes = (
"30 361 LINE",
"532 361 LINE",
"532 384 LINE",
"30 384 LINE"
);
}
);
width = 553;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"289 0 LINE",
"289 37 LINE",
"240 35 LINE",
"220 35 OFFCURVE",
"220 57 QCURVE SMOOTH",
"220 248 LINE",
"318 248 LINE SMOOTH",
"407 248 OFFCURVE",
"512 347 OFFCURVE",
"512 429 QCURVE SMOOTH",
"512 514 OFFCURVE",
"404 597 OFFCURVE",
"291 597 QCURVE SMOOTH",
"28 597 LINE",
"28 560 LINE",
"59 562 LINE SMOOTH",
"72 563 OFFCURVE",
"82 552 OFFCURVE",
"82 540 QCURVE SMOOTH",
"82 57 LINE SMOOTH",
"82 34 OFFCURVE",
"65 35 QCURVE SMOOTH",
"28 37 LINE"
);
},
{
closed = 1;
nodes = (
"220 284 LINE",
"220 550 LINE SMOOTH",
"220 555 OFFCURVE",
"228 562 OFFCURVE",
"232 562 QCURVE SMOOTH",
"272 562 LINE SMOOTH",
"315 562 OFFCURVE",
"368 488 OFFCURVE",
"368 429 QCURVE SMOOTH",
"368 366 OFFCURVE",
"315 284 OFFCURVE",
"275 284 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"28 448 LINE",
"576 448 LINE",
"576 478 LINE",
"28 478 LINE"
);
},
{
closed = 1;
nodes = (
"28 353 LINE",
"576 353 LINE",
"576 383 LINE",
"28 383 LINE"
);
}
);
width = 587;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"270 0 LINE",
"270 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 263 LINE",
"306 263 LINE SMOOTH",
"390 263 OFFCURVE",
"488 357 OFFCURVE",
"488 436 QCURVE SMOOTH",
"488 518 OFFCURVE",
"389 597 OFFCURVE",
"285 597 QCURVE SMOOTH",
"50 597 LINE",
"50 567 LINE",
"85 569 LINE SMOOTH",
"98 570 OFFCURVE",
"108 559 OFFCURVE",
"108 547 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"201 291 LINE",
"201 557 LINE SMOOTH",
"201 562 OFFCURVE",
"209 569 OFFCURVE",
"213 569 QCURVE SMOOTH",
"269 569 LINE SMOOTH",
"325 569 OFFCURVE",
"392 496 OFFCURVE",
"392 436 QCURVE SMOOTH",
"392 373 OFFCURVE",
"331 291 OFFCURVE",
"285 291 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"50 143 LINE",
"314 143 LINE",
"314 172 LINE",
"50 172 LINE"
);
},
{
closed = 1;
nodes = (
"50 263 LINE",
"174 263 LINE",
"174 292 LINE",
"50 292 LINE"
);
}
);
width = 523;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"300 0 LINE",
"300 37 LINE",
"251 35 LINE",
"231 35 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 248 LINE",
"329 248 LINE SMOOTH",
"418 248 OFFCURVE",
"523 347 OFFCURVE",
"523 429 QCURVE SMOOTH",
"523 514 OFFCURVE",
"415 597 OFFCURVE",
"302 597 QCURVE SMOOTH",
"39 597 LINE",
"39 560 LINE",
"70 562 LINE SMOOTH",
"83 563 OFFCURVE",
"93 552 OFFCURVE",
"93 540 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"231 284 LINE",
"231 550 LINE SMOOTH",
"231 555 OFFCURVE",
"239 562 OFFCURVE",
"243 562 QCURVE SMOOTH",
"283 562 LINE SMOOTH",
"326 562 OFFCURVE",
"379 488 OFFCURVE",
"379 429 QCURVE SMOOTH",
"379 366 OFFCURVE",
"326 284 OFFCURVE",
"286 284 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 136 LINE",
"331 136 LINE",
"331 172 LINE",
"39 172 LINE"
);
},
{
closed = 1;
nodes = (
"39 248 LINE",
"161 248 LINE",
"161 284 LINE",
"39 284 LINE"
);
}
);
width = 547;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"33 569 LINE",
"141 569 LINE SMOOTH",
"197 569 OFFCURVE",
"264 496 OFFCURVE",
"264 446 QCURVE SMOOTH",
"264 393 OFFCURVE",
"203 311 OFFCURVE",
"157 311 QCURVE SMOOTH",
"33 311 LINE",
"33 283 LINE",
"178 283 LINE SMOOTH",
"262 283 OFFCURVE",
"360 377 OFFCURVE",
"360 446 QCURVE SMOOTH",
"360 518 OFFCURVE",
"261 597 OFFCURVE",
"157 597 QCURVE SMOOTH",
"33 597 LINE"
);
},
{
closed = 1;
nodes = (
"33 283 LINE",
"242 0 LINE",
"375 0 LINE",
"375 30 LINE",
"357 27 OFFCURVE",
"341 27 QCURVE SMOOTH",
"328 27 OFFCURVE",
"317 41 QCURVE SMOOTH",
"125 301 LINE"
);
},
{
closed = 1;
nodes = (
"33 574 LINE",
"501 574 LINE",
"507 597 LINE",
"33 597 LINE"
);
},
{
closed = 1;
nodes = (
"33 427 LINE",
"463 427 LINE",
"469 450 LINE",
"33 450 LINE"
);
}
);
width = 523;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"51 562 LINE",
"153 562 LINE SMOOTH",
"196 562 OFFCURVE",
"249 488 OFFCURVE",
"249 439 QCURVE SMOOTH",
"249 386 OFFCURVE",
"196 304 OFFCURVE",
"156 304 QCURVE SMOOTH",
"51 304 LINE",
"51 268 LINE",
"199 268 LINE SMOOTH",
"288 268 OFFCURVE",
"393 367 OFFCURVE",
"393 439 QCURVE SMOOTH",
"393 514 OFFCURVE",
"285 597 OFFCURVE",
"172 597 QCURVE SMOOTH",
"51 597 LINE"
);
},
{
closed = 1;
nodes = (
"51 268 LINE",
"217 0 LINE",
"420 0 LINE",
"420 37 LINE",
"407 34 OFFCURVE",
"380 34 QCURVE SMOOTH",
"365 34 OFFCURVE",
"356 48 QCURVE SMOOTH",
"191 296 LINE"
);
},
{
closed = 1;
nodes = (
"51 567 LINE",
"525 567 LINE",
"530 597 LINE",
"51 597 LINE"
);
},
{
closed = 1;
nodes = (
"51 408 LINE",
"499 408 LINE",
"504 438 LINE",
"51 438 LINE"
);
}
);
width = 547;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"439 168 LINE",
"439 130 OFFCURVE",
"417 90 OFFCURVE",
"361 73 OFFCURVE",
"308 73 QCURVE SMOOTH",
"150 73 LINE",
"176 102 OFFCURVE",
"212 182 OFFCURVE",
"212 226 QCURVE SMOOTH",
"212 306 LINE",
"331 306 LINE",
"331 329 LINE",
"212 329 LINE",
"211 355 OFFCURVE",
"202 423 OFFCURVE",
"201 433 QCURVE SMOOTH",
"195 481 OFFCURVE",
"195 487 QCURVE SMOOTH",
"195 531 OFFCURVE",
"246 584 OFFCURVE",
"286 584 QCURVE SMOOTH",
"343 584 OFFCURVE",
"343 547 QCURVE SMOOTH",
"343 542 OFFCURVE",
"335 521 OFFCURVE",
"335 514 QCURVE SMOOTH",
"335 500 OFFCURVE",
"360 480 OFFCURVE",
"376 480 QCURVE SMOOTH",
"392 480 OFFCURVE",
"417 504 OFFCURVE",
"417 520 QCURVE SMOOTH",
"417 557 OFFCURVE",
"345 607 OFFCURVE",
"292 607 QCURVE SMOOTH",
"199 607 OFFCURVE",
"116 513 OFFCURVE",
"116 410 QCURVE SMOOTH",
"116 329 LINE",
"36 329 LINE",
"36 306 LINE",
"116 306 LINE",
"116 156 LINE SMOOTH",
"116 110 OFFCURVE",
"68 26 OFFCURVE",
"28 1 QCURVE",
"30 -3 LINE",
"90 0 OFFCURVE",
"120 0 QCURVE SMOOTH",
"376 0 LINE SMOOTH",
"395 0 OFFCURVE",
"421 -2 QCURVE",
"454 -3 LINE",
"464 168 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
36 28 2 5 6 1 74 0 5 6 3 6 5 3 126 7 1 3 8 1 2 10 3 2 101 0 6 6 4 95 0 4 4 25 75 11 1 10 10 0 93 1 1 0 0 18 75 0 9 9 0 93 1 1 0 0 18 0 76 0 0 0 53 0 53 50 48 17 23 38 36 35 17 21 65 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 507;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"432 168 LINE",
"432 140 OFFCURVE",
"411 110 OFFCURVE",
"358 97 OFFCURVE",
"308 97 QCURVE SMOOTH",
"179 97 LINE",
"213 125 OFFCURVE",
"257 200 OFFCURVE",
"257 241 QCURVE SMOOTH",
"257 299 LINE",
"376 299 LINE",
"376 329 LINE",
"257 329 LINE",
"256 355 OFFCURVE",
"247 423 OFFCURVE",
"246 433 QCURVE SMOOTH",
"240 481 OFFCURVE",
"240 487 QCURVE SMOOTH",
"240 528 OFFCURVE",
"275 577 OFFCURVE",
"303 577 QCURVE SMOOTH",
"342 577 OFFCURVE",
"342 543 QCURVE SMOOTH",
"342 536 OFFCURVE",
"333 512 OFFCURVE",
"333 504 QCURVE SMOOTH",
"333 486 OFFCURVE",
"366 461 OFFCURVE",
"390 461 QCURVE SMOOTH",
"416 461 OFFCURVE",
"452 493 OFFCURVE",
"452 518 QCURVE SMOOTH",
"452 556 OFFCURVE",
"378 607 OFFCURVE",
"318 607 QCURVE SMOOTH",
"207 607 OFFCURVE",
"109 513 OFFCURVE",
"109 410 QCURVE SMOOTH",
"111 329 LINE",
"36 329 LINE",
"36 299 LINE",
"112 299 LINE",
"116 156 LINE SMOOTH",
"116 114 OFFCURVE",
"68 39 OFFCURVE",
"28 16 QCURVE",
"30 -3 LINE",
"105 0 OFFCURVE",
"143 0 QCURVE SMOOTH",
"376 0 LINE SMOOTH",
"401 0 OFFCURVE",
"429 -2 QCURVE SMOOTH",
"454 -3 LINE",
"464 168 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
37 29 2 5 6 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 5 6 3 6 5 112 7 1 3 8 1 2 10 3 2 101 0 6 6 4 95 0 4 4 25 75 11 1 10 10 0 95 1 1 0 0 18 75 0 9 9 0 95 1 1 0 0 18 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 52 values pushed */
0 5 6 3 6 5 3 126 7 1 3 8 1 2 10 3 2 101 0 6 6 4 95 0 4 4 25 75 11 1 10 10 0 95 1 1 0 0 18 75 0 9 9 0 95 1 1 0 0 18 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
0 0 0 54 0 54 51 49 17 23 38 36 35 17 21 66 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 507;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"701 597 LINE",
"701 567 LINE",
"753 569 LINE",
"759 570 OFFCURVE",
"766 563 OFFCURVE",
"766 557 QCURVE",
"764 549 LINE",
"654 143 LINE",
"511 547 LINE SMOOTH",
"508 554 OFFCURVE",
"513 569 OFFCURVE",
"521 569 QCURVE",
"563 567 LINE",
"563 597 LINE",
"355 597 LINE",
"355 567 LINE",
"396 569 LINE",
"404 570 OFFCURVE",
"413 564 OFFCURVE",
"417 556 QCURVE",
"307 155 LINE",
"178 547 LINE",
"175 558 LINE",
"175 564 OFFCURVE",
"181 569 OFFCURVE",
"188 569 QCURVE",
"241 567 LINE",
"241 597 LINE",
"25 597 LINE",
"25 567 LINE",
"55 569 LINE",
"69 569 OFFCURVE",
"76 547 QCURVE",
"267 -10 LINE",
"286 -10 LINE",
"436 509 LINE",
"622 -10 LINE",
"638 -10 LINE",
"799 548 LINE",
"803 561 OFFCURVE",
"815 570 OFFCURVE",
"824 569 QCURVE",
"854 567 LINE",
"854 597 LINE"
);
},
{
closed = 1;
nodes = (
"25 349 LINE",
"854 349 LINE",
"854 372 LINE",
"25 372 LINE"
);
}
);
width = 884;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"721 597 LINE",
"721 560 LINE",
"773 562 LINE",
"779 563 OFFCURVE",
"786 556 OFFCURVE",
"786 550 QCURVE",
"784 542 LINE",
"675 159 LINE",
"555 540 LINE",
"552 547 OFFCURVE",
"557 562 OFFCURVE",
"565 562 QCURVE",
"607 560 LINE",
"607 597 LINE",
"360 597 LINE",
"360 560 LINE",
"401 562 LINE",
"412 562 OFFCURVE",
"421 548 OFFCURVE",
"429 526 QCURVE",
"331 182 LINE",
"222 540 LINE",
"219 551 LINE",
"219 557 OFFCURVE",
"225 562 OFFCURVE",
"232 562 QCURVE",
"282 560 LINE",
"282 597 LINE",
"27 597 LINE",
"27 560 LINE",
"57 562 LINE",
"71 562 OFFCURVE",
"78 540 QCURVE",
"260 -10 LINE",
"309 -10 LINE",
"451 468 LINE",
"615 -10 LINE",
"661 -10 LINE",
"826 541 LINE SMOOTH",
"828 549 OFFCURVE",
"842 563 OFFCURVE",
"851 562 QCURVE",
"881 560 LINE",
"881 597 LINE"
);
},
{
closed = 1;
nodes = (
"27 348 LINE",
"881 348 LINE",
"881 378 LINE",
"27 378 LINE"
);
}
);
width = 911;
}
);
unicode = 20A9;
},
{
glyphname = yen;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"365 597 LINE",
"365 567 LINE",
"417 569 LINE",
"427 569 OFFCURVE",
"427 559 QCURVE SMOOTH",
"427 554 OFFCURVE",
"424 549 QCURVE SMOOTH",
"293 317 LINE",
"156 545 LINE SMOOTH",
"151 553 OFFCURVE",
"151 559 QCURVE SMOOTH",
"151 569 OFFCURVE",
"162 569 QCURVE SMOOTH",
"163 569 LINE",
"216 567 LINE",
"216 597 LINE",
"-5 597 LINE",
"-5 567 LINE",
"23 569 LINE",
"37 569 OFFCURVE",
"47 550 QCURVE",
"173 341 LINE",
"88 341 LINE",
"88 312 LINE",
"190 312 LINE",
"220 263 LINE",
"220 231 LINE",
"88 231 LINE",
"88 202 LINE",
"220 202 LINE",
"220 49 LINE SMOOTH",
"220 27 OFFCURVE",
"201 27 QCURVE",
"152 29 LINE",
"152 0 LINE",
"381 0 LINE",
"381 29 LINE",
"333 27 LINE",
"313 27 OFFCURVE",
"313 48 QCURVE SMOOTH",
"313 202 LINE",
"445 202 LINE",
"445 231 LINE",
"313 231 LINE",
"313 287 LINE",
"327 312 LINE",
"445 312 LINE",
"445 341 LINE",
"343 341 LINE",
"459 548 LINE SMOOTH",
"471 569 OFFCURVE",
"487 569 QCURVE",
"517 567 LINE",
"517 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 96 values pushed */
49 43 36 3 1 0 46 1 2 1 28 9 2 3 2 3 74 11 1 1 10 1 2 3 1 2 101 9 1 3 8 1 4 5 3 4 101 15 14 12 3 0 0 13 93 17 16 2 13 13 17 75 7 1 5 5 6 93 0 6 6 21 6 76 0 0 0 53 0 53 52 50 42 39 38 37 35 34 32 31 30 29 27 26 18 33 17 34 17 18 17 18 33 18 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 507;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"409 597 LINE",
"409 560 LINE",
"461 562 LINE",
"471 562 OFFCURVE",
"471 552 QCURVE SMOOTH",
"471 547 OFFCURVE",
"468 542 QCURVE SMOOTH",
"342 317 LINE",
"209 538 LINE SMOOTH",
"204 546 OFFCURVE",
"204 552 QCURVE SMOOTH",
"204 562 OFFCURVE",
"215 562 QCURVE SMOOTH",
"216 562 LINE",
"269 560 LINE",
"269 597 LINE",
"-1 597 LINE",
"-1 560 LINE",
"28 562 LINE",
"40 562 OFFCURVE",
"52 543 QCURVE SMOOTH",
"173 341 LINE",
"88 341 LINE",
"88 305 LINE",
"195 305 LINE",
"224 256 LINE",
"224 231 LINE",
"88 231 LINE",
"88 195 LINE",
"224 195 LINE",
"224 57 LINE SMOOTH",
"224 35 OFFCURVE",
"205 35 QCURVE",
"156 37 LINE",
"156 0 LINE",
"430 0 LINE",
"430 37 LINE",
"382 35 LINE",
"362 35 OFFCURVE",
"362 56 QCURVE SMOOTH",
"362 195 LINE",
"500 195 LINE",
"500 231 LINE",
"362 231 LINE",
"362 275 LINE",
"379 305 LINE",
"500 305 LINE",
"500 341 LINE",
"399 341 LINE",
"511 541 LINE SMOOTH",
"523 562 OFFCURVE",
"539 562 QCURVE",
"569 560 LINE",
"569 597 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 95 values pushed */
49 43 2 1 0 46 1 2 1 28 9 2 3 2 3 74 11 1 1 10 1 2 3 1 2 101 9 1 3 8 1 4 5 3 4 101 15 14 12 3 0 0 13 93 17 16 2 13 13 17 75 7 1 5 5 6 93 0 6 6 21 6 76 0 0 0 53 0 53 52 50 42 39 38 37 36 34 32 31 30 29 27 26 18 33 17 34 17 18 17 18 33 18 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 577;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 158 OFFCURVE",
"87 127 OFFCURVE",
"115 127 QCURVE SMOOTH",
"143 127 OFFCURVE",
"180 158 OFFCURVE",
"180 184 QCURVE SMOOTH",
"180 210 OFFCURVE",
"143 242 OFFCURVE",
"115 242 QCURVE SMOOTH",
"87 242 OFFCURVE",
"50 210 OFFCURVE",
"50 184 QCURVE SMOOTH"
);
}
);
width = 230;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"42 159 OFFCURVE",
"93 119 OFFCURVE",
"134 119 QCURVE SMOOTH",
"175 119 OFFCURVE",
"227 159 OFFCURVE",
"227 194 QCURVE SMOOTH",
"227 228 OFFCURVE",
"175 269 OFFCURVE",
"134 269 QCURVE SMOOTH",
"94 269 OFFCURVE",
"42 228 OFFCURVE",
"42 194 QCURVE SMOOTH"
);
}
);
width = 270;
}
);
note = uni2219;
unicode = 2219;
},
{
glyphname = commercialMinusSign;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"203 15 LINE",
"421 646 LINE",
"383 655 LINE",
"164 26 LINE"
);
},
{
closed = 1;
nodes = (
"104 545 OFFCURVE",
"141 514 OFFCURVE",
"169 514 QCURVE SMOOTH",
"197 514 OFFCURVE",
"234 545 OFFCURVE",
"234 571 QCURVE SMOOTH",
"234 597 OFFCURVE",
"197 629 OFFCURVE",
"169 629 QCURVE SMOOTH",
"141 629 OFFCURVE",
"104 597 OFFCURVE",
"104 571 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"326 56 OFFCURVE",
"363 25 OFFCURVE",
"391 25 QCURVE SMOOTH",
"419 25 OFFCURVE",
"456 56 OFFCURVE",
"456 82 QCURVE SMOOTH",
"456 108 OFFCURVE",
"419 140 OFFCURVE",
"391 140 QCURVE SMOOTH",
"363 140 OFFCURVE",
"326 108 OFFCURVE",
"326 82 QCURVE SMOOTH"
);
}
);
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"211 13 LINE",
"429 645 LINE",
"383 655 LINE",
"164 26 LINE"
);
},
{
closed = 1;
nodes = (
"89 539 OFFCURVE",
"140 499 OFFCURVE",
"181 499 QCURVE SMOOTH",
"222 499 OFFCURVE",
"274 539 OFFCURVE",
"274 574 QCURVE SMOOTH",
"274 608 OFFCURVE",
"222 649 OFFCURVE",
"181 649 QCURVE SMOOTH",
"141 649 OFFCURVE",
"89 608 OFFCURVE",
"89 574 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 61 OFFCURVE",
"362 21 OFFCURVE",
"403 21 QCURVE SMOOTH",
"444 21 OFFCURVE",
"496 61 OFFCURVE",
"496 96 QCURVE SMOOTH",
"496 130 OFFCURVE",
"444 171 OFFCURVE",
"403 171 QCURVE SMOOTH",
"363 171 OFFCURVE",
"311 130 OFFCURVE",
"311 96 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"-110 -18 LINE",
"319 585 LINE",
"285 605 LINE",
"-143 5 LINE"
);
}
);
width = 139;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"-106 -21 LINE",
"323 581 LINE",
"281 609 LINE",
"-146 10 LINE"
);
}
);
width = 139;
}
);
note = uni2215;
unicode = 2215;
},
{
glyphname = plus;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"206 259 LINE",
"206 73 LINE",
"255 73 LINE",
"255 259 LINE",
"440 259 LINE",
"440 303 LINE",
"255 303 LINE",
"255 488 LINE",
"206 488 LINE",
"206 303 LINE",
"20 303 LINE",
"20 259 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 1 0 1 131 0 4 3 4 132 2 1 0 3 3 0 85 2 1 0 0 3 93 6 5 2 3 0 3 77 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"202 255 LINE",
"202 73 LINE",
"259 73 LINE",
"259 255 LINE",
"440 255 LINE",
"440 307 LINE",
"259 307 LINE",
"259 488 LINE",
"202 488 LINE",
"202 307 LINE",
"20 307 LINE",
"20 255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 1 0 1 131 0 4 3 4 132 2 1 0 3 3 0 85 2 1 0 0 3 93 6 5 2 3 0 3 77 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"440 260 LINE",
"440 301 LINE",
"20 301 LINE",
"20 260 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
1 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"440 256 LINE",
"440 305 LINE",
"20 305 LINE",
"20 256 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
1 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"94 103 LINE",
"230 239 LINE",
"368 102 LINE",
"396 130 LINE",
"259 268 LINE",
"396 404 LINE",
"366 433 LINE",
"229 296 LINE",
"95 432 LINE",
"66 403 LINE",
"202 268 LINE",
"64 131 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
9 5 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"98 99 LINE",
"230 231 LINE",
"364 98 LINE",
"400 134 LINE",
"267 267 LINE",
"400 400 LINE",
"362 437 LINE",
"229 304 LINE",
"99 436 LINE",
"62 399 LINE",
"195 268 LINE",
"60 135 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
9 5 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = divide;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"175 414 OFFCURVE",
"205 389 OFFCURVE",
"229 389 QCURVE SMOOTH",
"253 389 OFFCURVE",
"284 415 OFFCURVE",
"284 436 QCURVE SMOOTH",
"284 459 OFFCURVE",
"253 484 OFFCURVE",
"229 484 QCURVE SMOOTH",
"205 484 OFFCURVE",
"175 459 OFFCURVE",
"175 436 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"441 244 LINE",
"441 295 LINE",
"19 295 LINE",
"19 244 LINE"
);
},
{
closed = 1;
nodes = (
"175 75 OFFCURVE",
"205 50 OFFCURVE",
"229 50 QCURVE SMOOTH",
"253 50 OFFCURVE",
"284 76 OFFCURVE",
"284 97 QCURVE SMOOTH",
"284 120 OFFCURVE",
"253 145 OFFCURVE",
"229 145 QCURVE SMOOTH",
"205 145 OFFCURVE",
"175 118 OFFCURVE",
"175 97 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 4 2 3 101 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 12 12 25 23 19 17 12 15 12 15 20 36 33 7 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"153 409 OFFCURVE",
"195 376 OFFCURVE",
"229 376 QCURVE SMOOTH",
"264 376 OFFCURVE",
"307 409 OFFCURVE",
"307 438 QCURVE SMOOTH",
"307 467 OFFCURVE",
"263 501 OFFCURVE",
"229 501 QCURVE SMOOTH",
"195 501 OFFCURVE",
"153 467 OFFCURVE",
"153 438 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"441 240 LINE",
"441 299 LINE",
"19 299 LINE",
"19 240 LINE"
);
},
{
closed = 1;
nodes = (
"153 67 OFFCURVE",
"195 34 OFFCURVE",
"229 34 QCURVE SMOOTH",
"264 34 OFFCURVE",
"307 67 OFFCURVE",
"307 96 QCURVE SMOOTH",
"307 125 OFFCURVE",
"263 159 OFFCURVE",
"229 159 QCURVE SMOOTH",
"196 159 OFFCURVE",
"153 124 OFFCURVE",
"153 96 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 4 2 3 101 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 12 12 25 23 19 17 12 15 12 15 20 36 33 7 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"425 302 LINE",
"425 345 LINE",
"35 345 LINE",
"35 302 LINE"
);
},
{
closed = 1;
nodes = (
"425 103 LINE",
"425 146 LINE",
"35 146 LINE",
"35 103 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 0 4 1 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 5 1 3 2 3 77 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"425 295 LINE",
"425 345 LINE",
"35 345 LINE",
"35 295 LINE"
);
},
{
closed = 1;
nodes = (
"425 103 LINE",
"425 154 LINE",
"35 154 LINE",
"35 103 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 0 4 1 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 5 1 3 2 3 77 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"425 345 LINE",
"286 345 LINE",
"320 444 LINE",
"282 453 LINE",
"244 345 LINE",
"35 345 LINE",
"35 302 LINE",
"229 302 LINE",
"175 146 LINE",
"35 146 LINE",
"35 103 LINE",
"160 103 LINE",
"126 6 LINE",
"165 -5 LINE",
"202 103 LINE",
"425 103 LINE",
"425 146 LINE",
"217 146 LINE",
"271 302 LINE",
"425 302 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
16 6 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"425 345 LINE",
"291 345 LINE",
"325 444 LINE",
"278 455 LINE",
"240 345 LINE",
"35 345 LINE",
"35 295 LINE",
"222 295 LINE",
"173 154 LINE",
"35 154 LINE",
"35 103 LINE",
"155 103 LINE",
"122 8 LINE",
"170 -5 LINE",
"207 103 LINE",
"425 103 LINE",
"425 154 LINE",
"225 154 LINE",
"274 295 LINE",
"425 295 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
16 6 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"406 207 LINE",
"406 231 LINE",
"54 442 LINE",
"54 393 LINE",
"310 239 LINE",
"353 218 LINE",
"310 198 LINE",
"54 43 LINE",
"54 -5 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"406 207 LINE",
"406 231 LINE",
"54 442 LINE",
"54 386 LINE",
"310 232 LINE",
"342 218 LINE",
"310 206 LINE",
"54 51 LINE",
"54 -5 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"54 229 LINE",
"54 205 LINE",
"406 -6 LINE",
"406 43 LINE",
"150 197 LINE",
"107 218 LINE",
"150 238 LINE",
"406 393 LINE",
"406 441 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"54 229 LINE",
"54 205 LINE",
"406 -6 LINE",
"406 50 LINE",
"150 204 LINE",
"118 218 LINE",
"150 230 LINE",
"406 385 LINE",
"406 441 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"54 477 LINE",
"54 431 LINE",
"285 325 LINE",
"356 298 LINE",
"285 272 LINE",
"54 166 LINE",
"54 120 LINE",
"406 286 LINE",
"406 311 LINE"
);
},
{
closed = 1;
nodes = (
"54 0 LINE",
"406 0 LINE",
"406 41 LINE",
"54 41 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
11 9 8 2 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"54 477 LINE",
"54 424 LINE",
"285 318 LINE",
"345 298 LINE",
"285 280 LINE",
"54 174 LINE",
"54 120 LINE",
"406 286 LINE",
"406 311 LINE"
);
},
{
closed = 1;
nodes = (
"54 0 LINE",
"406 0 LINE",
"406 49 LINE",
"54 49 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
11 9 8 2 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"54 286 LINE",
"406 120 LINE",
"406 166 LINE",
"175 272 LINE",
"104 298 LINE",
"175 325 LINE",
"406 431 LINE",
"406 477 LINE",
"54 311 LINE"
);
},
{
closed = 1;
nodes = (
"54 41 LINE",
"54 0 LINE",
"406 0 LINE",
"406 41 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
10 9 7 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"54 286 LINE",
"406 120 LINE",
"406 174 LINE",
"175 280 LINE",
"115 298 LINE",
"175 318 LINE",
"406 424 LINE",
"406 477 LINE",
"54 311 LINE"
);
},
{
closed = 1;
nodes = (
"54 49 LINE",
"54 0 LINE",
"406 0 LINE",
"406 49 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
10 9 7 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"207 274 LINE",
"207 80 LINE",
"252 80 LINE",
"252 274 LINE",
"440 274 LINE",
"440 315 LINE",
"252 315 LINE",
"252 506 LINE",
"207 506 LINE",
"207 315 LINE",
"20 315 LINE",
"20 274 LINE"
);
},
{
closed = 1;
nodes = (
"440 0 LINE",
"440 41 LINE",
"20 41 LINE",
"20 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
0 1 0 1 131 0 4 3 6 3 4 6 126 2 1 0 8 5 2 3 4 0 3 101 0 6 6 7 93 9 1 7 7 21 7 76 12 12 0 0 12 15 12 15 14 13 0 11 0 11 17 17 17 17 17 10 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"203 273 LINE",
"203 87 LINE",
"256 87 LINE",
"256 273 LINE",
"440 273 LINE",
"440 322 LINE",
"256 322 LINE",
"256 506 LINE",
"203 506 LINE",
"203 322 LINE",
"20 322 LINE",
"20 273 LINE"
);
},
{
closed = 1;
nodes = (
"440 0 LINE",
"440 49 LINE",
"20 49 LINE",
"20 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
0 1 0 1 131 0 4 3 6 3 4 6 126 2 1 0 8 5 2 3 4 0 3 101 0 6 6 7 93 9 1 7 7 21 7 76 12 12 0 0 12 15 12 15 14 13 0 11 0 11 17 17 17 17 17 10 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 278 LINE",
"78 311 OFFCURVE",
"111 332 OFFCURVE",
"137 332 QCURVE SMOOTH",
"155 332 OFFCURVE",
"197 316 OFFCURVE",
"227 300 QCURVE",
"264 282 OFFCURVE",
"302 267 OFFCURVE",
"321 267 QCURVE SMOOTH",
"353 267 OFFCURVE",
"413 308 OFFCURVE",
"435 345 QCURVE",
"407 374 LINE",
"384 341 OFFCURVE",
"346 315 OFFCURVE",
"321 315 QCURVE SMOOTH",
"303 315 OFFCURVE",
"263 331 OFFCURVE",
"232 347 QCURVE SMOOTH",
"199 364 OFFCURVE",
"157 380 OFFCURVE",
"137 380 QCURVE SMOOTH",
"71 380 OFFCURVE",
"28 307 QCURVE"
);
},
{
closed = 1;
nodes = (
"55 78 LINE",
"78 111 OFFCURVE",
"111 132 OFFCURVE",
"137 132 QCURVE SMOOTH",
"155 132 OFFCURVE",
"197 116 OFFCURVE",
"227 100 QCURVE",
"264 82 OFFCURVE",
"302 67 OFFCURVE",
"321 67 QCURVE SMOOTH",
"353 67 OFFCURVE",
"413 108 OFFCURVE",
"435 145 QCURVE",
"407 174 LINE",
"384 141 OFFCURVE",
"346 115 OFFCURVE",
"321 115 QCURVE SMOOTH",
"303 115 OFFCURVE",
"263 131 OFFCURVE",
"232 147 QCURVE SMOOTH",
"199 164 OFFCURVE",
"157 180 OFFCURVE",
"137 180 QCURVE SMOOTH",
"71 180 OFFCURVE",
"28 107 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
38 25 13 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"58 271 LINE",
"81 304 OFFCURVE",
"114 325 OFFCURVE",
"140 325 QCURVE SMOOTH",
"158 325 OFFCURVE",
"200 309 OFFCURVE",
"230 293 QCURVE",
"267 275 OFFCURVE",
"305 260 OFFCURVE",
"324 260 QCURVE SMOOTH",
"356 260 OFFCURVE",
"416 301 OFFCURVE",
"438 338 QCURVE",
"406 369 LINE",
"382 338 OFFCURVE",
"348 315 OFFCURVE",
"324 315 QCURVE SMOOTH",
"306 315 OFFCURVE",
"266 331 OFFCURVE",
"235 347 QCURVE SMOOTH",
"202 364 OFFCURVE",
"160 380 OFFCURVE",
"140 380 QCURVE SMOOTH",
"69 380 OFFCURVE",
"27 302 QCURVE"
);
},
{
closed = 1;
nodes = (
"58 78 LINE",
"81 111 OFFCURVE",
"114 132 OFFCURVE",
"140 132 QCURVE SMOOTH",
"158 132 OFFCURVE",
"200 116 OFFCURVE",
"230 100 QCURVE",
"267 82 OFFCURVE",
"305 67 OFFCURVE",
"324 67 QCURVE SMOOTH",
"356 67 OFFCURVE",
"416 108 OFFCURVE",
"438 145 QCURVE",
"406 179 LINE",
"382 147 OFFCURVE",
"348 123 OFFCURVE",
"324 123 QCURVE SMOOTH",
"306 123 OFFCURVE",
"266 139 OFFCURVE",
"235 155 QCURVE SMOOTH",
"202 172 OFFCURVE",
"160 188 OFFCURVE",
"140 188 QCURVE SMOOTH",
"76 188 OFFCURVE",
"27 112 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
39 26 13 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"49 226 LINE",
"72 259 OFFCURVE",
"105 280 OFFCURVE",
"131 280 QCURVE SMOOTH",
"151 280 OFFCURVE",
"195 264 OFFCURVE",
"226 248 QCURVE SMOOTH",
"264 230 OFFCURVE",
"304 215 OFFCURVE",
"325 215 QCURVE SMOOTH",
"357 215 OFFCURVE",
"417 256 OFFCURVE",
"439 293 QCURVE",
"411 322 LINE",
"388 289 OFFCURVE",
"350 263 OFFCURVE",
"325 263 QCURVE SMOOTH",
"305 263 OFFCURVE",
"263 279 OFFCURVE",
"231 295 QCURVE SMOOTH",
"197 312 OFFCURVE",
"153 328 OFFCURVE",
"131 328 QCURVE SMOOTH",
"65 328 OFFCURVE",
"22 255 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 43 values pushed */
11 10 2 3 0 24 23 2 2 1 2 74 0 0 0 3 1 0 3 103 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 36 37 36 32 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"49 222 LINE",
"72 255 OFFCURVE",
"105 276 OFFCURVE",
"131 276 QCURVE SMOOTH",
"151 276 OFFCURVE",
"195 260 OFFCURVE",
"226 244 QCURVE SMOOTH",
"264 226 OFFCURVE",
"304 211 OFFCURVE",
"325 211 QCURVE SMOOTH",
"358 211 OFFCURVE",
"421 254 OFFCURVE",
"443 293 QCURVE",
"411 326 LINE",
"388 293 OFFCURVE",
"350 267 OFFCURVE",
"325 267 QCURVE SMOOTH",
"305 267 OFFCURVE",
"263 283 OFFCURVE",
"231 299 QCURVE SMOOTH",
"197 316 OFFCURVE",
"153 332 OFFCURVE",
"131 332 QCURVE SMOOTH",
"67 332 OFFCURVE",
"18 256 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 43 values pushed */
12 11 2 3 0 25 24 2 2 1 2 74 0 0 0 3 1 0 3 103 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 36 37 36 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 460;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"397 319 LINE",
"397 146 LINE",
"440 146 LINE",
"440 360 LINE",
"20 360 LINE",
"20 319 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
0 1 2 1 132 0 0 2 2 0 85 0 0 0 2 93 3 1 2 0 2 77 0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"390 312 LINE",
"390 146 LINE",
"440 146 LINE",
"440 360 LINE",
"20 360 LINE",
"20 312 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
0 1 2 1 132 0 0 2 2 0 85 0 0 0 2 93 3 1 2 0 2 77 0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"64 321 LINE",
"211 566 LINE",
"230 608 LINE",
"250 566 LINE",
"395 321 LINE",
"442 321 LINE",
"242 657 LINE",
"219 657 LINE",
"18 321 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 28 values pushed */
6 1 1 0 1 74 0 0 1 0 131 3 2 2 1 1 116 0 0 0 8 0 8 17 17 4 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"72 321 LINE",
"219 566 LINE",
"230 597 LINE",
"243 566 LINE",
"388 321 LINE",
"442 321 LINE",
"242 657 LINE",
"219 657 LINE",
"18 321 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 28 values pushed */
6 1 1 0 1 74 0 0 1 0 131 3 2 2 1 1 116 0 0 0 8 0 8 17 17 4 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 460;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"344 420 OFFCURVE",
"280 367 OFFCURVE",
"256 319 QCURVE",
"238 361 OFFCURVE",
"164 420 OFFCURVE",
"117 420 QCURVE SMOOTH",
"62 420 OFFCURVE",
"0 337 OFFCURVE",
"0 274 QCURVE SMOOTH",
"0 203 OFFCURVE",
"75 109 OFFCURVE",
"140 109 QCURVE SMOOTH",
"195 109 OFFCURVE",
"259 162 OFFCURVE",
"283 210 QCURVE",
"301 168 OFFCURVE",
"375 109 OFFCURVE",
"422 109 QCURVE SMOOTH",
"477 109 OFFCURVE",
"539 192 OFFCURVE",
"539 255 QCURVE SMOOTH",
"539 326 OFFCURVE",
"464 420 OFFCURVE",
"399 420 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 181 OFFCURVE",
"298 240 QCURVE",
"315 276 OFFCURVE",
"382 351 OFFCURVE",
"427 351 QCURVE SMOOTH",
"466 351 OFFCURVE",
"514 301 OFFCURVE",
"514 261 QCURVE SMOOTH",
"514 221 OFFCURVE",
"465 181 OFFCURVE",
"418 181 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73 178 OFFCURVE",
"25 229 OFFCURVE",
"25 269 QCURVE SMOOTH",
"25 308 OFFCURVE",
"74 348 OFFCURVE",
"121 348 QCURVE SMOOTH",
"201 348 OFFCURVE",
"241 289 QCURVE",
"224 253 OFFCURVE",
"157 178 OFFCURVE",
"112 178 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
40 36 28 24 4 0 3 48 
CALL[ ]\011/* CallFunction */";
};
width = 539;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"344 420 OFFCURVE",
"279 372 OFFCURVE",
"252 329 QCURVE",
"238 369 OFFCURVE",
"168 420 OFFCURVE",
"125 420 QCURVE SMOOTH",
"67 420 OFFCURVE",
"0 330 OFFCURVE",
"0 261 QCURVE SMOOTH",
"0 185 OFFCURVE",
"80 87 OFFCURVE",
"152 87 QCURVE SMOOTH",
"203 87 OFFCURVE",
"269 135 OFFCURVE",
"295 178 QCURVE",
"310 138 OFFCURVE",
"378 87 OFFCURVE",
"422 87 QCURVE SMOOTH",
"479 87 OFFCURVE",
"547 177 OFFCURVE",
"547 246 QCURVE SMOOTH",
"547 321 OFFCURVE",
"466 420 OFFCURVE",
"395 420 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"363 194 OFFCURVE",
"321 220 QCURVE",
"347 266 OFFCURVE",
"403 314 OFFCURVE",
"447 314 QCURVE SMOOTH",
"478 314 OFFCURVE",
"514 283 OFFCURVE",
"514 257 QCURVE SMOOTH",
"514 227 OFFCURVE",
"465 194 OFFCURVE",
"421 194 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 193 OFFCURVE",
"33 224 OFFCURVE",
"33 250 QCURVE SMOOTH",
"33 281 OFFCURVE",
"81 313 OFFCURVE",
"126 313 QCURVE SMOOTH",
"183 313 OFFCURVE",
"226 287 QCURVE",
"199 241 OFFCURVE",
"145 193 OFFCURVE",
"101 193 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
38 35 28 24 4 0 3 48 
CALL[ ]\011/* CallFunction */";
};
width = 547;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = emptyset;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"393 331 OFFCURVE",
"354 372 QCURVE",
"402 419 LINE",
"379 442 LINE",
"332 395 LINE",
"286 435 OFFCURVE",
"222 435 QCURVE SMOOTH",
"151 435 OFFCURVE",
"52 335 OFFCURVE",
"52 265 QCURVE SMOOTH",
"52 203 OFFCURVE",
"91 156 QCURVE",
"42 107 LINE",
"65 84 LINE",
"114 133 LINE",
"161 94 OFFCURVE",
"222 94 QCURVE SMOOTH",
"289 94 OFFCURVE",
"393 191 OFFCURVE",
"393 265 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"184 126 OFFCURVE",
"120 163 OFFCURVE",
"83 227 OFFCURVE",
"83 265 QCURVE SMOOTH",
"83 302 OFFCURVE",
"120 365 OFFCURVE",
"184 403 OFFCURVE",
"222 403 QCURVE SMOOTH",
"260 403 OFFCURVE",
"324 365 OFFCURVE",
"361 302 OFFCURVE",
"361 265 QCURVE SMOOTH",
"361 227 OFFCURVE",
"324 163 OFFCURVE",
"260 126 OFFCURVE",
"222 126 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 161 LINE",
"118 137 LINE",
"350 367 LINE",
"327 391 LINE"
);
}
);
width = 443;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"393 322 OFFCURVE",
"358 368 QCURVE",
"406 415 LINE",
"375 446 LINE",
"328 399 LINE",
"281 435 OFFCURVE",
"222 435 QCURVE SMOOTH",
"153 435 OFFCURVE",
"52 335 OFFCURVE",
"52 265 QCURVE SMOOTH",
"52 206 OFFCURVE",
"88 161 QCURVE",
"38 111 LINE",
"69 80 LINE",
"119 130 LINE",
"163 94 OFFCURVE",
"222 94 QCURVE SMOOTH",
"290 94 OFFCURVE",
"393 191 OFFCURVE",
"393 265 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 134 OFFCURVE",
"126 169 OFFCURVE",
"91 230 OFFCURVE",
"91 265 QCURVE SMOOTH",
"91 300 OFFCURVE",
"126 360 OFFCURVE",
"187 396 OFFCURVE",
"222 396 QCURVE SMOOTH",
"258 396 OFFCURVE",
"318 360 OFFCURVE",
"354 300 OFFCURVE",
"354 265 QCURVE SMOOTH",
"354 230 OFFCURVE",
"319 169 OFFCURVE",
"258 134 OFFCURVE",
"222 134 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 167 LINE",
"123 135 LINE",
"354 362 LINE",
"323 395 LINE"
);
}
);
width = 443;
}
);
unicode = 2205;
},
{
glyphname = integral;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"239 779 OFFCURVE",
"166 629 OFFCURVE",
"166 514 QCURVE SMOOTH",
"166 431 OFFCURVE",
"185 182 QCURVE SMOOTH",
"187 151 OFFCURVE",
"193 64 OFFCURVE",
"193 52 QCURVE SMOOTH",
"193 -48 OFFCURVE",
"176 -136 OFFCURVE",
"155 -136 QCURVE SMOOTH",
"142 -136 OFFCURVE",
"131 -124 OFFCURVE",
"132 -96 QCURVE SMOOTH",
"132 -81 OFFCURVE",
"119 -65 OFFCURVE",
"99 -65 QCURVE SMOOTH",
"75 -65 OFFCURVE",
"51 -91 OFFCURVE",
"51 -109 QCURVE SMOOTH",
"51 -137 OFFCURVE",
"97 -167 OFFCURVE",
"131 -167 QCURVE SMOOTH",
"196 -167 OFFCURVE",
"269 -17 OFFCURVE",
"269 98 QCURVE SMOOTH",
"269 155 OFFCURVE",
"255 362 OFFCURVE",
"253 384 QCURVE SMOOTH",
"242 527 OFFCURVE",
"242 560 QCURVE SMOOTH",
"242 660 OFFCURVE",
"259 748 OFFCURVE",
"280 748 QCURVE SMOOTH",
"293 748 OFFCURVE",
"304 736 OFFCURVE",
"303 708 QCURVE SMOOTH",
"303 693 OFFCURVE",
"316 677 OFFCURVE",
"336 677 QCURVE SMOOTH",
"360 677 OFFCURVE",
"384 703 OFFCURVE",
"384 721 QCURVE SMOOTH",
"384 749 OFFCURVE",
"338 779 OFFCURVE",
"304 779 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
22 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 425;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"271 779 OFFCURVE",
"175 621 OFFCURVE",
"175 499 QCURVE SMOOTH",
"175 419 OFFCURVE",
"194 179 QCURVE SMOOTH",
"196 150 OFFCURVE",
"202 64 OFFCURVE",
"202 52 QCURVE SMOOTH",
"202 -45 OFFCURVE",
"185 -129 OFFCURVE",
"164 -129 QCURVE SMOOTH",
"150 -129 OFFCURVE",
"141 -114 OFFCURVE",
"141 -99 QCURVE SMOOTH",
"141 -63 OFFCURVE",
"114 -28 OFFCURVE",
"86 -28 QCURVE SMOOTH",
"59 -28 OFFCURVE",
"29 -60 OFFCURVE",
"29 -86 QCURVE SMOOTH",
"29 -121 OFFCURVE",
"95 -167 OFFCURVE",
"140 -167 QCURVE SMOOTH",
"228 -167 OFFCURVE",
"323 -10 OFFCURVE",
"323 113 QCURVE SMOOTH",
"323 168 OFFCURVE",
"309 368 OFFCURVE",
"307 390 QCURVE SMOOTH",
"296 528 OFFCURVE",
"296 560 QCURVE SMOOTH",
"296 657 OFFCURVE",
"313 741 OFFCURVE",
"334 741 QCURVE SMOOTH",
"348 741 OFFCURVE",
"357 726 OFFCURVE",
"357 711 QCURVE SMOOTH",
"356 670 OFFCURVE",
"384 640 OFFCURVE",
"413 640 QCURVE SMOOTH",
"439 640 OFFCURVE",
"470 674 OFFCURVE",
"470 698 QCURVE SMOOTH",
"470 734 OFFCURVE",
"404 779 OFFCURVE",
"358 779 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
22 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 496;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Ohm;
layers = (
{
components = (
{
name = Omega;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 670;
},
{
components = (
{
name = Omega;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 670;
}
);
note = uni2126;
unicode = 2126;
},
{
glyphname = increment;
layers = (
{
components = (
{
name = Delta;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 601;
},
{
components = (
{
name = Delta;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 609;
}
);
note = uni2206;
unicode = 2206;
},
{
glyphname = product;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 -80 LINE",
"270 -80 LINE",
"270 -51 LINE",
"221 -53 LINE",
"201 -53 OFFCURVE",
"201 -31 QCURVE SMOOTH",
"201 566 LINE",
"432 566 LINE",
"432 -31 LINE SMOOTH",
"432 -53 OFFCURVE",
"413 -53 QCURVE",
"364 -51 LINE",
"364 -80 LINE",
"583 -80 LINE",
"583 -51 LINE",
"544 -53 LINE",
"525 -53 OFFCURVE",
"525 -31 QCURVE SMOOTH",
"525 548 LINE SMOOTH",
"525 557 OFFCURVE",
"534 569 OFFCURVE",
"542 569 QCURVE SMOOTH",
"544 569 LINE",
"583 567 LINE",
"583 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE SMOOTH",
"108 570 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 -31 LINE SMOOTH",
"108 -53 OFFCURVE",
"89 -53 QCURVE",
"50 -51 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
20 8 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 633;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 -80 LINE",
"281 -80 LINE",
"281 -44 LINE",
"251 -46 LINE",
"231 -46 OFFCURVE",
"231 -24 QCURVE SMOOTH",
"231 559 LINE",
"410 559 LINE",
"410 -24 LINE SMOOTH",
"410 -46 OFFCURVE",
"391 -46 QCURVE",
"360 -44 LINE",
"360 -80 LINE",
"602 -80 LINE",
"602 -44 LINE",
"567 -46 LINE",
"548 -46 OFFCURVE",
"548 -24 QCURVE SMOOTH",
"548 541 LINE SMOOTH",
"548 550 OFFCURVE",
"557 562 OFFCURVE",
"565 562 QCURVE SMOOTH",
"567 562 LINE",
"602 560 LINE",
"602 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE SMOOTH",
"93 563 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 -24 LINE SMOOTH",
"93 -46 OFFCURVE",
"74 -46 QCURVE",
"39 -44 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
20 8 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 641;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"444 69 LINE",
"439 23 OFFCURVE",
"396 -15 OFFCURVE",
"352 -15 QCURVE SMOOTH",
"107 -15 LINE",
"305 305 LINE",
"159 569 LINE",
"344 569 LINE SMOOTH",
"389 569 OFFCURVE",
"431 524 OFFCURVE",
"436 468 QCURVE",
"467 468 LINE",
"457 566 OFFCURVE",
"457 600 QCURVE",
"446 597 OFFCURVE",
"354 597 QCURVE SMOOTH",
"48 597 LINE",
"48 574 LINE",
"229 255 LINE",
"38 -55 LINE",
"38 -80 LINE",
"354 -80 LINE SMOOTH",
"444 -80 OFFCURVE",
"455 -83 QCURVE",
"455 -66 OFFCURVE",
"468 30 OFFCURVE",
"475 69 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
13 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 512;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"438 73 LINE",
"433 41 OFFCURVE",
"389 15 OFFCURVE",
"348 15 QCURVE SMOOTH",
"133 15 LINE",
"325 324 LINE",
"200 562 LINE",
"343 562 LINE SMOOTH",
"388 562 OFFCURVE",
"430 520 OFFCURVE",
"435 468 QCURVE",
"472 468 LINE",
"462 566 OFFCURVE",
"462 600 QCURVE",
"451 597 OFFCURVE",
"359 597 QCURVE SMOOTH",
"48 597 LINE",
"48 546 LINE",
"218 238 LINE",
"38 -55 LINE",
"38 -80 LINE",
"354 -80 LINE SMOOTH",
"444 -80 OFFCURVE",
"455 -83 QCURVE",
"455 -61 OFFCURVE",
"467 42 OFFCURVE",
"474 73 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
13 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 511;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"292 38 LINE",
"174 357 LINE",
"165 382 LINE",
"10 331 LINE",
"19 306 LINE",
"95 331 LINE",
"263 -95 LINE",
"290 -95 LINE",
"482 786 LINE",
"456 786 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
2 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"311 124 LINE",
"219 372 LINE",
"210 397 LINE",
"10 331 LINE",
"21 299 LINE",
"98 324 LINE",
"263 -95 LINE",
"298 -95 LINE",
"490 786 LINE",
"456 786 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
2 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = partialdiff;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"165 605 OFFCURVE",
"75 559 OFFCURVE",
"75 519 QCURVE SMOOTH",
"75 497 OFFCURVE",
"103 473 OFFCURVE",
"123 473 QCURVE SMOOTH",
"138 473 OFFCURVE",
"158 487 OFFCURVE",
"158 500 QCURVE SMOOTH",
"158 507 OFFCURVE",
"149 529 OFFCURVE",
"149 537 QCURVE SMOOTH",
"149 556 OFFCURVE",
"187 578 OFFCURVE",
"212 578 QCURVE SMOOTH",
"270 578 OFFCURVE",
"336 457 OFFCURVE",
"336 357 QCURVE SMOOTH",
"336 327 OFFCURVE",
"333 286 QCURVE",
"276 325 OFFCURVE",
"206 325 QCURVE SMOOTH",
"158 325 OFFCURVE",
"80 283 OFFCURVE",
"35 205 OFFCURVE",
"35 154 QCURVE SMOOTH",
"35 95 OFFCURVE",
"92 21 OFFCURVE",
"176 -11 OFFCURVE",
"217 -11 QCURVE SMOOTH",
"299 -11 OFFCURVE",
"391 107 OFFCURVE",
"424 261 OFFCURVE",
"424 330 QCURVE SMOOTH",
"424 418 OFFCURVE",
"371 542 OFFCURVE",
"278 605 OFFCURVE",
"219 605 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167 16 OFFCURVE",
"122 86 OFFCURVE",
"122 141 QCURVE SMOOTH",
"122 209 OFFCURVE",
"189 288 OFFCURVE",
"239 288 QCURVE SMOOTH",
"283 288 OFFCURVE",
"329 249 QCURVE",
"316 152 OFFCURVE",
"255 16 OFFCURVE",
"203 16 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
43 39 6 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 466;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"162 605 OFFCURVE",
"60 555 OFFCURVE",
"60 509 QCURVE SMOOTH",
"60 484 OFFCURVE",
"92 449 OFFCURVE",
"122 449 QCURVE SMOOTH",
"154 449 OFFCURVE",
"183 474 OFFCURVE",
"183 491 QCURVE SMOOTH",
"183 504 OFFCURVE",
"174 531 OFFCURVE",
"174 538 QCURVE SMOOTH",
"174 554 OFFCURVE",
"198 571 OFFCURVE",
"219 571 QCURVE SMOOTH",
"267 571 OFFCURVE",
"321 455 OFFCURVE",
"321 357 QCURVE SMOOTH",
"321 341 OFFCURVE",
"319 291 QCURVE",
"268 325 OFFCURVE",
"191 325 QCURVE SMOOTH",
"143 325 OFFCURVE",
"65 283 OFFCURVE",
"20 205 OFFCURVE",
"20 154 QCURVE SMOOTH",
"20 95 OFFCURVE",
"85 21 OFFCURVE",
"179 -11 OFFCURVE",
"225 -11 QCURVE SMOOTH",
"315 -11 OFFCURVE",
"417 102 OFFCURVE",
"454 250 OFFCURVE",
"454 315 QCURVE SMOOTH",
"454 408 OFFCURVE",
"394 539 OFFCURVE",
"290 605 OFFCURVE",
"224 605 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186 24 OFFCURVE",
"152 74 OFFCURVE",
"152 125 QCURVE SMOOTH",
"152 201 OFFCURVE",
"205 281 OFFCURVE",
"247 281 QCURVE SMOOTH",
"286 281 OFFCURVE",
"315 249 QCURVE",
"306 156 OFFCURVE",
"258 24 OFFCURVE",
"218 24 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
42 39 6 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 476;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = micro;
layers = (
{
components = (
{
name = mu;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "NPUSHB[ ]\011/* 82 values pushed */
5 1 7 5 11 1 0 7 21 1 2 1 3 74 8 1 5 5 6 93 9 1 6 6 20 75 11 10 2 7 7 0 93 0 0 0 21 75 11 10 2 7 7 1 95 0 1 1 26 75 4 1 2 2 3 93 0 3 3 22 3 76 0 0 0 43 0 42 40 39 36 35 17 36 17 17 21 37 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 536;
},
{
components = (
{
name = mu;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
5 1 7 5 10 1 1 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 48 values pushed */
8 1 5 5 6 93 9 1 6 6 20 75 11 10 2 7 7 0 93 0 0 0 21 75 11 10 2 7 7 1 95 0 1 1 18 75 4 1 2 2 3 93 0 3 3 22 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 48 values pushed */
8 1 5 5 6 93 9 1 6 6 20 75 11 10 2 7 7 0 93 0 0 0 21 75 11 10 2 7 7 1 95 0 1 1 26 75 4 1 2 2 3 93 0 3 3 22 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
0 0 0 43 0 43 40 39 37 35 17 36 17 17 36 21 17 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 540;
}
);
note = uni00B5;
unicode = 00B5;
},
{
glyphname = percent;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"84 -18 LINE",
"513 585 LINE",
"479 605 LINE",
"51 5 LINE"
);
},
{
closed = 1;
nodes = (
"26 407 OFFCURVE",
"91 328 OFFCURVE",
"153 328 QCURVE SMOOTH",
"214 328 OFFCURVE",
"279 406 OFFCURVE",
"279 467 QCURVE SMOOTH",
"279 528 OFFCURVE",
"213 607 OFFCURVE",
"153 607 QCURVE SMOOTH",
"94 607 OFFCURVE",
"26 529 OFFCURVE",
"26 467 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 531 OFFCURVE",
"124 589 OFFCURVE",
"153 589 QCURVE SMOOTH",
"182 589 OFFCURVE",
"206 533 OFFCURVE",
"206 468 QCURVE SMOOTH",
"206 403 OFFCURVE",
"182 346 OFFCURVE",
"153 346 QCURVE SMOOTH",
"124 346 OFFCURVE",
"100 402 OFFCURVE",
"100 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 69 OFFCURVE",
"358 -10 OFFCURVE",
"420 -10 QCURVE SMOOTH",
"481 -10 OFFCURVE",
"546 68 OFFCURVE",
"546 129 QCURVE SMOOTH",
"546 190 OFFCURVE",
"480 269 OFFCURVE",
"420 269 QCURVE SMOOTH",
"361 269 OFFCURVE",
"293 191 OFFCURVE",
"293 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"367 193 OFFCURVE",
"391 251 OFFCURVE",
"420 251 QCURVE SMOOTH",
"449 251 OFFCURVE",
"473 195 OFFCURVE",
"473 130 QCURVE SMOOTH",
"473 65 OFFCURVE",
"449 8 OFFCURVE",
"420 8 QCURVE SMOOTH",
"391 8 OFFCURVE",
"367 64 OFFCURVE",
"367 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
14 1 2 3 1 74 0 2 0 1 4 2 1 103 0 4 0 7 6 4 7 103 0 3 3 0 95 0 0 0 25 75 0 6 6 5 95 0 5 5 26 5 76 36 36 36 36 36 40 36 33 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 572;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"104 -21 LINE",
"533 581 LINE",
"491 609 LINE",
"64 10 LINE"
);
},
{
closed = 1;
nodes = (
"7 406 OFFCURVE",
"84 328 OFFCURVE",
"157 328 QCURVE SMOOTH",
"229 328 OFFCURVE",
"308 406 OFFCURVE",
"308 467 QCURVE SMOOTH",
"308 529 OFFCURVE",
"229 607 OFFCURVE",
"157 607 QCURVE SMOOTH",
"87 607 OFFCURVE",
"7 530 OFFCURVE",
"7 467 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 532 OFFCURVE",
"133 583 OFFCURVE",
"157 583 QCURVE SMOOTH",
"182 583 OFFCURVE",
"201 534 OFFCURVE",
"201 468 QCURVE SMOOTH",
"201 403 OFFCURVE",
"182 354 OFFCURVE",
"157 354 QCURVE SMOOTH",
"133 354 OFFCURVE",
"114 402 OFFCURVE",
"114 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 69 OFFCURVE",
"371 -10 OFFCURVE",
"443 -10 QCURVE SMOOTH",
"516 -10 OFFCURVE",
"594 68 OFFCURVE",
"594 129 QCURVE SMOOTH",
"594 191 OFFCURVE",
"516 269 OFFCURVE",
"443 269 QCURVE SMOOTH",
"373 269 OFFCURVE",
"293 192 OFFCURVE",
"293 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"401 195 OFFCURVE",
"419 245 OFFCURVE",
"443 245 QCURVE SMOOTH",
"468 245 OFFCURVE",
"487 196 OFFCURVE",
"487 130 QCURVE SMOOTH",
"487 65 OFFCURVE",
"468 16 OFFCURVE",
"443 16 QCURVE SMOOTH",
"419 16 OFFCURVE",
"401 64 OFFCURVE",
"401 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
2 1 2 3 1 74 0 2 0 1 4 2 1 103 0 4 0 7 6 4 7 103 0 3 3 0 95 0 0 0 25 75 0 6 6 5 95 0 5 5 26 5 76 36 36 36 36 36 36 36 37 8 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 601;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"84 -18 LINE",
"513 585 LINE",
"479 605 LINE",
"51 5 LINE"
);
},
{
closed = 1;
nodes = (
"26 407 OFFCURVE",
"91 328 OFFCURVE",
"153 328 QCURVE SMOOTH",
"214 328 OFFCURVE",
"279 406 OFFCURVE",
"279 467 QCURVE SMOOTH",
"279 528 OFFCURVE",
"213 607 OFFCURVE",
"153 607 QCURVE SMOOTH",
"94 607 OFFCURVE",
"26 529 OFFCURVE",
"26 467 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 531 OFFCURVE",
"124 589 OFFCURVE",
"153 589 QCURVE SMOOTH",
"182 589 OFFCURVE",
"206 533 OFFCURVE",
"206 468 QCURVE SMOOTH",
"206 403 OFFCURVE",
"182 346 OFFCURVE",
"153 346 QCURVE SMOOTH",
"124 346 OFFCURVE",
"100 402 OFFCURVE",
"100 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"613 69 OFFCURVE",
"678 -10 OFFCURVE",
"740 -10 QCURVE SMOOTH",
"801 -10 OFFCURVE",
"866 68 OFFCURVE",
"866 129 QCURVE SMOOTH",
"866 190 OFFCURVE",
"800 269 OFFCURVE",
"740 269 QCURVE SMOOTH",
"681 269 OFFCURVE",
"613 191 OFFCURVE",
"613 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"687 193 OFFCURVE",
"711 251 OFFCURVE",
"740 251 QCURVE SMOOTH",
"769 251 OFFCURVE",
"793 195 OFFCURVE",
"793 130 QCURVE SMOOTH",
"793 65 OFFCURVE",
"769 8 OFFCURVE",
"740 8 QCURVE SMOOTH",
"711 8 OFFCURVE",
"687 64 OFFCURVE",
"687 130 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 69 OFFCURVE",
"358 -10 OFFCURVE",
"420 -10 QCURVE SMOOTH",
"481 -10 OFFCURVE",
"546 68 OFFCURVE",
"546 129 QCURVE SMOOTH",
"546 190 OFFCURVE",
"480 269 OFFCURVE",
"420 269 QCURVE SMOOTH",
"361 269 OFFCURVE",
"293 191 OFFCURVE",
"293 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"367 193 OFFCURVE",
"391 251 OFFCURVE",
"420 251 QCURVE SMOOTH",
"449 251 OFFCURVE",
"473 195 OFFCURVE",
"473 130 QCURVE SMOOTH",
"473 65 OFFCURVE",
"449 8 OFFCURVE",
"420 8 QCURVE SMOOTH",
"391 8 OFFCURVE",
"367 64 OFFCURVE",
"367 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
14 1 2 3 1 74 0 2 0 1 4 2 1 103 6 1 4 11 1 9 8 4 9 103 0 3 3 0 95 0 0 0 25 75 10 1 8 8 5 95 7 1 5 5 26 5 76 73 71 67 65 61 59 36 36 36 36 36 36 40 36 33 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 892;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"111 -21 LINE",
"540 581 LINE",
"498 609 LINE",
"71 10 LINE"
);
},
{
closed = 1;
nodes = (
"14 407 OFFCURVE",
"92 328 OFFCURVE",
"164 328 QCURVE SMOOTH",
"237 328 OFFCURVE",
"315 406 OFFCURVE",
"315 467 QCURVE SMOOTH",
"315 529 OFFCURVE",
"237 607 OFFCURVE",
"164 607 QCURVE SMOOTH",
"94 607 OFFCURVE",
"14 530 OFFCURVE",
"14 467 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"122 533 OFFCURVE",
"140 583 OFFCURVE",
"164 583 QCURVE SMOOTH",
"189 583 OFFCURVE",
"208 534 OFFCURVE",
"208 468 QCURVE SMOOTH",
"208 403 OFFCURVE",
"189 354 OFFCURVE",
"164 354 QCURVE SMOOTH",
"140 354 OFFCURVE",
"122 402 OFFCURVE",
"122 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"643 69 OFFCURVE",
"721 -10 OFFCURVE",
"793 -10 QCURVE SMOOTH",
"866 -10 OFFCURVE",
"944 68 OFFCURVE",
"944 129 QCURVE SMOOTH",
"944 191 OFFCURVE",
"866 269 OFFCURVE",
"793 269 QCURVE SMOOTH",
"723 269 OFFCURVE",
"643 192 OFFCURVE",
"643 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"751 195 OFFCURVE",
"769 245 OFFCURVE",
"793 245 QCURVE SMOOTH",
"818 245 OFFCURVE",
"837 196 OFFCURVE",
"837 130 QCURVE SMOOTH",
"837 65 OFFCURVE",
"818 16 OFFCURVE",
"793 16 QCURVE SMOOTH",
"769 16 OFFCURVE",
"751 64 OFFCURVE",
"751 130 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 69 OFFCURVE",
"379 -10 OFFCURVE",
"451 -10 QCURVE SMOOTH",
"524 -10 OFFCURVE",
"602 68 OFFCURVE",
"602 129 QCURVE SMOOTH",
"602 191 OFFCURVE",
"524 269 OFFCURVE",
"451 269 QCURVE SMOOTH",
"381 269 OFFCURVE",
"301 192 OFFCURVE",
"301 129 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"409 195 OFFCURVE",
"427 245 OFFCURVE",
"451 245 QCURVE SMOOTH",
"476 245 OFFCURVE",
"495 196 OFFCURVE",
"495 130 QCURVE SMOOTH",
"495 65 OFFCURVE",
"476 16 OFFCURVE",
"451 16 QCURVE SMOOTH",
"427 16 OFFCURVE",
"409 64 OFFCURVE",
"409 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
2 1 2 3 1 74 0 2 0 1 4 2 1 103 6 1 4 11 1 9 8 4 9 103 0 3 3 0 95 0 0 0 25 75 10 1 8 8 5 95 7 1 5 5 26 5 76 73 71 67 65 61 59 36 36 36 36 36 36 36 36 37 12 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 958;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"451 281 LINE",
"242 645 LINE",
"214 645 LINE",
"9 286 LINE",
"218 -79 LINE",
"246 -79 LINE"
);
},
{
closed = 1;
nodes = (
"231 -26 LINE",
"211 17 LINE",
"59 285 LINE",
"208 549 LINE",
"229 592 LINE",
"249 549 LINE",
"401 281 LINE",
"252 17 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
13 9 3 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"451 281 LINE",
"242 645 LINE",
"214 645 LINE",
"9 286 LINE",
"218 -79 LINE",
"246 -79 LINE"
);
},
{
closed = 1;
nodes = (
"231 -15 LINE",
"219 17 LINE",
"67 285 LINE",
"216 549 LINE",
"229 581 LINE",
"242 549 LINE",
"394 281 LINE",
"245 17 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
13 9 3 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = at;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"26 80 OFFCURVE",
"112 -66 OFFCURVE",
"271 -145 OFFCURVE",
"376 -145 QCURVE SMOOTH",
"475 -145 OFFCURVE",
"625 -84 OFFCURVE",
"694 -13 QCURVE",
"676 9 LINE",
"611 -57 OFFCURVE",
"474 -116 OFFCURVE",
"385 -116 QCURVE SMOOTH",
"293 -116 OFFCURVE",
"156 -44 OFFCURVE",
"82 87 OFFCURVE",
"82 173 QCURVE SMOOTH",
"82 269 OFFCURVE",
"161 451 OFFCURVE",
"315 567 OFFCURVE",
"421 567 QCURVE SMOOTH",
"494 567 OFFCURVE",
"614 496 OFFCURVE",
"683 376 OFFCURVE",
"683 305 QCURVE SMOOTH",
"683 251 OFFCURVE",
"636 144 OFFCURVE",
"568 75 OFFCURVE",
"541 75 QCURVE SMOOTH",
"528 75 OFFCURVE",
"528 92 QCURVE SMOOTH",
"528 139 OFFCURVE",
"570 330 QCURVE SMOOTH",
"593 428 LINE",
"501 411 LINE",
"496 391 LINE",
"486 412 OFFCURVE",
"460 430 OFFCURVE",
"439 430 QCURVE SMOOTH",
"371 430 OFFCURVE",
"247 331 OFFCURVE",
"172 182 OFFCURVE",
"172 112 QCURVE SMOOTH",
"172 55 OFFCURVE",
"220 -10 OFFCURVE",
"264 -10 QCURVE SMOOTH",
"312 -10 OFFCURVE",
"402 79 OFFCURVE",
"459 187 QCURVE",
"435 85 OFFCURVE",
"435 36 QCURVE SMOOTH",
"435 12 OFFCURVE",
"445 -10 OFFCURVE",
"459 -10 QCURVE SMOOTH",
"500 -10 OFFCURVE",
"561 36 QCURVE SMOOTH",
"632 90 OFFCURVE",
"714 231 OFFCURVE",
"714 306 QCURVE SMOOTH",
"714 387 OFFCURVE",
"638 519 OFFCURVE",
"504 596 OFFCURVE",
"421 596 QCURVE SMOOTH",
"311 596 OFFCURVE",
"130 478 OFFCURVE",
"26 285 OFFCURVE",
"26 178 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"261 177 OFFCURVE",
"284 241 QCURVE SMOOTH",
"311 314 OFFCURVE",
"393 400 OFFCURVE",
"441 400 QCURVE SMOOTH",
"459 400 OFFCURVE",
"484 369 OFFCURVE",
"484 348 QCURVE SMOOTH",
"484 293 OFFCURVE",
"417 151 OFFCURVE",
"331 45 OFFCURVE",
"311 45 QCURVE SMOOTH",
"261 45 OFFCURVE",
"261 123 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 80 values pushed */
33 1 9 3 31 18 2 4 9 57 1 1 8 58 1 6 1 4 74 0 4 9 8 9 4 8 126 0 6 0 7 6 7 99 0 5 5 0 95 0 0 0 17 75 0 9 9 3 95 0 3 3 28 75 0 8 8 1 95 2 1 1 1 26 1 76 75 73 36 37 38 38 40 37 38 40 34 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 741;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"22 78 OFFCURVE",
"115 -72 OFFCURVE",
"286 -153 OFFCURVE",
"400 -153 QCURVE SMOOTH",
"503 -153 OFFCURVE",
"662 -90 OFFCURVE",
"735 -17 QCURVE",
"711 12 LINE",
"643 -55 OFFCURVE",
"500 -117 OFFCURVE",
"409 -117 QCURVE SMOOTH",
"306 -117 OFFCURVE",
"153 -44 OFFCURVE",
"70 88 OFFCURVE",
"70 173 QCURVE SMOOTH",
"70 269 OFFCURVE",
"157 451 OFFCURVE",
"325 567 OFFCURVE",
"442 567 QCURVE SMOOTH",
"518 567 OFFCURVE",
"644 496 OFFCURVE",
"716 376 OFFCURVE",
"716 305 QCURVE SMOOTH",
"716 251 OFFCURVE",
"671 144 OFFCURVE",
"608 75 OFFCURVE",
"582 75 QCURVE SMOOTH",
"570 75 OFFCURVE",
"569 92 QCURVE SMOOTH",
"564 149 OFFCURVE",
"612 338 QCURVE SMOOTH",
"636 433 LINE",
"499 416 LINE",
"494 396 LINE",
"485 416 OFFCURVE",
"449 435 OFFCURVE",
"426 435 QCURVE SMOOTH",
"356 435 OFFCURVE",
"237 342 OFFCURVE",
"168 192 OFFCURVE",
"168 112 QCURVE SMOOTH",
"168 55 OFFCURVE",
"216 -10 OFFCURVE",
"260 -10 QCURVE SMOOTH",
"312 -10 OFFCURVE",
"412 76 OFFCURVE",
"453 172 QCURVE",
"431 74 OFFCURVE",
"431 36 QCURVE SMOOTH",
"431 11 OFFCURVE",
"446 -10 OFFCURVE",
"470 -10 QCURVE SMOOTH",
"519 -10 OFFCURVE",
"577 21 QCURVE SMOOTH",
"663 65 OFFCURVE",
"755 222 OFFCURVE",
"755 306 QCURVE SMOOTH",
"755 389 OFFCURVE",
"673 525 OFFCURVE",
"530 604 OFFCURVE",
"442 604 QCURVE SMOOTH",
"325 604 OFFCURVE",
"132 484 OFFCURVE",
"22 287 OFFCURVE",
"22 178 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"302 185 OFFCURVE",
"320 243 QCURVE SMOOTH",
"341 318 OFFCURVE",
"406 405 OFFCURVE",
"441 405 QCURVE SMOOTH",
"460 405 OFFCURVE",
"482 375 OFFCURVE",
"482 353 QCURVE SMOOTH",
"482 300 OFFCURVE",
"428 162 OFFCURVE",
"357 60 OFFCURVE",
"338 60 QCURVE SMOOTH",
"302 60 OFFCURVE",
"302 131 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
32 1 9 3 30 17 2 4 9 57 1 1 8 58 1 6 1 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 4 9 8 9 4 8 126 0 8 1 9 8 1 124 0 6 0 7 6 7 100 0 5 5 0 95 0 0 0 17 75 0 9 9 3 95 0 3 3 28 75 2 1 1 1 26 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 49 values pushed */
0 4 9 8 9 4 8 126 0 8 1 9 8 1 124 0 6 0 7 6 7 100 0 5 5 0 95 0 0 0 25 75 0 9 9 3 95 0 3 3 28 75 2 1 1 1 26 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
76 74 37 37 38 38 41 37 38 39 34 10 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 776;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"569 26 LINE",
"549 26 OFFCURVE",
"539 39 QCURVE SMOOTH",
"450 160 LINE",
"483 241 OFFCURVE",
"493 350 QCURVE SMOOTH",
"494 362 OFFCURVE",
"499 372 OFFCURVE",
"506 372 QCURVE",
"552 370 LINE",
"552 399 LINE",
"401 399 LINE",
"401 370 LINE",
"447 372 LINE",
"455 372 OFFCURVE",
"461 359 OFFCURVE",
"461 340 QCURVE SMOOTH",
"461 265 OFFCURVE",
"430 187 QCURVE",
"287 383 LINE",
"386 438 OFFCURVE",
"386 511 QCURVE SMOOTH",
"386 551 OFFCURVE",
"326 606 OFFCURVE",
"271 606 QCURVE SMOOTH",
"212 606 OFFCURVE",
"132 542 OFFCURVE",
"132 492 QCURVE SMOOTH",
"132 440 OFFCURVE",
"192 360 QCURVE",
"98 306 OFFCURVE",
"22 218 OFFCURVE",
"22 157 QCURVE SMOOTH",
"22 75 OFFCURVE",
"133 -10 OFFCURVE",
"216 -10 QCURVE SMOOTH",
"331 -10 OFFCURVE",
"401 77 QCURVE",
"458 0 LINE",
"625 0 LINE",
"625 28 LINE"
);
},
{
closed = 1;
nodes = (
"315 575 OFFCURVE",
"356 540 OFFCURVE",
"356 510 QCURVE SMOOTH",
"356 452 OFFCURVE",
"271 404 QCURVE",
"265 412 LINE SMOOTH",
"238 449 OFFCURVE",
"209 499 OFFCURVE",
"209 520 QCURVE SMOOTH",
"209 545 OFFCURVE",
"250 575 OFFCURVE",
"282 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"182 21 OFFCURVE",
"111 101 OFFCURVE",
"111 166 QCURVE SMOOTH",
"111 268 OFFCURVE",
"209 337 QCURVE",
"382 102 LINE",
"319 21 OFFCURVE",
"239 21 QCURVE SMOOTH"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"332 392 OFFCURVE",
"368 451 OFFCURVE",
"368 501 CURVE SMOOTH",
"368 541 OFFCURVE",
"344 575 OFFCURVE",
"285 575 CURVE SMOOTH",
"243 575 OFFCURVE",
"216 548 OFFCURVE",
"216 501 CURVE SMOOTH",
"216 448 OFFCURVE",
"269 393 OFFCURVE",
"290 365 CURVE SMOOTH",
"536 42 LINE SMOOTH",
"544 32 OFFCURVE",
"553 25 OFFCURVE",
"569 26 CURVE SMOOTH",
"625 28 LINE",
"624 1 LINE",
"457 1 LINE",
"213 321 LINE SMOOTH",
"189 353 OFFCURVE",
"137 413 OFFCURVE",
"137 487 CURVE SMOOTH",
"137 552 OFFCURVE",
"186 606 OFFCURVE",
"274 606 CURVE SMOOTH",
"359 606 OFFCURVE",
"398 558 OFFCURVE",
"398 502 CURVE SMOOTH",
"398 447 OFFCURVE",
"361 384 OFFCURVE",
"291 349 CURVE",
"278 371 LINE"
);
},
{
closed = 1;
nodes = (
"170 293 OFFCURVE",
"121 252 OFFCURVE",
"121 152 CURVE SMOOTH",
"121 69 OFFCURVE",
"176 21 OFFCURVE",
"253 21 CURVE SMOOTH",
"365 21 OFFCURVE",
"461 121 OFFCURVE",
"461 285 CURVE SMOOTH",
"461 314 OFFCURVE",
"453 312 OFFCURVE",
"444 312 CURVE",
"401 310 LINE",
"401 340 LINE",
"551 340 LINE",
"551 311 LINE",
"511 312 LINE SMOOTH",
"503 312 OFFCURVE",
"494 312 OFFCURVE",
"493 293 CURVE SMOOTH",
"487 188 OFFCURVE",
"450 -9 OFFCURVE",
"231 -9 CURVE SMOOTH",
"58 -9 OFFCURVE",
"32 89 OFFCURVE",
"32 138 CURVE SMOOTH",
"32 223 OFFCURVE",
"80 290 OFFCURVE",
"213 342 CURVE",
"225 322 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
48 1 4 7 22 1 3 4 57 56 38 23 11 3 6 6 3 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
10 1 7 7 2 95 0 2 2 25 75 5 1 3 3 4 93 0 4 4 20 75 9 1 6 6 0 93 0 0 0 21 75 11 1 8 8 1 95 0 1 1 26 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 4 5 1 3 6 4 3 103 10 1 7 7 2 95 0 2 2 25 75 9 1 6 6 0 93 0 0 0 21 75 11 1 8 8 1 95 0 1 1 26 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 27 values pushed */
54 54 42 42 0 0 54 62 54 61 42 53 42 52 0 41 0 40 17 17 41 42 34 17 12 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 610;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"597 34 LINE",
"577 34 OFFCURVE",
"567 47 QCURVE SMOOTH",
"487 155 LINE",
"520 228 OFFCURVE",
"530 343 QCURVE SMOOTH",
"531 355 OFFCURVE",
"536 365 OFFCURVE",
"543 365 QCURVE",
"585 363 LINE",
"585 399 LINE",
"434 399 LINE",
"434 363 LINE",
"476 365 LINE",
"484 365 OFFCURVE",
"490 351 OFFCURVE",
"490 333 QCURVE SMOOTH",
"490 265 OFFCURVE",
"461 190 QCURVE",
"324 376 LINE",
"408 428 OFFCURVE",
"408 500 QCURVE SMOOTH",
"408 546 OFFCURVE",
"341 606 OFFCURVE",
"277 606 QCURVE SMOOTH",
"207 606 OFFCURVE",
"125 537 OFFCURVE",
"125 485 QCURVE SMOOTH",
"125 432 OFFCURVE",
"189 347 QCURVE",
"100 306 OFFCURVE",
"21 211 OFFCURVE",
"21 152 QCURVE SMOOTH",
"21 70 OFFCURVE",
"150 -10 OFFCURVE",
"238 -10 QCURVE SMOOTH",
"341 -10 OFFCURVE",
"411 48 QCURVE",
"446 0 LINE",
"638 0 LINE",
"638 36 LINE"
);
},
{
closed = 1;
nodes = (
"334 568 OFFCURVE",
"371 530 OFFCURVE",
"371 498 QCURVE SMOOTH",
"371 441 OFFCURVE",
"303 404 QCURVE",
"285 429 LINE SMOOTH",
"262 461 OFFCURVE",
"242 498 OFFCURVE",
"242 517 QCURVE SMOOTH",
"242 542 OFFCURVE",
"276 568 OFFCURVE",
"303 568 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"227 29 OFFCURVE",
"155 106 OFFCURVE",
"155 174 QCURVE SMOOTH",
"155 245 OFFCURVE",
"213 313 QCURVE",
"389 76 LINE",
"340 29 OFFCURVE",
"281 29 QCURVE SMOOTH"
);
}
);
};
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"346 395 OFFCURVE",
"381 451 OFFCURVE",
"381 501 CURVE SMOOTH",
"381 541 OFFCURVE",
"358 568 OFFCURVE",
"307 568 CURVE SMOOTH",
"265 568 OFFCURVE",
"243 543 OFFCURVE",
"243 509 CURVE SMOOTH",
"243 458 OFFCURVE",
"302 393 OFFCURVE",
"323 365 CURVE SMOOTH",
"564 52 LINE SMOOTH",
"573 41 OFFCURVE",
"582 33 OFFCURVE",
"604 34 CURVE SMOOTH",
"639 36 LINE",
"639 0 LINE",
"446 1 LINE",
"202 321 LINE SMOOTH",
"178 353 OFFCURVE",
"129 412 OFFCURVE",
"129 474 CURVE SMOOTH",
"129 548 OFFCURVE",
"201 606 OFFCURVE",
"291 606 CURVE SMOOTH",
"376 606 OFFCURVE",
"419 558 OFFCURVE",
"419 502 CURVE SMOOTH",
"419 447 OFFCURVE",
"383 381 OFFCURVE",
"311 346 CURVE",
"292 374 LINE"
);
},
{
closed = 1;
nodes = (
"186 290 OFFCURVE",
"155 245 OFFCURVE",
"155 175 CURVE SMOOTH",
"155 78 OFFCURVE",
"217 29 OFFCURVE",
"281 29 CURVE SMOOTH",
"394 29 OFFCURVE",
"476 153 OFFCURVE",
"476 285 CURVE SMOOTH",
"476 314 OFFCURVE",
"468 312 OFFCURVE",
"459 312 CURVE",
"418 310 LINE",
"418 340 LINE",
"568 340 LINE",
"568 311 LINE",
"534 312 LINE SMOOTH",
"526 312 OFFCURVE",
"516 312 OFFCURVE",
"516 293 CURVE SMOOTH",
"516 212 OFFCURVE",
"478 -9 OFFCURVE",
"238 -9 CURVE SMOOTH",
"72 -9 OFFCURVE",
"22 82 OFFCURVE",
"22 141 CURVE SMOOTH",
"22 246 OFFCURVE",
"101 298 OFFCURVE",
"228 345 CURVE",
"241 319 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
49 1 4 7 23 1 3 4 58 57 39 24 11 3 6 6 3 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 47 values pushed */
0 4 5 1 3 6 4 3 103 10 1 7 7 2 95 0 2 2 25 75 11 8 9 3 6 6 0 93 0 0 0 21 75 11 8 9 3 6 6 1 95 0 1 1 26 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 4 5 1 3 6 4 3 103 10 1 7 7 2 95 0 2 2 25 75 9 1 6 6 0 93 0 0 0 21 75 11 1 8 8 1 95 0 1 1 26 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 27 values pushed */
56 56 43 43 0 0 56 64 56 63 43 55 43 54 0 42 0 41 17 17 41 43 34 17 12 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 624;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"30 368 OFFCURVE",
"134 288 OFFCURVE",
"228 288 QCURVE",
"228 -269 LINE",
"263 -269 LINE",
"263 528 LINE SMOOTH",
"263 566 OFFCURVE",
"301 566 QCURVE SMOOTH",
"342 566 LINE",
"342 -269 LINE",
"377 -269 LINE",
"377 566 LINE",
"478 566 LINE",
"478 597 LINE",
"228 597 LINE SMOOTH",
"135 597 OFFCURVE",
"30 514 OFFCURVE",
"30 442 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
0 5 1 2 1 5 2 126 3 1 1 1 0 93 0 0 0 17 75 4 1 2 2 24 2 76 17 18 33 17 17 33 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 499;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"30 351 OFFCURVE",
"134 266 OFFCURVE",
"228 266 QCURVE",
"228 -269 LINE",
"271 -269 LINE",
"271 521 LINE SMOOTH",
"271 559 OFFCURVE",
"309 559 QCURVE SMOOTH",
"342 559 LINE",
"342 -269 LINE",
"385 -269 LINE",
"385 559 LINE",
"478 559 LINE",
"478 597 LINE",
"228 597 LINE SMOOTH",
"135 597 OFFCURVE",
"30 508 OFFCURVE",
"30 431 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
0 5 1 2 1 5 2 126 3 1 1 1 0 93 0 0 0 17 75 4 1 2 2 24 2 76 17 18 33 17 17 33 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 499;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"407 137 OFFCURVE",
"407 218 QCURVE SMOOTH",
"407 257 OFFCURVE",
"366 311 OFFCURVE",
"319 343 QCURVE SMOOTH",
"195 428 LINE SMOOTH",
"166 448 OFFCURVE",
"137 483 OFFCURVE",
"137 509 QCURVE SMOOTH",
"137 544 OFFCURVE",
"190 584 OFFCURVE",
"227 584 QCURVE SMOOTH",
"258 584 OFFCURVE",
"312 559 OFFCURVE",
"312 540 QCURVE SMOOTH",
"312 532 OFFCURVE",
"303 521 QCURVE SMOOTH",
"292 508 OFFCURVE",
"292 495 QCURVE SMOOTH",
"292 478 OFFCURVE",
"317 458 OFFCURVE",
"334 458 QCURVE SMOOTH",
"356 458 OFFCURVE",
"386 489 OFFCURVE",
"386 515 QCURVE SMOOTH",
"386 557 OFFCURVE",
"303 607 OFFCURVE",
"237 607 QCURVE SMOOTH",
"158 607 OFFCURVE",
"62 535 OFFCURVE",
"62 476 QCURVE SMOOTH",
"62 446 OFFCURVE",
"92 395 OFFCURVE",
"126 367 QCURVE",
"35 335 OFFCURVE",
"35 254 QCURVE SMOOTH",
"35 215 OFFCURVE",
"76 161 OFFCURVE",
"123 129 QCURVE SMOOTH",
"247 44 LINE SMOOTH",
"276 24 OFFCURVE",
"305 -11 OFFCURVE",
"305 -37 QCURVE SMOOTH",
"305 -72 OFFCURVE",
"252 -112 OFFCURVE",
"215 -112 QCURVE SMOOTH",
"184 -112 OFFCURVE",
"130 -87 OFFCURVE",
"130 -68 QCURVE SMOOTH",
"130 -60 OFFCURVE",
"139 -49 QCURVE SMOOTH",
"150 -36 OFFCURVE",
"150 -23 QCURVE SMOOTH",
"150 -6 OFFCURVE",
"125 14 OFFCURVE",
"108 14 QCURVE SMOOTH",
"86 14 OFFCURVE",
"56 -17 OFFCURVE",
"56 -43 QCURVE SMOOTH",
"56 -85 OFFCURVE",
"139 -135 OFFCURVE",
"205 -135 QCURVE SMOOTH",
"284 -135 OFFCURVE",
"380 -63 OFFCURVE",
"380 -4 QCURVE SMOOTH",
"380 26 OFFCURVE",
"350 77 OFFCURVE",
"316 105 QCURVE"
);
},
{
closed = 1;
nodes = (
"143 227 LINE SMOOTH",
"118 244 OFFCURVE",
"100 272 OFFCURVE",
"100 290 QCURVE SMOOTH",
"100 324 OFFCURVE",
"147 350 QCURVE",
"299 245 LINE SMOOTH",
"324 228 OFFCURVE",
"342 200 OFFCURVE",
"342 182 QCURVE SMOOTH",
"342 143 OFFCURVE",
"295 122 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
76 67 33 3 1 4 1 74 0 4 5 1 5 4 1 126 0 1 2 5 1 2 124 0 2 0 0 2 0 99 0 5 5 3 95 0 3 3 25 5 76 56 54 46 44 40 38 40 36 36 6 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 437;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"413 178 OFFCURVE",
"413 256 QCURVE SMOOTH",
"413 293 OFFCURVE",
"370 353 OFFCURVE",
"321 379 QCURVE SMOOTH",
"197 445 LINE SMOOTH",
"169 459 OFFCURVE",
"139 492 OFFCURVE",
"139 514 QCURVE SMOOTH",
"139 543 OFFCURVE",
"188 577 OFFCURVE",
"225 577 QCURVE SMOOTH",
"254 577 OFFCURVE",
"299 555 OFFCURVE",
"299 533 QCURVE SMOOTH",
"299 525 OFFCURVE",
"293 513 QCURVE",
"287 499 OFFCURVE",
"287 489 QCURVE SMOOTH",
"287 469 OFFCURVE",
"315 442 OFFCURVE",
"342 442 QCURVE SMOOTH",
"372 442 OFFCURVE",
"408 477 OFFCURVE",
"408 505 QCURVE SMOOTH",
"408 554 OFFCURVE",
"299 607 OFFCURVE",
"225 607 QCURVE SMOOTH",
"136 607 OFFCURVE",
"34 528 OFFCURVE",
"34 462 QCURVE SMOOTH",
"34 425 OFFCURVE",
"70 365 OFFCURVE",
"111 337 QCURVE",
"28 293 OFFCURVE",
"28 216 QCURVE SMOOTH",
"28 179 OFFCURVE",
"71 119 OFFCURVE",
"120 93 QCURVE SMOOTH",
"243 28 LINE SMOOTH",
"271 13 OFFCURVE",
"301 -20 OFFCURVE",
"301 -42 QCURVE SMOOTH",
"301 -71 OFFCURVE",
"253 -105 OFFCURVE",
"216 -105 QCURVE SMOOTH",
"186 -105 OFFCURVE",
"142 -83 OFFCURVE",
"142 -61 QCURVE SMOOTH",
"142 -53 OFFCURVE",
"148 -41 QCURVE",
"154 -27 OFFCURVE",
"154 -17 QCURVE SMOOTH",
"154 4 OFFCURVE",
"126 30 OFFCURVE",
"99 30 QCURVE SMOOTH",
"69 30 OFFCURVE",
"33 -5 OFFCURVE",
"33 -33 QCURVE SMOOTH",
"33 -82 OFFCURVE",
"142 -135 OFFCURVE",
"216 -135 QCURVE SMOOTH",
"305 -135 OFFCURVE",
"406 -57 OFFCURVE",
"406 10 QCURVE SMOOTH",
"406 47 OFFCURVE",
"371 109 OFFCURVE",
"330 136 QCURVE"
);
},
{
closed = 1;
nodes = (
"201 208 LINE SMOOTH",
"160 229 OFFCURVE",
"130 256 OFFCURVE",
"130 278 QCURVE SMOOTH",
"130 301 OFFCURVE",
"145 317 QCURVE",
"240 265 LINE SMOOTH",
"281 243 OFFCURVE",
"311 215 OFFCURVE",
"311 194 QCURVE SMOOTH",
"311 171 OFFCURVE",
"295 156 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
74 67 33 3 1 4 1 74 0 4 5 1 5 4 1 126 0 1 2 5 1 2 124 0 2 0 0 2 0 99 0 5 5 3 95 0 3 3 25 5 76 56 54 46 44 40 38 40 36 36 6 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 439;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"53 213 OFFCURVE",
"135 72 OFFCURVE",
"276 -10 OFFCURVE",
"361 -10 QCURVE SMOOTH",
"445 -10 OFFCURVE",
"587 72 OFFCURVE",
"670 214 OFFCURVE",
"670 298 QCURVE SMOOTH",
"670 382 OFFCURVE",
"587 524 OFFCURVE",
"445 607 OFFCURVE",
"361 607 QCURVE SMOOTH",
"277 607 OFFCURVE",
"135 524 OFFCURVE",
"53 382 OFFCURVE",
"53 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 375 OFFCURVE",
"157 503 OFFCURVE",
"283 577 OFFCURVE",
"360 577 QCURVE SMOOTH",
"437 577 OFFCURVE",
"563 503 OFFCURVE",
"636 375 OFFCURVE",
"636 298 QCURVE SMOOTH",
"636 221 OFFCURVE",
"563 94 OFFCURVE",
"437 20 OFFCURVE",
"360 20 QCURVE SMOOTH",
"283 20 OFFCURVE",
"157 94 OFFCURVE",
"85 221 OFFCURVE",
"85 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 221 OFFCURVE",
"285 131 OFFCURVE",
"365 131 QCURVE SMOOTH",
"395 131 OFFCURVE",
"437 145 QCURVE SMOOTH",
"470 156 OFFCURVE",
"492 156 QCURVE",
"490 170 OFFCURVE",
"490 182 QCURVE",
"493 229 LINE",
"471 229 LINE",
"464 196 OFFCURVE",
"414 153 OFFCURVE",
"378 153 QCURVE SMOOTH",
"331 153 OFFCURVE",
"281 227 OFFCURVE",
"281 299 QCURVE SMOOTH",
"281 375 OFFCURVE",
"330 451 OFFCURVE",
"376 451 QCURVE SMOOTH",
"407 451 OFFCURVE",
"462 406 OFFCURVE",
"469 375 QCURVE",
"488 375 LINE",
"486 377 OFFCURVE",
"486 406 QCURVE SMOOTH",
"486 423 OFFCURVE",
"488 447 QCURVE",
"467 447 OFFCURVE",
"441 457 QCURVE",
"424 464 OFFCURVE",
"391 471 OFFCURVE",
"368 471 QCURVE SMOOTH",
"285 471 OFFCURVE",
"193 381 OFFCURVE",
"193 299 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 72 values pushed */
0 5 6 8 6 5 8 126 0 0 0 3 4 0 3 103 0 4 0 6 5 4 6 103 0 8 0 9 7 8 9 103 0 7 0 10 2 7 10 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 67 65 63 61 18 36 39 20 37 38 38 38 34 11 7 29 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 723;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"46 213 OFFCURVE",
"128 72 OFFCURVE",
"269 -10 OFFCURVE",
"354 -10 QCURVE SMOOTH",
"438 -10 OFFCURVE",
"580 72 OFFCURVE",
"663 214 OFFCURVE",
"663 298 QCURVE SMOOTH",
"663 382 OFFCURVE",
"580 524 OFFCURVE",
"438 607 OFFCURVE",
"354 607 QCURVE SMOOTH",
"270 607 OFFCURVE",
"128 524 OFFCURVE",
"46 382 OFFCURVE",
"46 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 372 OFFCURVE",
"156 497 OFFCURVE",
"278 570 OFFCURVE",
"353 570 QCURVE SMOOTH",
"427 570 OFFCURVE",
"550 497 OFFCURVE",
"621 372 OFFCURVE",
"621 298 QCURVE SMOOTH",
"621 224 OFFCURVE",
"550 100 OFFCURVE",
"427 28 OFFCURVE",
"353 28 QCURVE SMOOTH",
"278 28 OFFCURVE",
"156 100 OFFCURVE",
"85 223 OFFCURVE",
"85 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 220 OFFCURVE",
"277 130 OFFCURVE",
"361 130 QCURVE SMOOTH",
"390 130 OFFCURVE",
"434 145 QCURVE SMOOTH",
"469 157 OFFCURVE",
"494 158 QCURVE",
"492 172 OFFCURVE",
"492 181 QCURVE",
"495 233 LINE",
"468 233 LINE",
"462 203 OFFCURVE",
"414 161 OFFCURVE",
"386 161 QCURVE SMOOTH",
"344 161 OFFCURVE",
"301 225 OFFCURVE",
"301 298 QCURVE SMOOTH",
"301 376 OFFCURVE",
"341 441 OFFCURVE",
"384 441 QCURVE SMOOTH",
"411 441 OFFCURVE",
"460 399 OFFCURVE",
"465 371 QCURVE",
"490 373 LINE",
"488 377 OFFCURVE",
"488 405 QCURVE SMOOTH",
"488 420 OFFCURVE",
"490 444 QCURVE",
"471 444 OFFCURVE",
"443 455 QCURVE",
"423 462 OFFCURVE",
"390 470 OFFCURVE",
"364 470 QCURVE SMOOTH",
"277 470 OFFCURVE",
"181 380 OFFCURVE",
"181 298 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 102 values pushed */
57 1 10 8 1 74 0 7 6 8 6 7 8 126 11 1 1 0 2 6 1 2 103 0 6 0 8 10 6 8 103 13 1 10 0 4 5 10 4 104 0 9 0 5 3 9 5 103 12 1 3 0 0 3 87 12 1 3 3 0 95 0 0 3 0 79 32 32 16 16 0 0 32 69 32 69 67 65 61 59 52 51 48 46 42 40 37 35 16 31 16 30 24 22 0 15 0 14 38 14 7 21 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 708;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"191 607 OFFCURVE",
"99 557 OFFCURVE",
"46 468 OFFCURVE",
"46 413 QCURVE SMOOTH",
"46 359 OFFCURVE",
"99 271 OFFCURVE",
"191 220 OFFCURVE",
"246 220 QCURVE SMOOTH",
"300 220 OFFCURVE",
"392 271 OFFCURVE",
"446 359 OFFCURVE",
"446 413 QCURVE SMOOTH",
"446 468 OFFCURVE",
"392 557 OFFCURVE",
"300 607 OFFCURVE",
"246 607 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 581 OFFCURVE",
"416 492 OFFCURVE",
"416 413 QCURVE SMOOTH",
"416 335 OFFCURVE",
"313 246 OFFCURVE",
"245 246 QCURVE SMOOTH",
"177 246 OFFCURVE",
"75 335 OFFCURVE",
"75 413 QCURVE SMOOTH",
"75 492 OFFCURVE",
"177 581 OFFCURVE",
"245 581 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151 514 LINE",
"151 496 LINE",
"161 496 LINE SMOOTH",
"169 496 OFFCURVE",
"169 489 QCURVE SMOOTH",
"169 342 LINE SMOOTH",
"169 335 OFFCURVE",
"163 335 QCURVE SMOOTH",
"151 335 LINE",
"151 317 LINE",
"252 317 LINE",
"252 335 LINE",
"235 335 LINE SMOOTH",
"228 335 OFFCURVE",
"228 342 QCURVE SMOOTH",
"228 400 LINE",
"238 400 LINE SMOOTH",
"277 400 OFFCURVE",
"277 362 QCURVE SMOOTH",
"277 348 LINE SMOOTH",
"277 317 OFFCURVE",
"318 317 QCURVE SMOOTH",
"355 317 LINE",
"355 334 LINE",
"335 328 OFFCURVE",
"335 356 QCURVE SMOOTH",
"335 381 OFFCURVE",
"297 411 OFFCURVE",
"274 411 QCURVE",
"300 416 OFFCURVE",
"330 444 OFFCURVE",
"330 466 QCURVE SMOOTH",
"330 491 OFFCURVE",
"292 514 OFFCURVE",
"253 514 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 496 LINE SMOOTH",
"272 496 OFFCURVE",
"272 459 QCURVE SMOOTH",
"272 441 OFFCURVE",
"259 419 OFFCURVE",
"247 419 QCURVE SMOOTH",
"228 419 LINE",
"228 493 LINE SMOOTH",
"228 496 OFFCURVE",
"233 496 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 122 values pushed */
63 1 12 11 62 53 2 8 7 43 1 6 8 3 74 14 1 1 15 1 3 4 1 3 103 16 1 4 17 13 2 11 12 4 11 103 0 5 7 6 5 87 0 12 0 7 8 12 7 103 10 1 8 9 1 6 2 8 6 103 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 68 68 33 32 16 16 0 0 68 77 68 76 73 71 66 65 60 59 58 57 56 55 52 50 46 44 39 38 32 67 33 67 16 31 16 30 24 22 0 15 0 14 38 18 7 21 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 492;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"185 607 OFFCURVE",
"93 557 OFFCURVE",
"41 468 OFFCURVE",
"41 411 QCURVE SMOOTH",
"41 354 OFFCURVE",
"93 265 OFFCURVE",
"185 215 OFFCURVE",
"244 215 QCURVE SMOOTH",
"301 215 OFFCURVE",
"393 265 OFFCURVE",
"445 354 OFFCURVE",
"445 411 QCURVE SMOOTH",
"445 468 OFFCURVE",
"393 557 OFFCURVE",
"301 607 OFFCURVE",
"244 607 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 576 OFFCURVE",
"411 484 OFFCURVE",
"411 411 QCURVE SMOOTH",
"411 338 OFFCURVE",
"317 246 OFFCURVE",
"243 246 QCURVE SMOOTH",
"169 246 OFFCURVE",
"75 338 OFFCURVE",
"75 411 QCURVE SMOOTH",
"75 484 OFFCURVE",
"169 576 OFFCURVE",
"243 576 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 513 LINE",
"136 486 LINE",
"151 486 LINE SMOOTH",
"160 486 OFFCURVE",
"160 479 QCURVE SMOOTH",
"160 350 LINE SMOOTH",
"160 343 OFFCURVE",
"154 343 QCURVE SMOOTH",
"136 343 LINE",
"136 316 LINE",
"254 316 LINE",
"254 343 LINE",
"240 343 LINE SMOOTH",
"231 343 OFFCURVE",
"231 350 QCURVE SMOOTH",
"231 387 LINE",
"249 387 LINE SMOOTH",
"273 387 OFFCURVE",
"273 361 QCURVE SMOOTH",
"273 355 LINE SMOOTH",
"273 316 OFFCURVE",
"316 316 QCURVE SMOOTH",
"365 316 LINE",
"365 343 LINE",
"347 340 OFFCURVE",
"347 360 QCURVE",
"346 381 OFFCURVE",
"306 407 OFFCURVE",
"282 407 QCURVE",
"312 411 OFFCURVE",
"343 443 OFFCURVE",
"343 466 QCURVE SMOOTH",
"343 490 OFFCURVE",
"306 513 OFFCURVE",
"267 513 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 486 LINE SMOOTH",
"272 486 OFFCURVE",
"272 453 QCURVE SMOOTH",
"272 438 OFFCURVE",
"257 417 OFFCURVE",
"243 417 QCURVE SMOOTH",
"231 417 LINE",
"231 483 LINE SMOOTH",
"231 486 OFFCURVE",
"236 486 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 124 values pushed */
59 1 12 11 58 49 37 3 8 7 2 74 40 1 8 1 73 14 1 1 15 1 3 4 1 3 103 16 1 4 17 13 2 11 12 4 11 103 0 5 7 6 5 87 0 12 0 7 8 12 7 103 10 1 8 9 1 6 2 8 6 103 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 64 64 29 28 16 16 0 0 64 74 64 73 69 67 62 61 56 55 54 53 52 51 48 46 43 41 35 34 28 63 29 63 16 27 16 26 22 20 0 15 0 14 38 18 7 21 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 487;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = published;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"53 213 OFFCURVE",
"135 72 OFFCURVE",
"276 -10 OFFCURVE",
"361 -10 QCURVE SMOOTH",
"445 -10 OFFCURVE",
"587 72 OFFCURVE",
"670 214 OFFCURVE",
"670 298 QCURVE SMOOTH",
"670 382 OFFCURVE",
"587 524 OFFCURVE",
"445 607 OFFCURVE",
"361 607 QCURVE SMOOTH",
"277 607 OFFCURVE",
"135 524 OFFCURVE",
"53 382 OFFCURVE",
"53 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 375 OFFCURVE",
"157 503 OFFCURVE",
"283 577 OFFCURVE",
"360 577 QCURVE SMOOTH",
"437 577 OFFCURVE",
"563 503 OFFCURVE",
"636 375 OFFCURVE",
"636 298 QCURVE SMOOTH",
"636 221 OFFCURVE",
"563 94 OFFCURVE",
"437 20 OFFCURVE",
"360 20 QCURVE SMOOTH",
"283 20 OFFCURVE",
"157 94 OFFCURVE",
"85 221 OFFCURVE",
"85 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 135 LINE",
"391 135 LINE",
"391 161 LINE",
"364 160 LINE",
"352 160 OFFCURVE",
"352 172 QCURVE SMOOTH",
"352 282 LINE",
"406 282 LINE SMOOTH",
"458 282 OFFCURVE",
"513 335 OFFCURVE",
"513 379 QCURVE SMOOTH",
"513 425 OFFCURVE",
"458 469 OFFCURVE",
"394 469 QCURVE SMOOTH",
"238 469 LINE",
"238 442 LINE",
"258 443 LINE SMOOTH",
"265 443 OFFCURVE",
"270 438 OFFCURVE",
"270 431 QCURVE SMOOTH",
"270 172 LINE SMOOTH",
"270 160 OFFCURVE",
"260 160 QCURVE",
"238 161 LINE"
);
},
{
closed = 1;
nodes = (
"352 308 LINE",
"352 436 LINE SMOOTH",
"352 439 OFFCURVE",
"357 443 OFFCURVE",
"359 443 QCURVE SMOOTH",
"375 443 LINE SMOOTH",
"407 443 OFFCURVE",
"429 412 OFFCURVE",
"429 379 QCURVE SMOOTH",
"429 344 OFFCURVE",
"410 308 OFFCURVE",
"384 308 QCURVE SMOOTH"
);
}
);
width = 723;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"46 213 OFFCURVE",
"128 72 OFFCURVE",
"269 -10 OFFCURVE",
"354 -10 QCURVE SMOOTH",
"438 -10 OFFCURVE",
"580 72 OFFCURVE",
"663 214 OFFCURVE",
"663 298 QCURVE SMOOTH",
"663 382 OFFCURVE",
"580 524 OFFCURVE",
"438 607 OFFCURVE",
"354 607 QCURVE SMOOTH",
"270 607 OFFCURVE",
"128 524 OFFCURVE",
"46 382 OFFCURVE",
"46 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 372 OFFCURVE",
"156 497 OFFCURVE",
"278 570 OFFCURVE",
"353 570 QCURVE SMOOTH",
"427 570 OFFCURVE",
"555 497 OFFCURVE",
"621 372 OFFCURVE",
"621 298 QCURVE SMOOTH",
"621 224 OFFCURVE",
"550 100 OFFCURVE",
"427 28 OFFCURVE",
"353 28 QCURVE SMOOTH",
"278 28 OFFCURVE",
"156 100 OFFCURVE",
"85 223 OFFCURVE",
"85 298 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"219 134 LINE",
"390 134 LINE",
"390 165 LINE",
"367 164 LINE",
"356 164 OFFCURVE",
"356 176 QCURVE SMOOTH",
"356 273 LINE",
"406 273 LINE SMOOTH",
"461 273 OFFCURVE",
"519 328 OFFCURVE",
"519 374 QCURVE SMOOTH",
"519 421 OFFCURVE",
"459 468 OFFCURVE",
"391 468 QCURVE SMOOTH",
"219 468 LINE",
"219 437 LINE",
"236 438 LINE SMOOTH",
"243 438 OFFCURVE",
"249 433 OFFCURVE",
"249 426 QCURVE SMOOTH",
"249 176 LINE SMOOTH",
"249 164 OFFCURVE",
"239 164 QCURVE SMOOTH",
"219 165 LINE"
);
},
{
closed = 1;
nodes = (
"356 303 LINE",
"356 431 LINE SMOOTH",
"356 434 OFFCURVE",
"361 438 OFFCURVE",
"363 438 QCURVE SMOOTH",
"370 438 LINE SMOOTH",
"394 438 OFFCURVE",
"404 407 OFFCURVE",
"404 374 QCURVE SMOOTH",
"404 339 OFFCURVE",
"394 303 OFFCURVE",
"372 303 QCURVE SMOOTH"
);
}
);
width = 708;
}
);
unicode = 2117;
},
{
glyphname = trademark;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"10 523 LINE",
"28 523 LINE",
"28 551 OFFCURVE",
"57 578 OFFCURVE",
"90 578 QCURVE SMOOTH",
"104 578 LINE SMOOTH",
"110 578 OFFCURVE",
"110 572 QCURVE SMOOTH",
"110 340 LINE SMOOTH",
"110 335 OFFCURVE",
"105 328 OFFCURVE",
"101 328 QCURVE",
"74 329 LINE",
"74 310 LINE",
"225 310 LINE",
"225 329 LINE",
"199 328 LINE",
"189 328 OFFCURVE",
"189 339 QCURVE SMOOTH",
"189 573 LINE SMOOTH",
"189 578 OFFCURVE",
"195 578 QCURVE SMOOTH",
"210 578 LINE SMOOTH",
"242 578 OFFCURVE",
"271 551 OFFCURVE",
"271 523 QCURVE",
"290 523 LINE",
"290 597 LINE",
"10 597 LINE"
);
},
{
closed = 1;
nodes = (
"723 328 LINE",
"713 328 OFFCURVE",
"713 339 QCURVE SMOOTH",
"713 568 LINE SMOOTH",
"713 579 OFFCURVE",
"723 578 QCURVE",
"737 577 LINE",
"737 597 LINE",
"635 597 LINE",
"541 398 LINE",
"441 597 LINE",
"327 597 LINE",
"327 577 LINE",
"348 578 LINE",
"353 578 OFFCURVE",
"353 575 QCURVE SMOOTH",
"353 339 LINE SMOOTH",
"353 328 OFFCURVE",
"343 328 QCURVE",
"324 329 LINE",
"324 310 LINE",
"409 310 LINE",
"409 329 LINE",
"385 328 LINE",
"375 328 OFFCURVE",
"375 339 QCURVE SMOOTH",
"375 563 LINE",
"504 305 LINE",
"521 305 LINE",
"635 547 LINE",
"635 339 LINE SMOOTH",
"635 328 OFFCURVE",
"625 328 QCURVE",
"600 329 LINE",
"600 310 LINE",
"740 310 LINE",
"740 329 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
54 37 14 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 758;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"9 523 LINE",
"31 523 LINE",
"33 549 OFFCURVE",
"61 574 OFFCURVE",
"93 574 QCURVE SMOOTH",
"100 574 LINE SMOOTH",
"106 574 OFFCURVE",
"106 568 QCURVE SMOOTH",
"106 345 LINE SMOOTH",
"106 340 OFFCURVE",
"101 333 OFFCURVE",
"97 333 QCURVE",
"70 334 LINE",
"70 310 LINE",
"243 310 LINE",
"243 334 LINE",
"216 333 LINE",
"206 333 OFFCURVE",
"206 344 QCURVE SMOOTH",
"206 568 LINE SMOOTH",
"206 574 OFFCURVE",
"212 574 QCURVE SMOOTH",
"220 574 LINE SMOOTH",
"253 574 OFFCURVE",
"282 549 OFFCURVE",
"282 523 QCURVE",
"305 523 LINE",
"305 597 LINE",
"9 597 LINE"
);
},
{
closed = 1;
nodes = (
"746 333 LINE",
"736 333 OFFCURVE",
"736 344 QCURVE SMOOTH",
"736 564 LINE SMOOTH",
"736 573 OFFCURVE",
"744 573 QCURVE SMOOTH",
"758 572 LINE",
"758 597 LINE",
"637 597 LINE",
"560 429 LINE",
"483 597 LINE",
"341 597 LINE",
"341 572 LINE",
"362 573 LINE",
"367 574 OFFCURVE",
"367 570 QCURVE SMOOTH",
"367 344 LINE SMOOTH",
"367 333 OFFCURVE",
"357 333 QCURVE",
"338 334 LINE",
"338 310 LINE",
"429 310 LINE",
"429 334 LINE",
"405 333 LINE",
"395 333 OFFCURVE",
"395 344 QCURVE SMOOTH",
"395 563 LINE",
"512 313 LINE",
"534 313 LINE",
"637 538 LINE",
"637 344 LINE SMOOTH",
"637 333 OFFCURVE",
"627 333 QCURVE",
"602 334 LINE",
"602 310 LINE",
"761 310 LINE",
"761 334 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
54 30 14 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 773;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"89 469 OFFCURVE",
"147 411 OFFCURVE",
"187 411 QCURVE SMOOTH",
"228 411 OFFCURVE",
"285 469 OFFCURVE",
"285 509 QCURVE SMOOTH",
"285 550 OFFCURVE",
"228 607 OFFCURVE",
"187 607 QCURVE SMOOTH",
"147 607 OFFCURVE",
"89 550 OFFCURVE",
"89 509 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131 532 OFFCURVE",
"164 565 OFFCURVE",
"187 565 QCURVE SMOOTH",
"210 565 OFFCURVE",
"243 532 OFFCURVE",
"243 509 QCURVE SMOOTH",
"243 486 OFFCURVE",
"210 453 OFFCURVE",
"187 453 QCURVE SMOOTH",
"164 453 OFFCURVE",
"131 486 OFFCURVE",
"131 509 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 374;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"85 463 OFFCURVE",
"145 404 OFFCURVE",
"187 404 QCURVE SMOOTH",
"229 404 OFFCURVE",
"289 463 OFFCURVE",
"289 505 QCURVE SMOOTH",
"289 548 OFFCURVE",
"229 607 OFFCURVE",
"187 607 QCURVE SMOOTH",
"145 607 OFFCURVE",
"85 548 OFFCURVE",
"85 505 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 527 OFFCURVE",
"165 558 OFFCURVE",
"187 558 QCURVE SMOOTH",
"209 558 OFFCURVE",
"239 527 OFFCURVE",
"239 505 QCURVE SMOOTH",
"239 483 OFFCURVE",
"209 452 OFFCURVE",
"187 452 QCURVE SMOOTH",
"165 452 OFFCURVE",
"135 483 OFFCURVE",
"135 505 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 374;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
layers = (
{
components = (
{
name = primemod;
transform = "{1, 0, 0, 1, 0, -100}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 276;
},
{
components = (
{
name = primemod;
transform = "{1, 0, 0, 1, 0, -100}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 276;
}
);
unicode = 2032;
},
{
glyphname = second;
layers = (
{
components = (
{
name = doubleprimemod;
transform = "{1, 0, 0, 1, 0, -100}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 406;
},
{
components = (
{
name = doubleprimemod;
transform = "{1, 0, 0, 1, 0, -100}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 446;
}
);
unicode = 2033;
},
{
glyphname = bar;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"134 -239 LINE",
"134 730 LINE",
"98 730 LINE",
"98 -239 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 0 1 0 131 2 1 1 1 22 1 76 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 232;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"142 -239 LINE",
"142 730 LINE",
"98 730 LINE",
"98 -239 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 0 1 0 131 2 1 1 1 22 1 76 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 240;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"135 265 LINE",
"135 607 LINE",
"97 607 LINE",
"97 265 LINE"
);
},
{
closed = 1;
nodes = (
"97 -231 LINE",
"135 -231 LINE",
"135 113 LINE",
"97 113 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
4 1 1 0 2 0 1 2 126 0 2 3 0 2 3 124 0 0 0 17 75 0 3 3 22 3 76 0 0 7 6 5 4 0 3 0 3 17 5 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 232;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"143 265 LINE",
"143 607 LINE",
"97 607 LINE",
"97 265 LINE"
);
},
{
closed = 1;
nodes = (
"97 -231 LINE",
"143 -231 LINE",
"143 113 LINE",
"97 113 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
4 1 1 1 0 93 0 0 0 17 75 0 2 2 3 93 0 3 3 22 3 76 0 0 7 6 5 4 0 3 0 3 17 5 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 240;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = dagger;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"409 458 OFFCURVE",
"388 450 OFFCURVE",
"373 442 QCURVE SMOOTH",
"352 431 OFFCURVE",
"311 417 OFFCURVE",
"277 416 QCURVE",
"289 452 OFFCURVE",
"289 477 QCURVE SMOOTH",
"289 487 OFFCURVE",
"283 511 QCURVE SMOOTH",
"277 537 OFFCURVE",
"277 544 QCURVE SMOOTH",
"277 553 OFFCURVE",
"284 565 OFFCURVE",
"292 574 QCURVE",
"307 589 OFFCURVE",
"307 604 QCURVE SMOOTH",
"307 618 OFFCURVE",
"279 640 OFFCURVE",
"259 640 QCURVE SMOOTH",
"239 640 OFFCURVE",
"211 618 OFFCURVE",
"211 604 QCURVE SMOOTH",
"211 590 OFFCURVE",
"226 574 QCURVE SMOOTH",
"233 567 OFFCURVE",
"241 553 OFFCURVE",
"241 544 QCURVE SMOOTH",
"242 536 OFFCURVE",
"236 516 QCURVE SMOOTH",
"229 492 OFFCURVE",
"229 477 QCURVE SMOOTH",
"229 452 OFFCURVE",
"241 416 QCURVE",
"207 417 OFFCURVE",
"166 431 OFFCURVE",
"142 443 QCURVE SMOOTH",
"127 451 OFFCURVE",
"108 458 OFFCURVE",
"95 458 QCURVE SMOOTH",
"70 458 OFFCURVE",
"35 429 OFFCURVE",
"35 408 QCURVE SMOOTH",
"35 358 OFFCURVE",
"75 358 QCURVE SMOOTH",
"84 358 OFFCURVE",
"95 367 OFFCURVE",
"102 376 QCURVE SMOOTH",
"111 387 OFFCURVE",
"124 397 OFFCURVE",
"136 397 QCURVE SMOOTH",
"147 397 OFFCURVE",
"171 393 QCURVE SMOOTH",
"193 390 OFFCURVE",
"204 390 QCURVE SMOOTH",
"226 390 OFFCURVE",
"245 399 QCURVE",
"244 381 OFFCURVE",
"235 354 OFFCURVE",
"224 337 QCURVE SMOOTH",
"216 325 OFFCURVE",
"209 308 OFFCURVE",
"209 299 QCURVE SMOOTH",
"209 289 OFFCURVE",
"212 271 QCURVE",
"220 208 OFFCURVE",
"222 156 QCURVE SMOOTH",
"225 9 OFFCURVE",
"239 -150 OFFCURVE",
"259 -150 QCURVE SMOOTH",
"279 -150 OFFCURVE",
"293 9 OFFCURVE",
"296 156 QCURVE SMOOTH",
"298 208 OFFCURVE",
"306 271 QCURVE",
"309 289 OFFCURVE",
"309 299 QCURVE SMOOTH",
"309 313 OFFCURVE",
"295 333 QCURVE SMOOTH",
"284 349 OFFCURVE",
"274 377 OFFCURVE",
"273 399 QCURVE",
"292 390 OFFCURVE",
"314 390 QCURVE SMOOTH",
"325 390 OFFCURVE",
"347 393 QCURVE SMOOTH",
"371 397 OFFCURVE",
"382 397 QCURVE SMOOTH",
"394 397 OFFCURVE",
"407 387 OFFCURVE",
"416 376 QCURVE",
"423 366 OFFCURVE",
"434 358 OFFCURVE",
"443 358 QCURVE SMOOTH",
"483 358 OFFCURVE",
"483 408 QCURVE SMOOTH",
"483 429 OFFCURVE",
"448 458 OFFCURVE",
"423 458 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
90 68 2 7 9 42 17 2 1 8 2 74 0 9 7 9 131 5 1 1 8 2 8 1 2 126 0 3 0 3 132 12 11 2 7 6 1 0 3 7 0 103 4 1 2 2 8 95 10 1 8 8 20 2 76 0 0 0 102 0 101 97 96 83 81 20 35 36 35 45 44 35 36 35 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 528;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"408 466 OFFCURVE",
"384 456 OFFCURVE",
"368 446 QCURVE SMOOTH",
"349 434 OFFCURVE",
"314 419 OFFCURVE",
"284 417 QCURVE",
"312 447 OFFCURVE",
"312 470 QCURVE SMOOTH",
"312 485 OFFCURVE",
"298 499 QCURVE SMOOTH",
"284 513 OFFCURVE",
"285 522 QCURVE SMOOTH",
"285 531 OFFCURVE",
"295 542 OFFCURVE",
"305 548 QCURVE SMOOTH",
"330 563 OFFCURVE",
"330 582 QCURVE SMOOTH",
"330 605 OFFCURVE",
"289 640 OFFCURVE",
"259 640 QCURVE SMOOTH",
"230 640 OFFCURVE",
"189 605 OFFCURVE",
"189 582 QCURVE SMOOTH",
"189 563 OFFCURVE",
"214 548 QCURVE SMOOTH",
"224 542 OFFCURVE",
"234 531 OFFCURVE",
"234 522 QCURVE SMOOTH",
"234 514 OFFCURVE",
"222 500 QCURVE SMOOTH",
"207 483 OFFCURVE",
"207 470 QCURVE SMOOTH",
"207 449 OFFCURVE",
"234 417 QCURVE",
"204 419 OFFCURVE",
"169 433 OFFCURVE",
"149 446 QCURVE SMOOTH",
"133 456 OFFCURVE",
"109 466 OFFCURVE",
"91 466 QCURVE SMOOTH",
"66 466 OFFCURVE",
"35 433 OFFCURVE",
"35 404 QCURVE SMOOTH",
"35 351 OFFCURVE",
"77 351 QCURVE SMOOTH",
"89 351 OFFCURVE",
"102 361 OFFCURVE",
"111 372 QCURVE SMOOTH",
"118 381 OFFCURVE",
"129 390 OFFCURVE",
"138 390 QCURVE SMOOTH",
"148 390 OFFCURVE",
"164 383 QCURVE SMOOTH",
"179 377 OFFCURVE",
"189 375 QCURVE SMOOTH",
"217 375 OFFCURVE",
"241 393 QCURVE",
"239 377 OFFCURVE",
"225 352 OFFCURVE",
"214 338 QCURVE SMOOTH",
"204 326 OFFCURVE",
"194 309 OFFCURVE",
"194 299 QCURVE SMOOTH",
"194 292 OFFCURVE",
"199 272 QCURVE",
"215 221 OFFCURVE",
"218 156 QCURVE SMOOTH",
"222 29 OFFCURVE",
"242 -150 OFFCURVE",
"259 -150 QCURVE SMOOTH",
"276 -150 OFFCURVE",
"296 29 OFFCURVE",
"300 156 QCURVE SMOOTH",
"303 221 OFFCURVE",
"319 272 QCURVE",
"324 292 OFFCURVE",
"324 299 QCURVE SMOOTH",
"324 313 OFFCURVE",
"306 333 QCURVE SMOOTH",
"293 348 OFFCURVE",
"278 374 OFFCURVE",
"277 393 QCURVE",
"303 375 OFFCURVE",
"329 375 QCURVE SMOOTH",
"341 375 OFFCURVE",
"355 383 QCURVE SMOOTH",
"372 390 OFFCURVE",
"381 390 QCURVE SMOOTH",
"390 390 OFFCURVE",
"401 382 OFFCURVE",
"408 372 QCURVE",
"417 361 OFFCURVE",
"430 351 OFFCURVE",
"442 351 QCURVE SMOOTH",
"483 351 OFFCURVE",
"483 404 QCURVE SMOOTH",
"483 433 OFFCURVE",
"452 466 OFFCURVE",
"427 466 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 80 values pushed */
96 1 7 9 43 17 2 1 8 23 1 3 0 3 74 0 9 7 9 131 5 1 1 8 2 8 1 2 126 0 3 0 3 132 12 11 2 7 6 1 0 3 7 0 103 4 1 2 2 8 95 10 1 8 8 20 2 76 0 0 0 112 0 111 107 106 88 86 20 36 36 35 45 45 35 36 35 13 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 528;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = literSign;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"194 23 OFFCURVE",
"170 60 OFFCURVE",
"170 107 QCURVE SMOOTH",
"170 129 OFFCURVE",
"174 245 QCURVE",
"268 307 OFFCURVE",
"337 437 OFFCURVE",
"337 504 QCURVE SMOOTH",
"336 555 OFFCURVE",
"286 607 OFFCURVE",
"242 607 QCURVE SMOOTH",
"168 607 OFFCURVE",
"98 489 OFFCURVE",
"94 387 QCURVE SMOOTH",
"88 236 LINE",
"53 217 OFFCURVE",
"1 196 QCURVE",
"11 166 LINE",
"86 200 LINE",
"84 104 OFFCURVE",
"129 -6 OFFCURVE",
"200 -6 QCURVE SMOOTH",
"244 -6 OFFCURVE",
"300 40 OFFCURVE",
"322 90 QCURVE",
"301 100 LINE",
"285 62 OFFCURVE",
"243 23 OFFCURVE",
"222 23 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"267 580 OFFCURVE",
"296 538 OFFCURVE",
"296 495 QCURVE SMOOTH",
"296 431 OFFCURVE",
"239 329 OFFCURVE",
"176 284 QCURVE",
"179 360 LINE SMOOTH",
"185 501 OFFCURVE",
"203 580 OFFCURVE",
"241 580 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
36 31 18 5 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 385;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"239 31 OFFCURVE",
"215 65 OFFCURVE",
"215 107 QCURVE SMOOTH",
"215 159 OFFCURVE",
"220 242 QCURVE",
"313 302 OFFCURVE",
"382 426 OFFCURVE",
"382 489 QCURVE SMOOTH",
"382 547 OFFCURVE",
"320 607 OFFCURVE",
"262 607 QCURVE SMOOTH",
"173 607 OFFCURVE",
"98 485 OFFCURVE",
"93 387 QCURVE SMOOTH",
"85 214 LINE",
"40 193 OFFCURVE",
"16 183 QCURVE",
"26 151 LINE",
"84 177 LINE",
"84 76 OFFCURVE",
"158 -6 OFFCURVE",
"222 -6 QCURVE SMOOTH",
"270 -6 OFFCURVE",
"343 39 OFFCURVE",
"367 90 QCURVE",
"339 104 LINE",
"325 68 OFFCURVE",
"287 31 OFFCURVE",
"267 31 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312 573 OFFCURVE",
"341 525 OFFCURVE",
"341 480 QCURVE SMOOTH",
"341 421 OFFCURVE",
"284 327 OFFCURVE",
"222 285 QCURVE",
"225 378 LINE SMOOTH",
"229 504 OFFCURVE",
"252 573 OFFCURVE",
"286 573 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
39 33 20 6 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 430;
}
);
note = uni2113;
unicode = 2113;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"434 130 OFFCURVE",
"423 122 OFFCURVE",
"416 112 QCURVE",
"407 101 OFFCURVE",
"394 91 OFFCURVE",
"382 91 QCURVE SMOOTH",
"371 91 OFFCURVE",
"347 95 QCURVE SMOOTH",
"325 98 OFFCURVE",
"314 98 QCURVE SMOOTH",
"290 98 OFFCURVE",
"273 90 QCURVE",
"274 114 OFFCURVE",
"285 143 OFFCURVE",
"296 159 QCURVE SMOOTH",
"309 176 OFFCURVE",
"309 189 QCURVE SMOOTH",
"309 211 OFFCURVE",
"290 244 QCURVE",
"309 277 OFFCURVE",
"309 299 QCURVE SMOOTH",
"309 312 OFFCURVE",
"296 329 QCURVE",
"285 345 OFFCURVE",
"274 374 OFFCURVE",
"273 398 QCURVE",
"290 390 OFFCURVE",
"314 390 QCURVE SMOOTH",
"325 390 OFFCURVE",
"347 393 QCURVE SMOOTH",
"371 397 OFFCURVE",
"382 397 QCURVE SMOOTH",
"394 397 OFFCURVE",
"407 387 OFFCURVE",
"416 376 QCURVE",
"423 366 OFFCURVE",
"434 358 OFFCURVE",
"443 358 QCURVE SMOOTH",
"483 358 OFFCURVE",
"483 408 QCURVE SMOOTH",
"483 429 OFFCURVE",
"448 458 OFFCURVE",
"423 458 QCURVE SMOOTH",
"409 458 OFFCURVE",
"388 450 OFFCURVE",
"374 442 QCURVE SMOOTH",
"352 430 OFFCURVE",
"312 417 OFFCURVE",
"278 416 QCURVE",
"289 450 OFFCURVE",
"289 477 QCURVE SMOOTH",
"289 487 OFFCURVE",
"283 511 QCURVE SMOOTH",
"277 537 OFFCURVE",
"277 544 QCURVE SMOOTH",
"277 553 OFFCURVE",
"284 565 OFFCURVE",
"292 574 QCURVE SMOOTH",
"307 589 OFFCURVE",
"307 604 QCURVE SMOOTH",
"307 618 OFFCURVE",
"279 640 OFFCURVE",
"259 640 QCURVE SMOOTH",
"239 640 OFFCURVE",
"211 618 OFFCURVE",
"211 604 QCURVE SMOOTH",
"211 595 OFFCURVE",
"219 582 OFFCURVE",
"226 574 QCURVE SMOOTH",
"233 567 OFFCURVE",
"241 553 OFFCURVE",
"241 544 QCURVE SMOOTH",
"241 534 OFFCURVE",
"236 516 QCURVE SMOOTH",
"230 494 OFFCURVE",
"229 477 QCURVE SMOOTH",
"229 451 OFFCURVE",
"240 416 QCURVE",
"207 417 OFFCURVE",
"167 431 OFFCURVE",
"142 443 QCURVE",
"127 451 OFFCURVE",
"108 458 OFFCURVE",
"95 458 QCURVE SMOOTH",
"70 458 OFFCURVE",
"35 429 OFFCURVE",
"35 408 QCURVE SMOOTH",
"35 358 OFFCURVE",
"75 358 QCURVE SMOOTH",
"84 358 OFFCURVE",
"95 367 OFFCURVE",
"102 376 QCURVE SMOOTH",
"111 387 OFFCURVE",
"124 397 OFFCURVE",
"136 397 QCURVE SMOOTH",
"147 397 OFFCURVE",
"171 393 QCURVE SMOOTH",
"193 390 OFFCURVE",
"204 390 QCURVE SMOOTH",
"228 390 OFFCURVE",
"245 398 QCURVE",
"244 373 OFFCURVE",
"232 344 OFFCURVE",
"222 329 QCURVE SMOOTH",
"217 322 OFFCURVE",
"209 307 OFFCURVE",
"209 299 QCURVE SMOOTH",
"209 273 OFFCURVE",
"227 244 QCURVE",
"209 212 OFFCURVE",
"209 189 QCURVE SMOOTH",
"209 181 OFFCURVE",
"217 166 OFFCURVE",
"222 159 QCURVE SMOOTH",
"232 144 OFFCURVE",
"244 115 OFFCURVE",
"245 90 QCURVE",
"228 98 OFFCURVE",
"204 98 QCURVE SMOOTH",
"193 98 OFFCURVE",
"171 95 QCURVE SMOOTH",
"147 91 OFFCURVE",
"136 91 QCURVE SMOOTH",
"124 91 OFFCURVE",
"111 101 OFFCURVE",
"102 112 QCURVE SMOOTH",
"95 121 OFFCURVE",
"84 130 OFFCURVE",
"75 130 QCURVE SMOOTH",
"35 130 OFFCURVE",
"35 80 QCURVE SMOOTH",
"35 59 OFFCURVE",
"70 30 OFFCURVE",
"95 30 QCURVE SMOOTH",
"108 30 OFFCURVE",
"127 37 OFFCURVE",
"142 45 QCURVE SMOOTH",
"167 58 OFFCURVE",
"207 71 OFFCURVE",
"240 72 QCURVE",
"229 38 OFFCURVE",
"229 11 QCURVE SMOOTH",
"227 6 OFFCURVE",
"236 -26 QCURVE SMOOTH",
"241 -50 OFFCURVE",
"241 -56 QCURVE SMOOTH",
"241 -65 OFFCURVE",
"233 -79 OFFCURVE",
"226 -86 QCURVE SMOOTH",
"211 -100 OFFCURVE",
"211 -116 QCURVE SMOOTH",
"211 -130 OFFCURVE",
"239 -152 OFFCURVE",
"259 -152 QCURVE SMOOTH",
"279 -152 OFFCURVE",
"307 -130 OFFCURVE",
"307 -116 QCURVE SMOOTH",
"307 -101 OFFCURVE",
"292 -86 QCURVE",
"284 -77 OFFCURVE",
"277 -65 OFFCURVE",
"277 -56 QCURVE SMOOTH",
"277 -49 OFFCURVE",
"283 -23 QCURVE SMOOTH",
"289 1 OFFCURVE",
"289 11 QCURVE SMOOTH",
"289 38 OFFCURVE",
"278 72 QCURVE",
"312 71 OFFCURVE",
"352 58 OFFCURVE",
"374 46 QCURVE SMOOTH",
"388 38 OFFCURVE",
"409 30 OFFCURVE",
"423 30 QCURVE SMOOTH",
"448 30 OFFCURVE",
"483 59 OFFCURVE",
"483 80 QCURVE SMOOTH",
"483 130 OFFCURVE",
"443 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 142 values pushed */
130 108 2 11 13 160 82 2 9 12 168 76 73 3 5 10 176 64 2 1 6 33 1 2 0 5 74 0 13 11 13 131 17 1 9 12 8 12 9 8 126 20 1 6 7 1 7 6 1 126 0 2 0 2 132 15 1 11 16 1 10 5 11 10 103 19 1 7 3 1 1 0 7 1 103 22 21 2 5 4 1 0 2 5 0 103 18 1 8 8 12 95 14 1 12 12 20 8 76 0 0 0 189 0 188 184 182 179 177 159 157 154 152 148 146 143 141 137 136 123 121 106 105 101 99 96 94 90 88 85 83 35 36 35 36 31 45 20 35 23 7 28 
CALL[ ]\011/* CallFunction */";
};
width = 528;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"430 138 OFFCURVE",
"417 128 OFFCURVE",
"408 117 QCURVE",
"401 107 OFFCURVE",
"390 99 OFFCURVE",
"381 99 QCURVE SMOOTH",
"372 99 OFFCURVE",
"355 106 QCURVE",
"343 113 OFFCURVE",
"329 113 QCURVE SMOOTH",
"303 113 OFFCURVE",
"277 95 QCURVE",
"277 111 OFFCURVE",
"287 135 OFFCURVE",
"304 152 QCURVE SMOOTH",
"324 172 OFFCURVE",
"324 189 QCURVE SMOOTH",
"324 215 OFFCURVE",
"298 244 QCURVE",
"324 275 OFFCURVE",
"324 299 QCURVE SMOOTH",
"324 318 OFFCURVE",
"304 335 QCURVE SMOOTH",
"289 348 OFFCURVE",
"277 374 OFFCURVE",
"277 393 QCURVE",
"303 375 OFFCURVE",
"329 375 QCURVE SMOOTH",
"341 376 OFFCURVE",
"355 383 QCURVE SMOOTH",
"368 390 OFFCURVE",
"381 390 QCURVE SMOOTH",
"390 390 OFFCURVE",
"401 382 OFFCURVE",
"408 372 QCURVE",
"417 361 OFFCURVE",
"430 351 OFFCURVE",
"442 351 QCURVE SMOOTH",
"483 351 OFFCURVE",
"483 404 QCURVE SMOOTH",
"483 433 OFFCURVE",
"452 466 OFFCURVE",
"427 466 QCURVE SMOOTH",
"408 466 OFFCURVE",
"384 456 OFFCURVE",
"368 446 QCURVE SMOOTH",
"350 434 OFFCURVE",
"316 420 OFFCURVE",
"289 417 QCURVE",
"312 446 OFFCURVE",
"312 470 QCURVE SMOOTH",
"312 484 OFFCURVE",
"298 499 QCURVE SMOOTH",
"285 512 OFFCURVE",
"285 522 QCURVE SMOOTH",
"285 531 OFFCURVE",
"295 542 OFFCURVE",
"305 548 QCURVE SMOOTH",
"330 563 OFFCURVE",
"330 582 QCURVE SMOOTH",
"330 605 OFFCURVE",
"289 640 OFFCURVE",
"259 640 QCURVE SMOOTH",
"230 640 OFFCURVE",
"189 605 OFFCURVE",
"189 582 QCURVE SMOOTH",
"189 569 OFFCURVE",
"202 555 OFFCURVE",
"214 548 QCURVE SMOOTH",
"225 542 OFFCURVE",
"234 531 OFFCURVE",
"234 522 QCURVE SMOOTH",
"234 514 OFFCURVE",
"222 500 QCURVE SMOOTH",
"207 483 OFFCURVE",
"207 470 QCURVE SMOOTH",
"207 445 OFFCURVE",
"229 417 QCURVE",
"202 420 OFFCURVE",
"167 434 OFFCURVE",
"149 446 QCURVE SMOOTH",
"133 456 OFFCURVE",
"109 466 OFFCURVE",
"91 466 QCURVE SMOOTH",
"66 466 OFFCURVE",
"35 433 OFFCURVE",
"35 404 QCURVE SMOOTH",
"35 351 OFFCURVE",
"77 351 QCURVE SMOOTH",
"89 351 OFFCURVE",
"102 361 OFFCURVE",
"111 372 QCURVE SMOOTH",
"118 381 OFFCURVE",
"129 390 OFFCURVE",
"138 390 QCURVE SMOOTH",
"149 390 OFFCURVE",
"164 383 QCURVE SMOOTH",
"179 376 OFFCURVE",
"189 375 QCURVE SMOOTH",
"217 375 OFFCURVE",
"241 393 QCURVE",
"241 374 OFFCURVE",
"227 349 OFFCURVE",
"214 335 QCURVE",
"204 326 OFFCURVE",
"194 310 OFFCURVE",
"194 299 QCURVE SMOOTH",
"194 275 OFFCURVE",
"220 244 QCURVE",
"194 215 OFFCURVE",
"194 189 QCURVE SMOOTH",
"194 178 OFFCURVE",
"203 164 OFFCURVE",
"214 152 QCURVE",
"227 139 OFFCURVE",
"241 115 OFFCURVE",
"241 95 QCURVE",
"215 113 OFFCURVE",
"189 113 QCURVE SMOOTH",
"176 113 OFFCURVE",
"164 106 QCURVE",
"147 99 OFFCURVE",
"138 99 QCURVE SMOOTH",
"129 99 OFFCURVE",
"118 108 OFFCURVE",
"111 117 QCURVE SMOOTH",
"102 128 OFFCURVE",
"89 138 OFFCURVE",
"77 138 QCURVE SMOOTH",
"35 138 OFFCURVE",
"35 85 QCURVE SMOOTH",
"35 56 OFFCURVE",
"66 23 OFFCURVE",
"91 23 QCURVE SMOOTH",
"108 23 OFFCURVE",
"132 32 OFFCURVE",
"149 42 QCURVE",
"167 54 OFFCURVE",
"202 68 OFFCURVE",
"229 71 QCURVE",
"207 40 OFFCURVE",
"207 19 QCURVE SMOOTH",
"206 4 OFFCURVE",
"222 -12 QCURVE SMOOTH",
"234 -27 OFFCURVE",
"234 -34 QCURVE SMOOTH",
"234 -43 OFFCURVE",
"224 -54 OFFCURVE",
"214 -60 QCURVE SMOOTH",
"189 -74 OFFCURVE",
"189 -94 QCURVE SMOOTH",
"189 -117 OFFCURVE",
"230 -152 OFFCURVE",
"259 -152 QCURVE SMOOTH",
"289 -152 OFFCURVE",
"330 -117 OFFCURVE",
"330 -94 QCURVE SMOOTH",
"330 -74 OFFCURVE",
"305 -60 QCURVE SMOOTH",
"295 -54 OFFCURVE",
"285 -43 OFFCURVE",
"285 -34 QCURVE SMOOTH",
"285 -26 OFFCURVE",
"297 -11 QCURVE SMOOTH",
"312 8 OFFCURVE",
"312 19 QCURVE SMOOTH",
"312 39 OFFCURVE",
"289 71 QCURVE",
"317 68 OFFCURVE",
"350 55 OFFCURVE",
"368 43 QCURVE SMOOTH",
"383 33 OFFCURVE",
"408 23 OFFCURVE",
"427 23 QCURVE SMOOTH",
"452 23 OFFCURVE",
"483 56 OFFCURVE",
"483 85 QCURVE SMOOTH",
"483 138 OFFCURVE",
"442 138 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
139 1 9 10 173 149 113 88 4 7 9 181 80 2 3 8 189 71 46 10 4 0 4 37 1 1 0 5 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 68 values pushed */
0 10 9 10 131 13 1 7 9 6 9 7 6 126 14 1 6 8 9 6 8 124 15 1 5 3 4 3 5 4 126 16 1 4 0 3 4 0 124 0 1 0 1 132 11 1 9 12 1 8 3 9 8 103 18 17 2 3 3 0 95 2 1 0 0 21 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 75 values pushed */
0 10 9 10 131 13 1 7 9 6 9 7 6 126 14 1 6 8 9 6 8 124 15 1 5 3 4 3 5 4 126 16 1 4 0 3 4 0 124 0 1 0 1 132 11 1 9 12 1 8 3 9 8 103 18 17 2 3 5 0 3 87 18 17 2 3 3 0 95 2 1 0 3 0 79 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 42 values pushed */
0 0 0 203 0 202 198 196 193 191 172 170 167 165 161 159 156 154 131 129 108 106 102 100 96 94 91 89 70 68 65 63 59 57 53 51 29 27 35 19 7 21 
CALL[ ]\011/* CallFunction */";
};
width = 528;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"705 271 LINE",
"973 271 LINE",
"973 294 LINE",
"705 294 LINE"
);
},
{
closed = 1;
nodes = (
"456 597 LINE",
"456 567 LINE",
"505 569 LINE",
"508 569 LINE SMOOTH",
"525 569 OFFCURVE",
"525 549 QCURVE SMOOTH",
"525 155 LINE",
"200 597 LINE",
"45 597 LINE",
"45 567 LINE",
"84 569 LINE",
"93 570 OFFCURVE",
"104 557 OFFCURVE",
"104 548 QCURVE SMOOTH",
"104 49 LINE SMOOTH",
"104 27 OFFCURVE",
"84 27 QCURVE",
"45 29 LINE",
"45 0 LINE",
"206 0 LINE",
"206 29 LINE",
"157 27 LINE",
"138 27 OFFCURVE",
"138 49 QCURVE SMOOTH",
"138 525 LINE",
"529 -6 LINE",
"559 -6 LINE",
"559 548 LINE SMOOTH",
"559 569 OFFCURVE",
"576 569 QCURVE SMOOTH",
"578 569 LINE",
"617 567 LINE",
"617 597 LINE"
);
},
{
closed = 1;
nodes = (
"706 420 OFFCURVE",
"773 344 OFFCURVE",
"837 344 QCURVE SMOOTH",
"900 344 OFFCURVE",
"969 416 OFFCURVE",
"969 480 QCURVE SMOOTH",
"969 546 OFFCURVE",
"898 618 OFFCURVE",
"837 618 QCURVE SMOOTH",
"776 618 OFFCURVE",
"706 545 OFFCURVE",
"706 480 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"777 543 OFFCURVE",
"802 594 OFFCURVE",
"837 594 QCURVE SMOOTH",
"872 594 OFFCURVE",
"898 545 OFFCURVE",
"898 480 QCURVE SMOOTH",
"898 434 OFFCURVE",
"886 386 OFFCURVE",
"860 368 OFFCURVE",
"837 368 QCURVE SMOOTH",
"800 368 OFFCURVE",
"777 417 OFFCURVE",
"777 480 QCURVE SMOOTH"
);
}
);
width = 1013;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"699 256 LINE",
"1002 256 LINE",
"1002 286 LINE",
"699 286 LINE"
);
},
{
closed = 1;
nodes = (
"475 597 LINE",
"475 567 LINE",
"524 569 LINE",
"527 569 LINE SMOOTH",
"544 569 OFFCURVE",
"544 549 QCURVE SMOOTH",
"544 183 LINE",
"240 597 LINE",
"34 597 LINE",
"34 567 LINE",
"73 569 LINE",
"82 570 OFFCURVE",
"93 557 OFFCURVE",
"93 548 QCURVE SMOOTH",
"93 49 LINE SMOOTH",
"93 27 OFFCURVE",
"73 27 QCURVE",
"34 29 LINE",
"34 0 LINE",
"202 0 LINE",
"202 29 LINE",
"153 27 LINE",
"134 27 OFFCURVE",
"134 49 QCURVE SMOOTH",
"134 525 LINE",
"525 -6 LINE",
"585 -6 LINE",
"585 548 LINE SMOOTH",
"585 569 OFFCURVE",
"602 569 QCURVE SMOOTH",
"604 569 LINE",
"643 567 LINE",
"643 597 LINE"
);
},
{
closed = 1;
nodes = (
"699 420 OFFCURVE",
"777 344 OFFCURVE",
"852 344 QCURVE SMOOTH",
"925 344 OFFCURVE",
"1007 416 OFFCURVE",
"1007 480 QCURVE SMOOTH",
"1007 546 OFFCURVE",
"924 618 OFFCURVE",
"852 618 QCURVE SMOOTH",
"781 618 OFFCURVE",
"699 545 OFFCURVE",
"699 480 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"807 539 OFFCURVE",
"826 587 OFFCURVE",
"852 587 QCURVE SMOOTH",
"879 587 OFFCURVE",
"898 541 OFFCURVE",
"898 480 QCURVE SMOOTH",
"898 437 OFFCURVE",
"889 393 OFFCURVE",
"870 376 OFFCURVE",
"852 376 QCURVE SMOOTH",
"825 376 OFFCURVE",
"807 422 OFFCURVE",
"807 480 QCURVE SMOOTH"
);
}
);
width = 1028;
}
);
unicode = 2116;
},
{
glyphname = estimated;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"213 607 OFFCURVE",
"55 445 OFFCURVE",
"55 299 QCURVE SMOOTH",
"55 153 OFFCURVE",
"214 -11 OFFCURVE",
"359 -11 QCURVE SMOOTH",
"448 -11 OFFCURVE",
"583 57 OFFCURVE",
"619 120 QCURVE",
"594 135 LINE",
"561 78 OFFCURVE",
"441 17 OFFCURVE",
"359 17 QCURVE SMOOTH",
"231 17 OFFCURVE",
"158 88 QCURVE",
"158 299 LINE",
"654 299 LINE",
"654 443 OFFCURVE",
"498 607 OFFCURVE",
"355 607 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"478 579 OFFCURVE",
"551 509 QCURVE",
"551 327 LINE",
"158 327 LINE",
"158 511 LINE",
"231 579 OFFCURVE",
"355 579 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
22 20 12 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 709;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"213 607 OFFCURVE",
"55 445 OFFCURVE",
"55 299 QCURVE SMOOTH",
"55 153 OFFCURVE",
"213 -11 OFFCURVE",
"358 -11 QCURVE SMOOTH",
"446 -11 OFFCURVE",
"580 57 OFFCURVE",
"616 120 QCURVE",
"586 139 LINE",
"554 83 OFFCURVE",
"439 25 OFFCURVE",
"358 25 QCURVE SMOOTH",
"266 25 OFFCURVE",
"203 69 QCURVE",
"203 299 LINE",
"651 299 LINE",
"651 443 OFFCURVE",
"496 607 OFFCURVE",
"354 607 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"442 572 OFFCURVE",
"503 528 QCURVE",
"503 335 LINE",
"203 335 LINE",
"203 530 LINE",
"266 572 OFFCURVE",
"354 572 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
22 20 12 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 706;
}
);
note = estimated;
unicode = 212E;
},
{
glyphname = apostrophemod;
layers = (
{
anchors = (
{
name = _topright;
position = "{189, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"81 431 LINE",
"116 455 OFFCURVE",
"172 528 OFFCURVE",
"172 570 QCURVE SMOOTH",
"172 603 OFFCURVE",
"143 638 OFFCURVE",
"114 638 QCURVE SMOOTH",
"95 638 OFFCURVE",
"66 612 OFFCURVE",
"66 595 QCURVE SMOOTH",
"66 580 OFFCURVE",
"78 559 OFFCURVE",
"92 559 QCURVE SMOOTH",
"122 559 OFFCURVE",
"122 535 QCURVE SMOOTH",
"122 516 OFFCURVE",
"87 460 OFFCURVE",
"65 440 QCURVE"
);
}
);
width = 250;
},
{
anchors = (
{
name = _topright;
position = "{189, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 416 LINE",
"109 439 OFFCURVE",
"174 518 OFFCURVE",
"174 566 QCURVE SMOOTH",
"174 603 OFFCURVE",
"128 653 OFFCURVE",
"88 653 QCURVE SMOOTH",
"58 653 OFFCURVE",
"23 617 OFFCURVE",
"23 591 QCURVE SMOOTH",
"23 568 OFFCURVE",
"46 542 OFFCURVE",
"69 542 QCURVE SMOOTH",
"100 542 OFFCURVE",
"100 518 QCURVE SMOOTH",
"100 494 OFFCURVE",
"68 446 OFFCURVE",
"46 433 QCURVE"
);
}
);
width = 236;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"196 725 OFFCURVE",
"151 723 OFFCURVE",
"136 714 QCURVE SMOOTH",
"128 709 OFFCURVE",
"123 697 OFFCURVE",
"118 675 QCURVE SMOOTH",
"87 537 LINE",
"81 512 OFFCURVE",
"83 508 QCURVE SMOOTH",
"87 500 OFFCURVE",
"98 508 QCURVE SMOOTH",
"105 513 OFFCURVE",
"111 526 QCURVE SMOOTH",
"196 704 LINE SMOOTH",
"202 715 OFFCURVE",
"199 720 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"326 725 OFFCURVE",
"281 723 OFFCURVE",
"266 714 QCURVE SMOOTH",
"258 709 OFFCURVE",
"253 697 OFFCURVE",
"248 675 QCURVE SMOOTH",
"217 537 LINE",
"211 512 OFFCURVE",
"213 508 QCURVE SMOOTH",
"217 500 OFFCURVE",
"228 508 QCURVE SMOOTH",
"235 513 OFFCURVE",
"241 526 QCURVE SMOOTH",
"326 704 LINE SMOOTH",
"332 715 OFFCURVE",
"329 720 QCURVE SMOOTH"
);
}
);
width = 406;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"207 721 OFFCURVE",
"151 719 OFFCURVE",
"135 710 QCURVE SMOOTH",
"126 705 OFFCURVE",
"121 693 OFFCURVE",
"116 671 QCURVE SMOOTH",
"86 533 LINE SMOOTH",
"81 510 OFFCURVE",
"86 502 QCURVE SMOOTH",
"91 493 OFFCURVE",
"100 499 QCURVE SMOOTH",
"110 505 OFFCURVE",
"117 518 QCURVE SMOOTH",
"210 690 LINE SMOOTH",
"217 703 OFFCURVE",
"212 712 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"377 721 OFFCURVE",
"321 719 OFFCURVE",
"305 710 QCURVE SMOOTH",
"296 705 OFFCURVE",
"291 693 OFFCURVE",
"286 671 QCURVE SMOOTH",
"256 533 LINE SMOOTH",
"251 510 OFFCURVE",
"256 502 QCURVE SMOOTH",
"261 493 OFFCURVE",
"270 499 QCURVE SMOOTH",
"280 505 OFFCURVE",
"287 518 QCURVE SMOOTH",
"380 690 LINE SMOOTH",
"387 703 OFFCURVE",
"382 712 QCURVE SMOOTH"
);
}
);
width = 446;
}
);
unicode = 02BA;
},
{
glyphname = firsttonechinese;
layers = (
{
components = (
{
alignment = 1;
name = macron;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 447;
},
{
components = (
{
alignment = 1;
name = macron;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 447;
}
);
note = uni02C9;
unicode = 02C9;
},
{
glyphname = primemod;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"196 725 OFFCURVE",
"151 723 OFFCURVE",
"136 714 QCURVE SMOOTH",
"128 709 OFFCURVE",
"123 697 OFFCURVE",
"118 675 QCURVE SMOOTH",
"87 537 LINE",
"81 512 OFFCURVE",
"83 508 QCURVE SMOOTH",
"87 500 OFFCURVE",
"98 508 QCURVE SMOOTH",
"105 513 OFFCURVE",
"111 526 QCURVE SMOOTH",
"196 704 LINE SMOOTH",
"202 715 OFFCURVE",
"199 720 QCURVE SMOOTH"
);
}
);
width = 276;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"207 721 OFFCURVE",
"151 719 OFFCURVE",
"135 710 QCURVE SMOOTH",
"126 705 OFFCURVE",
"121 693 OFFCURVE",
"116 671 QCURVE SMOOTH",
"86 533 LINE SMOOTH",
"81 510 OFFCURVE",
"86 502 QCURVE SMOOTH",
"91 493 OFFCURVE",
"100 499 QCURVE SMOOTH",
"110 505 OFFCURVE",
"117 518 QCURVE SMOOTH",
"210 690 LINE SMOOTH",
"217 703 OFFCURVE",
"212 712 QCURVE SMOOTH"
);
}
);
width = 276;
}
);
unicode = 02B9;
},
{
glyphname = dieresiscomb;
layers = (
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0308;
},
{
glyphname = dieresiscomb_gravecomb;
layers = (
{
components = (
{
alignment = -1;
name = dieresisgrave;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresisgrave;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_acutecomb;
layers = (
{
components = (
{
alignment = -1;
name = dieresisacute;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresisacute;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_caroncomb;
layers = (
{
components = (
{
alignment = -1;
name = dieresiscaron;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresiscaron;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_macroncomb;
layers = (
{
components = (
{
alignment = -1;
name = dieresismacron;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresismacron;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dotaccentcomb;
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -178, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -242, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0307;
},
{
glyphname = dotaccentcomb_macroncomb;
layers = (
{
components = (
{
alignment = -1;
name = dotaccentmacron;
transform = "{1, 0, 0, 1, -279, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dotaccentmacron;
transform = "{1, 0, 0, 1, -279, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = gravecomb;
layers = (
{
components = (
{
name = grave;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = grave;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0300;
},
{
glyphname = acutecomb;
layers = (
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
layers = (
{
components = (
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, -338, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, -354, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 030B;
},
{
glyphname = caroncomb.alt;
layers = (
{
components = (
{
name = caron.alt;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = caron.alt;
transform = "{1, 0, 0, 1, -328, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb;
layers = (
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
layers = (
{
components = (
{
name = caron;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = caron;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
layers = (
{
components = (
{
name = breve;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = breve;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
layers = (
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 030A;
},
{
glyphname = ringcomb_acutecomb;
layers = (
{
components = (
{
alignment = -1;
name = ringacute;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = ringacute;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = tildecomb;
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0303;
},
{
glyphname = tildecomb_macroncomb;
layers = (
{
components = (
{
alignment = -1;
name = tildemacron;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = tildemacron;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = macroncomb;
layers = (
{
components = (
{
name = macron;
transform = "{1, 0, 0, 1, -447, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = macron;
transform = "{1, 0, 0, 1, -447, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0304;
},
{
glyphname = hookabovecomb;
layers = (
{
components = (
{
alignment = -1;
name = hook;
transform = "{1, 0, 0, 1, -218, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = hook;
transform = "{1, 0, 0, 1, -203, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0309;
},
{
glyphname = dblgravecomb;
layers = (
{
components = (
{
alignment = -1;
name = dblgrave;
transform = "{1, 0, 0, 1, -338, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dblgrave;
transform = "{1, 0, 0, 1, -354, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 030F;
},
{
glyphname = breveinvertedcomb;
layers = (
{
components = (
{
alignment = -1;
name = breveinverted;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = breveinverted;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0311;
},
{
glyphname = commaturnedabovecomb;
layers = (
{
components = (
{
alignment = -1;
name = commaturnedabove;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = commaturnedabove;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0312;
},
{
glyphname = commaabovecomb;
layers = (
{
components = (
{
alignment = -1;
name = commaabove;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = commaabove;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0313;
},
{
glyphname = horncomb;
layers = (
{
components = (
{
alignment = -1;
name = horn;
transform = "{1, 0, 0, 1, -176, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = horn;
transform = "{1, 0, 0, 1, -197, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
layers = (
{
components = (
{
alignment = -1;
name = dotbelow;
transform = "{1, 0, 0, 1, -343, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dotbelow;
transform = "{1, 0, 0, 1, -405, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0323;
},
{
glyphname = dieresisbelowcomb;
layers = (
{
components = (
{
alignment = -1;
name = dieresisbelow;
transform = "{1, 0, 0, 1, -343, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresisbelow;
transform = "{1, 0, 0, 1, -405, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0324;
},
{
glyphname = commaaccentcomb;
layers = (
{
components = (
{
alignment = -1;
name = commabelow;
transform = "{1, 0, 0, 1, -148, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 26 values pushed */
17 16 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 35 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 0;
},
{
components = (
{
alignment = -1;
name = commabelow;
transform = "{1, 0, 0, 1, -182, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 26 values pushed */
17 16 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 35 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0326;
unicode = 0326;
},
{
glyphname = cedillacomb;
layers = (
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, -233, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, -251, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
layers = (
{
components = (
{
name = ogonek;
transform = "{1, 0, 0, 1, -242, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = ogonek;
transform = "{1, 0, 0, 1, -242, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0328;
},
{
glyphname = brevebelowcomb;
layers = (
{
components = (
{
alignment = -1;
name = brevebelow;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevebelow;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 032E;
},
{
glyphname = macronbelowcomb;
layers = (
{
components = (
{
alignment = -1;
name = macronbelow;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = macronbelow;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0331;
},
{
glyphname = strokeshortcomb;
layers = (
{
components = (
{
name = baraccentcomb;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = baraccentcomb;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0335;
},
{
glyphname = strokelongcomb;
layers = (
{
components = (
{
name = baraccentmediumcomb;
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = baraccentmediumcomb;
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
unicode = 0336;
},
{
glyphname = slashshortcomb;
layers = (
{
anchors = (
{
name = _center;
position = "{125, 403}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"231 465 LINE",
"231 511 LINE",
"25 346 LINE",
"25 301 LINE"
);
}
);
width = 255;
},
{
anchors = (
{
name = _center;
position = "{128, 400}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"254 476 LINE",
"254 530 LINE",
"10 333 LINE",
"10 281 LINE"
);
}
);
width = 263;
}
);
unicode = 0337;
},
{
glyphname = slashlongcomb;
layers = (
{
anchors = (
{
name = _center;
position = "{247, 214}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"387 503 LINE",
"68 -67 LINE",
"106 -85 LINE",
"422 483 LINE"
);
}
);
width = 472;
},
{
anchors = (
{
name = _center;
position = "{246, 214}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"383 505 LINE",
"64 -65 LINE",
"111 -88 LINE",
"427 480 LINE"
);
}
);
width = 487;
}
);
unicode = 0338;
},
{
glyphname = acute;
layers = (
{
anchors = (
{
name = _top;
position = "{109, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"241 633 OFFCURVE",
"201 653 OFFCURVE",
"184 653 QCURVE SMOOTH",
"174 653 OFFCURVE",
"163 645 OFFCURVE",
"148 628 QCURVE SMOOTH",
"53 524 LINE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"48 493 QCURVE SMOOTH",
"56 494 OFFCURVE",
"68 502 QCURVE SMOOTH",
"231 614 LINE SMOOTH",
"241 621 OFFCURVE",
"241 627 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 131 0 0 0 116 39 36 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 276;
},
{
anchors = (
{
name = _top;
position = "{116, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"252 626 OFFCURVE",
"202 653 OFFCURVE",
"184 653 QCURVE SMOOTH",
"174 653 OFFCURVE",
"163 645 OFFCURVE",
"148 628 QCURVE SMOOTH",
"53 524 LINE SMOOTH",
"37 507 OFFCURVE",
"37 497 QCURVE SMOOTH",
"37 487 OFFCURVE",
"48 487 QCURVE SMOOTH",
"59 488 OFFCURVE",
"72 496 QCURVE SMOOTH",
"239 598 LINE SMOOTH",
"252 608 OFFCURVE",
"252 616 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 20 values pushed */
15 1 0 1 1 74 0 1 0 1 131 0 0 0 116 38 35 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 276;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = breve;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"278 642 LINE",
"270 611 OFFCURVE",
"211 568 OFFCURVE",
"170 568 QCURVE SMOOTH",
"127 568 OFFCURVE",
"71 610 OFFCURVE",
"63 642 QCURVE",
"35 642 LINE",
"42 585 OFFCURVE",
"111 518 OFFCURVE",
"170 518 QCURVE SMOOTH",
"229 518 OFFCURVE",
"299 585 OFFCURVE",
"306 642 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 29 values pushed */
3 1 1 2 1 131 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 18 34 18 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"276 642 LINE",
"268 614 OFFCURVE",
"209 576 OFFCURVE",
"170 576 QCURVE SMOOTH",
"130 576 OFFCURVE",
"73 614 OFFCURVE",
"66 642 QCURVE",
"35 642 LINE",
"37 584 OFFCURVE",
"110 511 OFFCURVE",
"170 511 QCURVE SMOOTH",
"230 511 OFFCURVE",
"304 584 OFFCURVE",
"306 642 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 29 values pushed */
3 1 1 2 1 131 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 18 34 18 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 341;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = caron;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 646 OFFCURVE",
"50 632 OFFCURVE",
"60 624 QCURVE SMOOTH",
"95 594 OFFCURVE",
"114 574 QCURVE SMOOTH",
"137 550 LINE",
"161 526 LINE",
"188 501 OFFCURVE",
"191 501 QCURVE SMOOTH",
"194 501 OFFCURVE",
"221 526 QCURVE",
"245 550 LINE",
"268 574 LINE SMOOTH",
"287 594 OFFCURVE",
"322 624 QCURVE SMOOTH",
"332 632 OFFCURVE",
"347 646 OFFCURVE",
"347 649 QCURVE SMOOTH",
"347 657 OFFCURVE",
"338 657 QCURVE SMOOTH",
"329 657 OFFCURVE",
"310 645 QCURVE SMOOTH",
"191 571 LINE",
"72 645 LINE SMOOTH",
"53 657 OFFCURVE",
"44 657 QCURVE SMOOTH",
"35 657 OFFCURVE",
"35 649 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 14 values pushed */
4 1 0 71 1 1 0 0 116 36 32 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 645 OFFCURVE",
"51 628 OFFCURVE",
"63 617 QCURVE",
"93 587 OFFCURVE",
"111 567 QCURVE SMOOTH",
"134 543 LINE",
"158 519 LINE SMOOTH",
"176 501 OFFCURVE",
"191 501 QCURVE SMOOTH",
"208 501 OFFCURVE",
"224 519 QCURVE",
"248 543 LINE",
"271 567 LINE SMOOTH",
"289 587 OFFCURVE",
"319 617 QCURVE",
"331 628 OFFCURVE",
"347 645 OFFCURVE",
"347 649 QCURVE SMOOTH",
"347 657 OFFCURVE",
"336 657 QCURVE SMOOTH",
"322 657 OFFCURVE",
"303 645 QCURVE SMOOTH",
"191 579 LINE",
"80 645 LINE SMOOTH",
"61 657 OFFCURVE",
"47 657 QCURVE SMOOTH",
"35 657 OFFCURVE",
"35 649 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 22 values pushed */
4 1 2 0 1 74 1 1 0 2 0 131 0 2 2 116 41 36 32 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 382;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = cedilla;
layers = (
{
anchors = (
{
name = _bottom;
position = "{129, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 -198 LINE",
"60 -214 OFFCURVE",
"104 -214 QCURVE SMOOTH",
"149 -214 OFFCURVE",
"198 -165 OFFCURVE",
"198 -122 QCURVE SMOOTH",
"198 -102 OFFCURVE",
"169 -84 OFFCURVE",
"142 -78 QCURVE SMOOTH",
"126 -74 OFFCURVE",
"112 -68 OFFCURVE",
"112 -62 QCURVE SMOOTH",
"112 -54 OFFCURVE",
"118 -43 QCURVE",
"145 0 LINE",
"112 0 LINE",
"71 -52 LINE",
"65 -58 OFFCURVE",
"65 -65 QCURVE SMOOTH",
"65 -72 OFFCURVE",
"76 -80 QCURVE",
"99 -94 LINE",
"133 -112 OFFCURVE",
"133 -133 QCURVE SMOOTH",
"133 -156 OFFCURVE",
"100 -187 OFFCURVE",
"77 -187 QCURVE SMOOTH",
"54 -187 OFFCURVE",
"42 -174 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 33 values pushed */
28 1 2 0 1 74 0 1 0 1 131 0 0 2 2 0 87 0 0 0 2 96 0 2 0 2 80 43 26 33 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 233;
},
{
anchors = (
{
name = _bottom;
position = "{127, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"28 -198 LINE",
"53 -214 OFFCURVE",
"97 -214 QCURVE SMOOTH",
"142 -214 OFFCURVE",
"213 -166 OFFCURVE",
"213 -122 QCURVE SMOOTH",
"213 -97 OFFCURVE",
"179 -77 OFFCURVE",
"150 -72 QCURVE",
"132 -68 OFFCURVE",
"117 -62 OFFCURVE",
"117 -55 QCURVE SMOOTH",
"117 -47 OFFCURVE",
"123 -36 QCURVE",
"145 0 LINE",
"105 0 LINE",
"64 -52 LINE",
"58 -58 OFFCURVE",
"58 -65 QCURVE SMOOTH",
"58 -72 OFFCURVE",
"69 -80 QCURVE",
"92 -94 LINE",
"126 -112 OFFCURVE",
"126 -133 QCURVE SMOOTH",
"126 -151 OFFCURVE",
"95 -179 OFFCURVE",
"76 -179 QCURVE SMOOTH",
"53 -179 OFFCURVE",
"41 -166 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 33 values pushed */
28 1 2 0 1 74 0 1 0 1 131 0 0 2 2 0 87 0 0 0 2 96 0 2 0 2 80 43 26 33 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 241;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = circumflex;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 504 OFFCURVE",
"332 518 OFFCURVE",
"322 526 QCURVE SMOOTH",
"287 556 OFFCURVE",
"268 576 QCURVE SMOOTH",
"245 600 LINE",
"221 624 LINE",
"194 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"188 649 OFFCURVE",
"161 624 QCURVE",
"137 600 LINE",
"114 576 LINE SMOOTH",
"95 556 OFFCURVE",
"60 526 QCURVE SMOOTH",
"50 518 OFFCURVE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"72 505 QCURVE SMOOTH",
"191 579 LINE",
"310 505 LINE SMOOTH",
"329 493 OFFCURVE",
"338 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 14 values pushed */
4 1 0 72 1 1 0 0 116 36 32 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 505 OFFCURVE",
"331 522 OFFCURVE",
"319 533 QCURVE",
"289 563 OFFCURVE",
"271 583 QCURVE SMOOTH",
"248 607 LINE",
"224 631 LINE SMOOTH",
"206 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"175 649 OFFCURVE",
"158 631 QCURVE SMOOTH",
"134 607 LINE",
"111 583 LINE SMOOTH",
"93 563 OFFCURVE",
"63 533 QCURVE",
"51 522 OFFCURVE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"46 493 QCURVE SMOOTH",
"60 493 OFFCURVE",
"79 505 QCURVE SMOOTH",
"191 571 LINE",
"302 505 LINE SMOOTH",
"321 493 OFFCURVE",
"335 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 22 values pushed */
4 1 0 2 1 74 0 2 0 2 131 1 1 0 0 116 41 36 32 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 382;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = dieresis;
layers = (
{
anchors = (
{
name = _top;
position = "{187, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH",
"143 616 OFFCURVE",
"111 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"66 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 574 OFFCURVE",
"260 547 OFFCURVE",
"284 547 QCURVE SMOOTH",
"308 547 OFFCURVE",
"338 574 OFFCURVE",
"338 595 QCURVE SMOOTH",
"338 616 OFFCURVE",
"306 644 OFFCURVE",
"284 644 QCURVE SMOOTH",
"261 644 OFFCURVE",
"230 616 OFFCURVE",
"230 595 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{212, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 566 OFFCURVE",
"70 532 OFFCURVE",
"104 532 QCURVE SMOOTH",
"138 532 OFFCURVE",
"181 566 OFFCURVE",
"181 595 QCURVE SMOOTH",
"181 623 OFFCURVE",
"137 658 OFFCURVE",
"104 658 QCURVE SMOOTH",
"70 658 OFFCURVE",
"27 623 OFFCURVE",
"27 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 566 OFFCURVE",
"281 532 OFFCURVE",
"315 532 QCURVE SMOOTH",
"349 532 OFFCURVE",
"392 566 OFFCURVE",
"392 595 QCURVE SMOOTH",
"392 623 OFFCURVE",
"348 658 OFFCURVE",
"315 658 QCURVE SMOOTH",
"281 658 OFFCURVE",
"238 623 OFFCURVE",
"238 595 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
layers = (
{
anchors = (
{
name = _top;
position = "{89, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH",
"143 616 OFFCURVE",
"111 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"66 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 178;
},
{
anchors = (
{
name = _top;
position = "{121, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"44 566 OFFCURVE",
"87 532 OFFCURVE",
"121 532 QCURVE SMOOTH",
"155 532 OFFCURVE",
"198 566 OFFCURVE",
"198 595 QCURVE SMOOTH",
"198 623 OFFCURVE",
"154 658 OFFCURVE",
"121 658 QCURVE SMOOTH",
"87 658 OFFCURVE",
"44 623 OFFCURVE",
"44 595 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 36 33 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 242;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
layers = (
{
anchors = (
{
name = _top;
position = "{167, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 621 OFFCURVE",
"45 614 QCURVE",
"208 502 LINE",
"220 493 OFFCURVE",
"228 493 QCURVE SMOOTH",
"241 493 OFFCURVE",
"241 501 QCURVE SMOOTH",
"241 505 OFFCURVE",
"223 524 QCURVE",
"128 628 LINE SMOOTH",
"113 645 OFFCURVE",
"102 653 OFFCURVE",
"92 653 QCURVE SMOOTH",
"75 653 OFFCURVE",
"35 633 OFFCURVE",
"35 627 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 14 values pushed */
0 0 1 0 131 0 1 1 116 23 33 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 276;
},
{
anchors = (
{
name = _top;
position = "{167, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"24 608 OFFCURVE",
"37 598 QCURVE",
"204 496 LINE SMOOTH",
"218 487 OFFCURVE",
"228 487 QCURVE SMOOTH",
"239 487 OFFCURVE",
"239 497 QCURVE SMOOTH",
"239 507 OFFCURVE",
"223 524 QCURVE SMOOTH",
"128 628 LINE SMOOTH",
"113 645 OFFCURVE",
"102 653 OFFCURVE",
"92 653 QCURVE SMOOTH",
"74 653 OFFCURVE",
"24 626 OFFCURVE",
"24 616 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 14 values pushed */
0 0 1 0 131 0 1 1 116 38 33 2 7 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 276;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = hungarumlaut;
layers = (
{
anchors = (
{
name = _top;
position = "{100, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"38 510 LINE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"59 499 QCURVE SMOOTH",
"167 605 OFFCURVE",
"177 616 QCURVE",
"183 624 OFFCURVE",
"183 628 QCURVE SMOOTH",
"183 636 OFFCURVE",
"174 640 QCURVE SMOOTH",
"165 644 OFFCURVE",
"136 653 OFFCURVE",
"131 653 QCURVE SMOOTH",
"127 653 OFFCURVE",
"122 649 OFFCURVE",
"118 644 QCURVE",
"114 640 OFFCURVE",
"55 538 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158 510 LINE",
"155 504 OFFCURVE",
"155 501 QCURVE SMOOTH",
"155 493 OFFCURVE",
"164 493 QCURVE SMOOTH",
"173 493 OFFCURVE",
"179 499 QCURVE SMOOTH",
"297 616 LINE",
"303 624 OFFCURVE",
"303 628 QCURVE SMOOTH",
"303 636 OFFCURVE",
"294 640 QCURVE SMOOTH",
"285 644 OFFCURVE",
"256 653 OFFCURVE",
"251 653 QCURVE SMOOTH",
"247 653 OFFCURVE",
"242 649 OFFCURVE",
"238 644 QCURVE",
"234 640 OFFCURVE",
"175 538 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 18 values pushed */
2 1 0 1 0 131 3 1 1 1 116 41 41 41 37 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 338;
},
{
anchors = (
{
name = _top;
position = "{104, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"38 512 LINE SMOOTH",
"35 506 OFFCURVE",
"35 501 QCURVE SMOOTH",
"41 492 OFFCURVE",
"46 492 QCURVE SMOOTH",
"57 492 OFFCURVE",
"70 504 QCURVE SMOOTH",
"177 604 OFFCURVE",
"185 613 QCURVE",
"191 621 OFFCURVE",
"191 625 QCURVE SMOOTH",
"191 633 OFFCURVE",
"182 637 QCURVE",
"170 641 OFFCURVE",
"131 653 OFFCURVE",
"124 653 QCURVE SMOOTH",
"120 653 OFFCURVE",
"115 649 OFFCURVE",
"111 644 QCURVE SMOOTH",
"108 640 OFFCURVE",
"60 553 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 512 LINE SMOOTH",
"163 506 OFFCURVE",
"163 501 QCURVE SMOOTH",
"168 492 OFFCURVE",
"173 492 QCURVE SMOOTH",
"184 492 OFFCURVE",
"197 504 QCURVE SMOOTH",
"313 613 LINE",
"319 621 OFFCURVE",
"319 625 QCURVE SMOOTH",
"319 633 OFFCURVE",
"310 637 QCURVE",
"298 641 OFFCURVE",
"258 653 OFFCURVE",
"251 653 QCURVE SMOOTH",
"247 653 OFFCURVE",
"242 649 OFFCURVE",
"238 644 QCURVE",
"237 643 OFFCURVE",
"203 581 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 18 values pushed */
2 1 0 1 0 131 3 1 1 1 116 24 42 25 36 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 354;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = macron;
layers = (
{
anchors = (
{
name = _top;
position = "{225, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"343 567 LINE",
"343 607 LINE",
"104 607 LINE",
"104 567 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 447;
},
{
anchors = (
{
name = _top;
position = "{225, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"343 560 LINE",
"343 607 LINE",
"104 607 LINE",
"104 560 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 27 values pushed */
0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 3 0 3 17 3 7 21 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 447;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = ogonek;
layers = (
{
anchors = (
{
name = _ogonek;
position = "{91, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"205 -87 LINE",
"171 -116 OFFCURVE",
"135 -116 QCURVE SMOOTH",
"106 -116 OFFCURVE",
"77 -86 OFFCURVE",
"77 -62 QCURVE SMOOTH",
"77 -37 OFFCURVE",
"104 3 OFFCURVE",
"128 14 QCURVE",
"100 14 LINE",
"63 -3 OFFCURVE",
"25 -56 OFFCURVE",
"25 -87 QCURVE SMOOTH",
"25 -121 OFFCURVE",
"69 -159 OFFCURVE",
"99 -159 QCURVE SMOOTH",
"131 -159 OFFCURVE",
"192 -128 OFFCURVE",
"217 -99 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
PUSHB[ ]\011/* 7 values pushed */
18 17 2 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 2 2 1 110 0 2 0 0 2 87 0 2 2 0 96 0 0 2 0 80 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 1 2 1 131 0 2 0 0 2 87 0 2 2 0 96 0 0 2 0 80 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
37 21 33 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 242;
},
{
anchors = (
{
name = _ogonek;
position = "{91, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"205 -80 LINE",
"169 -101 OFFCURVE",
"135 -101 QCURVE SMOOTH",
"110 -101 OFFCURVE",
"85 -75 OFFCURVE",
"85 -55 QCURVE SMOOTH",
"85 -32 OFFCURVE",
"108 4 OFFCURVE",
"128 14 QCURVE",
"93 14 LINE",
"56 -3 OFFCURVE",
"18 -56 OFFCURVE",
"18 -87 QCURVE SMOOTH",
"18 -121 OFFCURVE",
"66 -159 OFFCURVE",
"99 -159 QCURVE SMOOTH",
"131 -159 OFFCURVE",
"192 -128 OFFCURVE",
"217 -99 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
PUSHB[ ]\011/* 7 values pushed */
18 17 2 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 2 2 1 110 0 2 0 0 2 87 0 2 2 0 96 0 0 2 0 80 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 1 2 1 131 0 2 0 0 2 87 0 2 2 0 96 0 0 2 0 80 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
37 21 33 3 7 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 242;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = ring;
layers = (
{
anchors = (
{
name = _top;
position = "{118, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 541 OFFCURVE",
"84 493 OFFCURVE",
"118 493 QCURVE SMOOTH",
"153 493 OFFCURVE",
"202 541 OFFCURVE",
"202 575 QCURVE SMOOTH",
"202 609 OFFCURVE",
"153 656 OFFCURVE",
"118 656 QCURVE SMOOTH",
"83 656 OFFCURVE",
"35 609 OFFCURVE",
"35 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 595 OFFCURVE",
"99 620 OFFCURVE",
"118 620 QCURVE SMOOTH",
"137 620 OFFCURVE",
"160 595 OFFCURVE",
"160 575 QCURVE SMOOTH",
"160 554 OFFCURVE",
"137 529 OFFCURVE",
"118 529 QCURVE SMOOTH",
"99 529 OFFCURVE",
"77 554 OFFCURVE",
"77 575 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 237;
},
{
anchors = (
{
name = _top;
position = "{118, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"31 539 OFFCURVE",
"80 492 OFFCURVE",
"118 492 QCURVE SMOOTH",
"156 492 OFFCURVE",
"206 539 OFFCURVE",
"206 575 QCURVE SMOOTH",
"206 611 OFFCURVE",
"156 658 OFFCURVE",
"118 658 QCURVE SMOOTH",
"81 658 OFFCURVE",
"31 610 OFFCURVE",
"31 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 594 OFFCURVE",
"101 616 OFFCURVE",
"118 616 QCURVE SMOOTH",
"135 616 OFFCURVE",
"156 594 OFFCURVE",
"156 575 QCURVE SMOOTH",
"156 556 OFFCURVE",
"135 533 OFFCURVE",
"118 533 QCURVE SMOOTH",
"101 533 OFFCURVE",
"81 555 OFFCURVE",
"81 575 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 36 36 36 33 4 7 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 237;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = tilde;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 530 LINE",
"55 548 OFFCURVE",
"74 572 OFFCURVE",
"88 572 QCURVE SMOOTH",
"110 572 OFFCURVE",
"169 551 QCURVE SMOOTH",
"233 529 OFFCURVE",
"257 529 QCURVE SMOOTH",
"284 529 OFFCURVE",
"321 583 OFFCURVE",
"321 620 QCURVE",
"301 620 LINE",
"301 602 OFFCURVE",
"282 578 OFFCURVE",
"268 578 QCURVE SMOOTH",
"248 578 OFFCURVE",
"187 599 QCURVE SMOOTH",
"123 621 OFFCURVE",
"99 621 QCURVE SMOOTH",
"72 621 OFFCURVE",
"35 567 OFFCURVE",
"35 530 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 35 values pushed */
0 1 4 3 1 87 2 1 0 0 4 3 0 4 103 0 1 1 3 95 5 1 3 1 3 79 18 34 34 18 34 33 6 7 26 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 356;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 526 LINE",
"63 544 OFFCURVE",
"82 565 OFFCURVE",
"96 565 QCURVE SMOOTH",
"112 565 OFFCURVE",
"167 547 QCURVE SMOOTH",
"229 525 OFFCURVE",
"257 525 QCURVE SMOOTH",
"289 525 OFFCURVE",
"321 579 OFFCURVE",
"321 624 QCURVE",
"294 624 LINE",
"294 607 OFFCURVE",
"275 586 OFFCURVE",
"261 586 QCURVE SMOOTH",
"249 586 OFFCURVE",
"189 604 QCURVE SMOOTH",
"116 625 OFFCURVE",
"99 625 QCURVE SMOOTH",
"67 625 OFFCURVE",
"35 571 OFFCURVE",
"35 526 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 35 values pushed */
0 1 4 3 1 87 2 1 0 0 4 3 0 4 103 0 1 1 3 95 5 1 3 1 3 79 18 35 34 18 36 33 6 7 26 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 356;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = caron.alt;
layers = (
{
anchors = (
{
name = _topright;
position = "{13, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"134 438 LINE",
"165 453 OFFCURVE",
"208 511 OFFCURVE",
"208 545 QCURVE SMOOTH",
"208 570 OFFCURVE",
"177 607 OFFCURVE",
"153 607 QCURVE SMOOTH",
"132 607 OFFCURVE",
"110 581 OFFCURVE",
"110 564 QCURVE SMOOTH",
"110 551 OFFCURVE",
"127 530 OFFCURVE",
"140 530 QCURVE SMOOTH",
"158 530 OFFCURVE",
"158 511 QCURVE SMOOTH",
"158 498 OFFCURVE",
"135 463 OFFCURVE",
"118 451 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
17 16 2 0 71 0 0 0 1 95 0 1 1 25 0 76 36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 320;
},
{
anchors = (
{
name = _topright;
position = "{13, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"141 431 LINE",
"177 448 OFFCURVE",
"230 515 OFFCURVE",
"230 553 QCURVE SMOOTH",
"230 584 OFFCURVE",
"190 623 OFFCURVE",
"160 623 QCURVE SMOOTH",
"133 623 OFFCURVE",
"98 593 OFFCURVE",
"98 568 QCURVE SMOOTH",
"98 549 OFFCURVE",
"119 526 OFFCURVE",
"136 526 QCURVE SMOOTH",
"157 526 OFFCURVE",
"157 505 QCURVE SMOOTH",
"157 491 OFFCURVE",
"135 463 OFFCURVE",
"120 453 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
17 16 2 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 1 95 0 1 1 25 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
36 35 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 328;
}
);
note = caron.alt;
},
{
glyphname = dieresiscomb.case;
layers = (
{
components = (
{
name = dieresis.case;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = dieresis.case;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_gravecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dieresisgrave.case;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresisgrave.case;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_acutecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dieresisacute.case;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresisacute.case;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_caroncomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dieresiscaron.case;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresiscaron.case;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dieresiscomb_macroncomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dieresismacron.case;
transform = "{1, 0, 0, 1, -373, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dieresismacron.case;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dotaccentcomb.case;
layers = (
{
components = (
{
name = dotaccent.case;
transform = "{1, 0, 0, 1, -178, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = dotaccent.case;
transform = "{1, 0, 0, 1, -242, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dotaccentcomb_macroncomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dotaccentmacron.case;
transform = "{1, 0, 0, 1, -279, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dotaccentmacron.case;
transform = "{1, 0, 0, 1, -242, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = gravecomb.case;
layers = (
{
components = (
{
name = grave.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = grave.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = acutecomb.case;
layers = (
{
components = (
{
name = acute.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = acute.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = hungarumlautcomb.case;
layers = (
{
components = (
{
name = hungarumlaut.case;
transform = "{1, 0, 0, 1, -338, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = hungarumlaut.case;
transform = "{1, 0, 0, 1, -354, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb.case;
layers = (
{
components = (
{
name = circumflex.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = circumflex.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_hookcomb.case;
layers = (
{
components = (
{
alignment = -1;
name = circumflexhook.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexhook.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = caroncomb.case;
layers = (
{
components = (
{
name = caron.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = caron.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb.case;
layers = (
{
components = (
{
name = breve.case;
transform = "{1, 0, 0, 1, -351, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = breve.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_hookcomb.case;
layers = (
{
components = (
{
alignment = -1;
name = brevehook.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevehook.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = ringcomb.case;
layers = (
{
components = (
{
name = ring.case;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = ring.case;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = ringcomb_acutecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = ringacute.case;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = ringacute.case;
transform = "{1, 0, 0, 1, -237, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = tildecomb.case;
layers = (
{
components = (
{
name = tilde.case;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = tilde.case;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = tildecomb_macroncomb.case;
layers = (
{
components = (
{
alignment = -1;
name = tildemacron.case;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = tildemacron.case;
transform = "{1, 0, 0, 1, -356, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = macroncomb.case;
layers = (
{
components = (
{
name = macron.case;
transform = "{1, 0, 0, 1, -309, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = macron.case;
transform = "{1, 0, 0, 1, -309, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = hookabovecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = hook.case;
transform = "{1, 0, 0, 1, -218, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = hook.case;
transform = "{1, 0, 0, 1, -203, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = dblgravecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = dblgrave.case;
transform = "{1, 0, 0, 1, -338, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = dblgrave.case;
transform = "{1, 0, 0, 1, -354, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = breveinvertedcomb.case;
layers = (
{
components = (
{
alignment = -1;
name = breveinverted.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = breveinverted.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = horncomb.case;
layers = (
{
components = (
{
alignment = -1;
name = horn.case;
transform = "{1, 0, 0, 1, -228, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = horn.case;
transform = "{1, 0, 0, 1, -239, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = slashshortcomb.case;
layers = (
{
anchors = (
{
name = _center;
position = "{153, 279}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"299 376 LINE",
"299 423 LINE",
"50 220 LINE",
"50 175 LINE"
);
}
);
width = 319;
},
{
anchors = (
{
name = _center;
position = "{162, 286}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"337 399 LINE",
"337 454 LINE",
"50 220 LINE",
"50 168 LINE"
);
}
);
width = 357;
}
);
},
{
glyphname = slashlongcomb.case;
layers = (
{
anchors = (
{
name = _center;
position = "{340, 307}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"572 665 LINE",
"535 685 LINE",
"157 40 LINE",
"89 -75 LINE",
"126 -92 LINE",
"510 560 LINE"
);
}
);
width = 664;
},
{
anchors = (
{
name = _center;
position = "{340, 307}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"576 662 LINE",
"531 689 LINE",
"150 39 LINE",
"85 -71 LINE",
"130 -95 LINE",
"519 564 LINE"
);
}
);
width = 676;
}
);
},
{
glyphname = acute.case;
layers = (
{
anchors = (
{
name = _top;
position = "{109, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"241 806 OFFCURVE",
"201 826 OFFCURVE",
"184 826 QCURVE SMOOTH",
"174 826 OFFCURVE",
"163 818 OFFCURVE",
"148 801 QCURVE SMOOTH",
"53 697 LINE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"48 666 QCURVE SMOOTH",
"56 666 OFFCURVE",
"68 675 QCURVE",
"231 787 LINE",
"241 794 OFFCURVE",
"241 800 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
13 4 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 276;
},
{
anchors = (
{
name = _top;
position = "{109, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"252 799 OFFCURVE",
"202 826 OFFCURVE",
"184 826 QCURVE SMOOTH",
"174 826 OFFCURVE",
"163 818 OFFCURVE",
"148 801 QCURVE SMOOTH",
"53 697 LINE SMOOTH",
"37 680 OFFCURVE",
"37 670 QCURVE SMOOTH",
"37 660 OFFCURVE",
"48 660 QCURVE SMOOTH",
"59 660 OFFCURVE",
"72 669 QCURVE",
"239 771 LINE",
"252 781 OFFCURVE",
"252 789 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
11 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 276;
}
);
note = acute.case;
},
{
glyphname = breve.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"278 791 LINE",
"270 760 OFFCURVE",
"211 717 OFFCURVE",
"170 717 QCURVE SMOOTH",
"127 717 OFFCURVE",
"71 759 OFFCURVE",
"63 791 QCURVE",
"35 791 LINE",
"42 734 OFFCURVE",
"111 667 OFFCURVE",
"170 667 QCURVE SMOOTH",
"229 667 OFFCURVE",
"299 734 OFFCURVE",
"306 791 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
5 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"276 790 LINE",
"268 762 OFFCURVE",
"209 724 OFFCURVE",
"170 724 QCURVE SMOOTH",
"130 724 OFFCURVE",
"73 762 OFFCURVE",
"66 790 QCURVE",
"35 790 LINE",
"37 732 OFFCURVE",
"110 659 OFFCURVE",
"170 659 QCURVE SMOOTH",
"230 659 OFFCURVE",
"304 732 OFFCURVE",
"306 790 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
5 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 341;
}
);
note = breve.case;
},
{
glyphname = caron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 813 OFFCURVE",
"50 799 OFFCURVE",
"60 791 QCURVE SMOOTH",
"95 761 OFFCURVE",
"114 741 QCURVE SMOOTH",
"137 717 LINE",
"161 693 LINE",
"188 668 OFFCURVE",
"191 668 QCURVE SMOOTH",
"194 668 OFFCURVE",
"221 693 QCURVE",
"245 717 LINE",
"268 741 LINE SMOOTH",
"287 761 OFFCURVE",
"322 791 QCURVE SMOOTH",
"332 799 OFFCURVE",
"347 813 OFFCURVE",
"347 816 QCURVE SMOOTH",
"347 824 OFFCURVE",
"338 824 QCURVE SMOOTH",
"329 824 OFFCURVE",
"310 812 QCURVE SMOOTH",
"191 738 LINE",
"72 812 LINE SMOOTH",
"53 824 OFFCURVE",
"44 824 QCURVE SMOOTH",
"35 824 OFFCURVE",
"35 816 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 812 OFFCURVE",
"51 795 OFFCURVE",
"63 784 QCURVE",
"93 754 OFFCURVE",
"111 734 QCURVE SMOOTH",
"134 710 LINE",
"158 686 LINE SMOOTH",
"176 668 OFFCURVE",
"191 668 QCURVE SMOOTH",
"208 668 OFFCURVE",
"224 686 QCURVE",
"248 710 LINE",
"271 734 LINE SMOOTH",
"289 754 OFFCURVE",
"319 784 QCURVE",
"331 795 OFFCURVE",
"347 812 OFFCURVE",
"347 816 QCURVE SMOOTH",
"347 824 OFFCURVE",
"336 824 QCURVE SMOOTH",
"322 824 OFFCURVE",
"303 812 QCURVE SMOOTH",
"191 746 LINE",
"80 812 LINE SMOOTH",
"61 824 OFFCURVE",
"47 824 QCURVE SMOOTH",
"35 824 OFFCURVE",
"35 816 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 382;
}
);
note = caron.case;
},
{
glyphname = circumflex.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 677 OFFCURVE",
"332 691 OFFCURVE",
"322 699 QCURVE SMOOTH",
"287 729 OFFCURVE",
"268 749 QCURVE SMOOTH",
"245 773 LINE",
"221 797 LINE",
"194 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"188 822 OFFCURVE",
"161 797 QCURVE",
"137 773 LINE",
"114 749 LINE SMOOTH",
"95 729 OFFCURVE",
"60 699 QCURVE SMOOTH",
"50 691 OFFCURVE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"72 678 QCURVE SMOOTH",
"191 752 LINE",
"310 678 LINE SMOOTH",
"329 666 OFFCURVE",
"338 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 678 OFFCURVE",
"331 695 OFFCURVE",
"319 706 QCURVE",
"289 736 OFFCURVE",
"271 756 QCURVE SMOOTH",
"248 780 LINE",
"224 804 LINE SMOOTH",
"206 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"175 822 OFFCURVE",
"158 804 QCURVE SMOOTH",
"134 780 LINE",
"111 756 LINE SMOOTH",
"93 736 OFFCURVE",
"63 706 QCURVE",
"51 695 OFFCURVE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"46 666 QCURVE SMOOTH",
"60 666 OFFCURVE",
"79 678 QCURVE SMOOTH",
"191 744 LINE",
"302 678 LINE SMOOTH",
"321 666 OFFCURVE",
"335 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 382;
}
);
note = circumflex.case;
},
{
glyphname = dieresis.case;
layers = (
{
anchors = (
{
name = _top;
position = "{183, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH",
"143 765 OFFCURVE",
"111 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"66 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 723 OFFCURVE",
"260 696 OFFCURVE",
"284 696 QCURVE SMOOTH",
"308 696 OFFCURVE",
"338 723 OFFCURVE",
"338 744 QCURVE SMOOTH",
"338 765 OFFCURVE",
"306 793 OFFCURVE",
"284 793 QCURVE SMOOTH",
"261 793 OFFCURVE",
"230 765 OFFCURVE",
"230 744 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{211, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 715 OFFCURVE",
"70 681 OFFCURVE",
"104 681 QCURVE SMOOTH",
"138 681 OFFCURVE",
"181 715 OFFCURVE",
"181 744 QCURVE SMOOTH",
"181 772 OFFCURVE",
"137 807 OFFCURVE",
"104 807 QCURVE SMOOTH",
"70 807 OFFCURVE",
"27 772 OFFCURVE",
"27 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 715 OFFCURVE",
"281 681 OFFCURVE",
"315 681 QCURVE SMOOTH",
"349 681 OFFCURVE",
"392 715 OFFCURVE",
"392 744 QCURVE SMOOTH",
"392 772 OFFCURVE",
"348 807 OFFCURVE",
"315 807 QCURVE SMOOTH",
"281 807 OFFCURVE",
"238 772 OFFCURVE",
"238 744 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
note = dieresis.case;
},
{
glyphname = dotaccent.case;
layers = (
{
anchors = (
{
name = _top;
position = "{89, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH",
"143 765 OFFCURVE",
"111 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"66 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
7 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 178;
},
{
anchors = (
{
name = _top;
position = "{121, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"44 715 OFFCURVE",
"87 681 OFFCURVE",
"121 681 QCURVE SMOOTH",
"155 681 OFFCURVE",
"198 715 OFFCURVE",
"198 744 QCURVE SMOOTH",
"198 772 OFFCURVE",
"154 807 OFFCURVE",
"121 807 QCURVE SMOOTH",
"87 807 OFFCURVE",
"44 772 OFFCURVE",
"44 744 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
7 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 242;
}
);
note = dotaccent.case;
},
{
glyphname = grave.case;
layers = (
{
anchors = (
{
name = _top;
position = "{163, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 794 OFFCURVE",
"45 787 QCURVE",
"208 675 LINE",
"220 666 OFFCURVE",
"228 666 QCURVE SMOOTH",
"241 666 OFFCURVE",
"241 674 QCURVE SMOOTH",
"241 678 OFFCURVE",
"223 697 QCURVE",
"128 801 LINE SMOOTH",
"113 818 OFFCURVE",
"102 826 OFFCURVE",
"92 826 QCURVE SMOOTH",
"75 826 OFFCURVE",
"35 806 OFFCURVE",
"35 800 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
10 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 276;
},
{
anchors = (
{
name = _top;
position = "{163, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"24 781 OFFCURVE",
"37 771 QCURVE",
"204 669 LINE SMOOTH",
"218 660 OFFCURVE",
"228 660 QCURVE SMOOTH",
"239 660 OFFCURVE",
"239 670 QCURVE SMOOTH",
"239 680 OFFCURVE",
"223 697 QCURVE SMOOTH",
"128 801 LINE SMOOTH",
"113 818 OFFCURVE",
"102 826 OFFCURVE",
"92 826 QCURVE SMOOTH",
"74 826 OFFCURVE",
"24 799 OFFCURVE",
"24 789 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
9 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 276;
}
);
note = grave.case;
},
{
glyphname = hungarumlaut.case;
layers = (
{
anchors = (
{
name = _top;
position = "{102, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"38 683 LINE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"59 672 QCURVE SMOOTH",
"166 779 OFFCURVE",
"177 789 QCURVE",
"183 797 OFFCURVE",
"183 801 QCURVE SMOOTH",
"183 809 OFFCURVE",
"174 813 QCURVE SMOOTH",
"165 817 OFFCURVE",
"136 826 OFFCURVE",
"131 826 QCURVE SMOOTH",
"127 826 OFFCURVE",
"122 822 OFFCURVE",
"118 817 QCURVE",
"116 812 OFFCURVE",
"55 711 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158 683 LINE",
"155 677 OFFCURVE",
"155 674 QCURVE SMOOTH",
"155 666 OFFCURVE",
"164 666 QCURVE SMOOTH",
"173 666 OFFCURVE",
"179 672 QCURVE SMOOTH",
"297 789 LINE",
"303 797 OFFCURVE",
"303 801 QCURVE SMOOTH",
"303 809 OFFCURVE",
"294 813 QCURVE SMOOTH",
"285 817 OFFCURVE",
"256 826 OFFCURVE",
"251 826 QCURVE SMOOTH",
"247 826 OFFCURVE",
"242 822 OFFCURVE",
"238 817 QCURVE",
"236 812 OFFCURVE",
"175 711 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
38 27 16 5 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 338;
},
{
anchors = (
{
name = _top;
position = "{105, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"38 685 LINE SMOOTH",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 665 OFFCURVE",
"46 665 QCURVE SMOOTH",
"57 665 OFFCURVE",
"70 677 QCURVE SMOOTH",
"177 777 OFFCURVE",
"185 786 QCURVE",
"191 794 OFFCURVE",
"191 798 QCURVE SMOOTH",
"191 806 OFFCURVE",
"182 810 QCURVE",
"170 814 OFFCURVE",
"131 826 OFFCURVE",
"124 826 QCURVE SMOOTH",
"120 826 OFFCURVE",
"115 822 OFFCURVE",
"111 817 QCURVE SMOOTH",
"108 813 OFFCURVE",
"60 726 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 685 LINE SMOOTH",
"163 679 OFFCURVE",
"163 674 QCURVE SMOOTH",
"163 665 OFFCURVE",
"173 665 QCURVE SMOOTH",
"184 665 OFFCURVE",
"197 677 QCURVE SMOOTH",
"313 786 LINE",
"319 794 OFFCURVE",
"319 798 QCURVE SMOOTH",
"319 806 OFFCURVE",
"310 810 QCURVE",
"298 814 OFFCURVE",
"258 826 OFFCURVE",
"251 826 QCURVE SMOOTH",
"247 826 OFFCURVE",
"242 822 OFFCURVE",
"238 817 QCURVE",
"237 816 OFFCURVE",
"203 754 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
36 26 15 4 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 354;
}
);
note = hungarumlaut.case;
},
{
glyphname = acute.loclPLK.case;
layers = (
{
anchors = (
{
name = _top;
position = "{129, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"196 848 OFFCURVE",
"151 846 OFFCURVE",
"136 837 QCURVE SMOOTH",
"128 832 OFFCURVE",
"122 820 OFFCURVE",
"118 798 QCURVE SMOOTH",
"100 694 LINE",
"94 669 OFFCURVE",
"96 665 QCURVE SMOOTH",
"100 659 OFFCURVE",
"111 665 QCURVE SMOOTH",
"118 669 OFFCURVE",
"124 683 QCURVE",
"196 827 LINE",
"202 838 OFFCURVE",
"199 843 QCURVE SMOOTH"
);
}
);
width = 276;
},
{
anchors = (
{
name = _top;
position = "{129, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"207 844 OFFCURVE",
"151 842 OFFCURVE",
"135 833 QCURVE SMOOTH",
"126 828 OFFCURVE",
"119 816 OFFCURVE",
"116 794 QCURVE SMOOTH",
"101 691 LINE SMOOTH",
"98 668 OFFCURVE",
"101 660 QCURVE SMOOTH",
"105 650 OFFCURVE",
"115 657 QCURVE SMOOTH",
"124 663 OFFCURVE",
"132 676 QCURVE",
"210 813 LINE",
"216 828 OFFCURVE",
"212 835 QCURVE SMOOTH"
);
}
);
width = 276;
}
);
},
{
glyphname = macron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{154, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"274 706 LINE",
"274 746 LINE",
"35 746 LINE",
"35 706 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
1 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 309;
},
{
anchors = (
{
name = _top;
position = "{154, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"274 699 LINE",
"274 746 LINE",
"35 746 LINE",
"35 699 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
1 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 309;
}
);
note = macron.case;
},
{
glyphname = ring.case;
layers = (
{
anchors = (
{
name = _top;
position = "{118, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 714 OFFCURVE",
"84 666 OFFCURVE",
"118 666 QCURVE SMOOTH",
"153 666 OFFCURVE",
"202 714 OFFCURVE",
"202 748 QCURVE SMOOTH",
"202 782 OFFCURVE",
"153 829 OFFCURVE",
"118 829 QCURVE SMOOTH",
"83 829 OFFCURVE",
"35 782 OFFCURVE",
"35 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 768 OFFCURVE",
"99 793 OFFCURVE",
"118 793 QCURVE SMOOTH",
"137 793 OFFCURVE",
"160 768 OFFCURVE",
"160 748 QCURVE SMOOTH",
"160 727 OFFCURVE",
"137 702 OFFCURVE",
"118 702 QCURVE SMOOTH",
"99 702 OFFCURVE",
"77 727 OFFCURVE",
"77 748 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 13 7 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 237;
},
{
anchors = (
{
name = _top;
position = "{118, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"31 712 OFFCURVE",
"80 665 OFFCURVE",
"118 665 QCURVE SMOOTH",
"156 665 OFFCURVE",
"206 712 OFFCURVE",
"206 748 QCURVE SMOOTH",
"206 784 OFFCURVE",
"156 831 OFFCURVE",
"118 831 QCURVE SMOOTH",
"81 831 OFFCURVE",
"31 783 OFFCURVE",
"31 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 767 OFFCURVE",
"101 789 OFFCURVE",
"118 789 QCURVE SMOOTH",
"135 789 OFFCURVE",
"156 767 OFFCURVE",
"156 748 QCURVE SMOOTH",
"156 729 OFFCURVE",
"135 706 OFFCURVE",
"118 706 QCURVE SMOOTH",
"101 706 OFFCURVE",
"81 728 OFFCURVE",
"81 748 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 13 7 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 237;
}
);
note = ring.case;
},
{
glyphname = tilde.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 676 LINE",
"55 694 OFFCURVE",
"74 718 OFFCURVE",
"88 718 QCURVE SMOOTH",
"110 718 OFFCURVE",
"169 697 QCURVE SMOOTH",
"233 675 OFFCURVE",
"257 675 QCURVE SMOOTH",
"284 675 OFFCURVE",
"321 729 OFFCURVE",
"321 766 QCURVE",
"301 766 LINE",
"301 748 OFFCURVE",
"282 724 OFFCURVE",
"268 724 QCURVE SMOOTH",
"248 724 OFFCURVE",
"187 745 QCURVE SMOOTH",
"123 767 OFFCURVE",
"99 767 QCURVE SMOOTH",
"72 767 OFFCURVE",
"35 713 OFFCURVE",
"35 676 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
12 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 356;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 672 LINE",
"63 690 OFFCURVE",
"82 711 OFFCURVE",
"96 711 QCURVE SMOOTH",
"112 711 OFFCURVE",
"167 693 QCURVE",
"229 671 OFFCURVE",
"257 671 QCURVE SMOOTH",
"289 671 OFFCURVE",
"321 725 OFFCURVE",
"321 770 QCURVE",
"294 770 LINE",
"294 753 OFFCURVE",
"275 732 OFFCURVE",
"261 732 QCURVE SMOOTH",
"249 732 OFFCURVE",
"189 750 QCURVE SMOOTH",
"116 771 OFFCURVE",
"99 771 QCURVE SMOOTH",
"67 771 OFFCURVE",
"35 717 OFFCURVE",
"35 672 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
14 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 356;
}
);
note = tilde.case;
},
{
glyphname = acute.loclPLK.case.comb;
layers = (
{
components = (
{
name = acute.loclPLK.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = acute.loclPLK.case;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = acute.loclPLK.comb;
layers = (
{
components = (
{
name = acute.loclPLK;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = acute.loclPLK;
transform = "{1, 0, 0, 1, -276, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = acute.loclPLK;
layers = (
{
anchors = (
{
name = _top;
position = "{129, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"196 675 OFFCURVE",
"151 673 OFFCURVE",
"136 664 QCURVE SMOOTH",
"128 659 OFFCURVE",
"122 647 OFFCURVE",
"118 625 QCURVE SMOOTH",
"98 516 LINE",
"92 491 OFFCURVE",
"94 487 QCURVE SMOOTH",
"98 479 OFFCURVE",
"109 487 QCURVE SMOOTH",
"116 492 OFFCURVE",
"122 505 QCURVE SMOOTH",
"196 654 LINE SMOOTH",
"201 665 OFFCURVE",
"199 670 QCURVE SMOOTH"
);
}
);
width = 276;
},
{
anchors = (
{
name = _top;
position = "{136, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"207 671 OFFCURVE",
"151 669 OFFCURVE",
"135 660 QCURVE SMOOTH",
"126 655 OFFCURVE",
"120 643 OFFCURVE",
"116 621 QCURVE SMOOTH",
"99 521 LINE SMOOTH",
"95 498 OFFCURVE",
"99 490 QCURVE SMOOTH",
"104 481 OFFCURVE",
"113 487 QCURVE SMOOTH",
"122 493 OFFCURVE",
"130 506 QCURVE SMOOTH",
"210 640 LINE SMOOTH",
"218 654 OFFCURVE",
"212 662 QCURVE SMOOTH"
);
}
);
width = 276;
}
);
},
{
glyphname = brevecomb_acutecomb;
layers = (
{
components = (
{
alignment = -1;
name = breveacute;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = breveacute;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_gravecomb;
layers = (
{
components = (
{
alignment = -1;
name = brevegrave;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevegrave;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
layers = (
{
components = (
{
alignment = -1;
name = brevehook;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevehook;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_tildecomb;
layers = (
{
components = (
{
alignment = -1;
name = brevetilde;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevetilde;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
layers = (
{
components = (
{
alignment = -1;
name = circumflexacute;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexacute;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
layers = (
{
components = (
{
alignment = -1;
name = circumflexgrave;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexgrave;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
layers = (
{
components = (
{
alignment = -1;
name = circumflexhook;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexhook;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
layers = (
{
components = (
{
alignment = -1;
name = circumflextilde;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflextilde;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_acutecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = breveacute.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = breveacute.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_gravecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = brevegrave.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevegrave.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = brevecomb_tildecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = brevetilde.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = brevetilde.case;
transform = "{1, 0, 0, 1, -341, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_acutecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = circumflexacute.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexacute.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_gravecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = circumflexgrave.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflexgrave.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = circumflexcomb_tildecomb.case;
layers = (
{
components = (
{
alignment = -1;
name = circumflextilde.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = circumflextilde.case;
transform = "{1, 0, 0, 1, -382, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = uniE0FF;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
unicode = E0FF;
},
{
glyphname = uniEFFD;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
unicode = EFFD;
},
{
glyphname = uniF000;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
unicode = F000;
},
{
glyphname = IJacute;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"260 0 LINE",
"260 29 LINE",
"221 27 LINE",
"201 27 OFFCURVE",
"201 49 QCURVE SMOOTH",
"201 548 LINE SMOOTH",
"201 557 OFFCURVE",
"211 569 OFFCURVE",
"219 569 QCURVE SMOOTH",
"221 569 LINE",
"260 567 LINE",
"260 597 LINE",
"50 597 LINE",
"50 567 LINE",
"89 569 LINE",
"98 570 OFFCURVE",
"108 557 OFFCURVE",
"108 548 QCURVE SMOOTH",
"108 49 LINE SMOOTH",
"108 27 OFFCURVE",
"89 27 QCURVE",
"50 29 LINE"
);
},
{
closed = 1;
nodes = (
"334 -1 LINE",
"340 5 OFFCURVE",
"361 5 QCURVE SMOOTH",
"369 5 LINE SMOOTH",
"378 5 OFFCURVE",
"410 -1 QCURVE SMOOTH",
"460 -10 OFFCURVE",
"491 -10 QCURVE SMOOTH",
"658 -10 OFFCURVE",
"658 179 QCURVE SMOOTH",
"658 549 LINE SMOOTH",
"658 557 OFFCURVE",
"668 569 OFFCURVE",
"676 569 QCURVE SMOOTH",
"678 569 LINE",
"716 567 LINE",
"716 597 LINE",
"477 597 LINE",
"477 567 LINE",
"546 569 LINE",
"554 570 OFFCURVE",
"565 557 OFFCURVE",
"565 548 QCURVE SMOOTH",
"565 179 LINE SMOOTH",
"565 90 OFFCURVE",
"523 16 OFFCURVE",
"475 16 QCURVE SMOOTH",
"419 16 OFFCURVE",
"370 114 OFFCURVE",
"370 172 QCURVE",
"334 172 LINE"
);
},
{
closed = 1;
nodes = (
"299 806 OFFCURVE",
"259 826 OFFCURVE",
"242 826 QCURVE SMOOTH",
"232 826 OFFCURVE",
"221 818 OFFCURVE",
"206 801 QCURVE SMOOTH",
"111 697 LINE",
"93 678 OFFCURVE",
"93 674 QCURVE SMOOTH",
"93 666 OFFCURVE",
"106 666 QCURVE SMOOTH",
"114 666 OFFCURVE",
"126 675 QCURVE",
"289 787 LINE",
"299 794 OFFCURVE",
"299 800 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"741 806 OFFCURVE",
"701 826 OFFCURVE",
"684 826 QCURVE SMOOTH",
"674 826 OFFCURVE",
"663 818 OFFCURVE",
"648 801 QCURVE SMOOTH",
"553 697 LINE",
"535 678 OFFCURVE",
"535 674 QCURVE SMOOTH",
"535 666 OFFCURVE",
"548 666 QCURVE SMOOTH",
"556 666 OFFCURVE",
"568 675 QCURVE",
"731 787 LINE",
"741 794 OFFCURVE",
"741 800 QCURVE SMOOTH"
);
}
);
width = 761;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"39 0 LINE",
"286 0 LINE",
"286 37 LINE",
"251 35 LINE",
"231 33 OFFCURVE",
"231 57 QCURVE SMOOTH",
"231 541 LINE SMOOTH",
"231 550 OFFCURVE",
"241 562 OFFCURVE",
"249 562 QCURVE SMOOTH",
"251 562 LINE",
"286 560 LINE",
"286 597 LINE",
"39 597 LINE",
"39 560 LINE",
"74 562 LINE",
"83 563 OFFCURVE",
"93 550 OFFCURVE",
"93 541 QCURVE SMOOTH",
"93 57 LINE SMOOTH",
"93 35 OFFCURVE",
"76 35 QCURVE SMOOTH",
"39 37 LINE"
);
},
{
closed = 1;
nodes = (
"349 -1 LINE",
"355 5 OFFCURVE",
"376 5 QCURVE SMOOTH",
"384 5 LINE SMOOTH",
"393 5 OFFCURVE",
"423 -1 QCURVE SMOOTH",
"473 -10 OFFCURVE",
"501 -10 QCURVE SMOOTH",
"696 -10 OFFCURVE",
"696 179 QCURVE SMOOTH",
"696 542 LINE SMOOTH",
"696 550 OFFCURVE",
"706 562 OFFCURVE",
"714 562 QCURVE SMOOTH",
"716 562 LINE",
"750 560 LINE",
"750 597 LINE",
"470 597 LINE",
"470 560 LINE",
"539 562 LINE",
"547 563 OFFCURVE",
"558 550 OFFCURVE",
"558 541 QCURVE SMOOTH",
"558 179 LINE SMOOTH",
"558 94 OFFCURVE",
"521 24 OFFCURVE",
"478 24 QCURVE SMOOTH",
"433 24 OFFCURVE",
"393 117 OFFCURVE",
"393 172 QCURVE",
"349 172 LINE"
);
},
{
closed = 1;
nodes = (
"310 799 OFFCURVE",
"260 826 OFFCURVE",
"242 826 QCURVE SMOOTH",
"232 826 OFFCURVE",
"221 818 OFFCURVE",
"206 801 QCURVE SMOOTH",
"111 697 LINE SMOOTH",
"95 680 OFFCURVE",
"95 670 QCURVE SMOOTH",
"95 660 OFFCURVE",
"106 660 QCURVE SMOOTH",
"117 660 OFFCURVE",
"130 669 QCURVE",
"297 771 LINE",
"310 781 OFFCURVE",
"310 789 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"767 799 OFFCURVE",
"717 826 OFFCURVE",
"699 826 QCURVE SMOOTH",
"689 826 OFFCURVE",
"678 818 OFFCURVE",
"663 801 QCURVE SMOOTH",
"568 697 LINE SMOOTH",
"552 680 OFFCURVE",
"552 670 QCURVE SMOOTH",
"552 660 OFFCURVE",
"563 660 QCURVE SMOOTH",
"574 660 OFFCURVE",
"587 669 QCURVE",
"754 771 LINE",
"767 781 OFFCURVE",
"767 789 QCURVE SMOOTH"
);
}
);
width = 784;
}
);
},
{
glyphname = ijacute;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"171 420 LINE",
"36 420 LINE",
"36 394 LINE",
"73 396 LINE",
"85 393 OFFCURVE",
"85 376 QCURVE SMOOTH",
"85 43 LINE SMOOTH",
"85 24 OFFCURVE",
"72 24 QCURVE",
"35 26 LINE",
"35 0 LINE",
"220 0 LINE",
"220 26 LINE",
"184 24 LINE",
"171 24 OFFCURVE",
"171 43 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"426 420 LINE",
"286 420 LINE",
"286 394 LINE",
"327 396 LINE",
"340 396 OFFCURVE",
"340 376 QCURVE SMOOTH",
"340 -59 LINE SMOOTH",
"340 -90 OFFCURVE",
"342 -133 QCURVE SMOOTH",
"346 -216 OFFCURVE",
"289 -216 QCURVE SMOOTH",
"258 -216 OFFCURVE",
"258 -191 QCURVE SMOOTH",
"258 -187 OFFCURVE",
"264 -165 OFFCURVE",
"264 -160 QCURVE SMOOTH",
"264 -144 OFFCURVE",
"241 -132 OFFCURVE",
"229 -132 QCURVE SMOOTH",
"208 -132 OFFCURVE",
"182 -156 OFFCURVE",
"182 -176 QCURVE SMOOTH",
"182 -204 OFFCURVE",
"237 -243 OFFCURVE",
"283 -243 QCURVE SMOOTH",
"426 -243 OFFCURVE",
"426 -4 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 633 OFFCURVE",
"236 653 OFFCURVE",
"219 653 QCURVE SMOOTH",
"209 653 OFFCURVE",
"198 645 OFFCURVE",
"183 628 QCURVE SMOOTH",
"88 524 LINE",
"70 505 OFFCURVE",
"70 501 QCURVE SMOOTH",
"70 493 OFFCURVE",
"83 493 QCURVE SMOOTH",
"91 494 OFFCURVE",
"103 502 QCURVE SMOOTH",
"266 614 LINE SMOOTH",
"276 621 OFFCURVE",
"276 627 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"514 633 OFFCURVE",
"474 653 OFFCURVE",
"457 653 QCURVE SMOOTH",
"447 653 OFFCURVE",
"436 645 OFFCURVE",
"421 628 QCURVE SMOOTH",
"326 524 LINE",
"308 505 OFFCURVE",
"308 501 QCURVE SMOOTH",
"308 493 OFFCURVE",
"321 493 QCURVE SMOOTH",
"329 494 OFFCURVE",
"341 502 QCURVE SMOOTH",
"504 614 LINE SMOOTH",
"514 621 OFFCURVE",
"514 627 QCURVE SMOOTH"
);
}
);
width = 506;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"197 425 LINE",
"21 425 LINE",
"21 392 LINE",
"54 394 LINE",
"66 391 OFFCURVE",
"66 374 QCURVE SMOOTH",
"66 51 LINE SMOOTH",
"66 32 OFFCURVE",
"55 32 QCURVE SMOOTH",
"20 34 LINE",
"20 0 LINE",
"243 0 LINE",
"243 34 LINE",
"210 32 LINE SMOOTH",
"197 31 OFFCURVE",
"197 51 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"460 425 LINE",
"283 425 LINE",
"283 392 LINE",
"316 394 LINE SMOOTH",
"329 394 OFFCURVE",
"329 374 QCURVE SMOOTH",
"329 -37 LINE SMOOTH",
"331 -100 OFFCURVE",
"339 -156 QCURVE SMOOTH",
"346 -208 OFFCURVE",
"307 -209 QCURVE SMOOTH",
"285 -210 OFFCURVE",
"285 -184 QCURVE SMOOTH",
"285 -180 OFFCURVE",
"291 -158 OFFCURVE",
"291 -153 QCURVE SMOOTH",
"291 -128 OFFCURVE",
"254 -108 OFFCURVE",
"236 -108 QCURVE SMOOTH",
"207 -108 OFFCURVE",
"173 -140 OFFCURVE",
"173 -166 QCURVE SMOOTH",
"173 -201 OFFCURVE",
"241 -243 OFFCURVE",
"302 -243 QCURVE SMOOTH",
"460 -243 OFFCURVE",
"460 -12 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 626 OFFCURVE",
"237 653 OFFCURVE",
"219 653 QCURVE SMOOTH",
"209 653 OFFCURVE",
"198 645 OFFCURVE",
"183 628 QCURVE SMOOTH",
"88 524 LINE SMOOTH",
"72 507 OFFCURVE",
"72 497 QCURVE SMOOTH",
"72 487 OFFCURVE",
"83 487 QCURVE SMOOTH",
"94 488 OFFCURVE",
"107 496 QCURVE SMOOTH",
"274 598 LINE SMOOTH",
"287 608 OFFCURVE",
"287 616 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"527 626 OFFCURVE",
"477 653 OFFCURVE",
"459 653 QCURVE SMOOTH",
"449 653 OFFCURVE",
"438 645 OFFCURVE",
"423 628 QCURVE SMOOTH",
"328 524 LINE SMOOTH",
"312 507 OFFCURVE",
"312 497 QCURVE SMOOTH",
"312 487 OFFCURVE",
"323 487 QCURVE SMOOTH",
"334 488 OFFCURVE",
"347 496 QCURVE SMOOTH",
"514 598 LINE SMOOTH",
"527 608 OFFCURVE",
"527 616 QCURVE SMOOTH"
);
}
);
width = 525;
}
);
},
{
glyphname = apostrophecomb;
layers = (
{
components = (
{
name = apostrophemod;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
name = apostrophemod;
transform = "{1, 0, 0, 1, -236, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = baraccent;
layers = (
{
anchors = (
{
name = _center;
position = "{200, 289}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"332 270 LINE",
"332 305 LINE",
"84 305 LINE",
"84 270 LINE"
);
}
);
width = 416;
},
{
anchors = (
{
name = _center;
position = "{200, 289}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"337 265 LINE",
"337 310 LINE",
"79 310 LINE",
"79 265 LINE"
);
}
);
width = 416;
}
);
},
{
glyphname = baraccentcomb;
layers = (
{
components = (
{
alignment = -1;
name = baraccent;
transform = "{1, 0, 0, 1, -416, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = baraccent;
transform = "{1, 0, 0, 1, -416, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = baraccentmedium;
layers = (
{
anchors = (
{
name = _center;
position = "{260, 289}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"450 269 LINE",
"450 304 LINE",
"84 304 LINE",
"84 269 LINE"
);
}
);
width = 534;
},
{
anchors = (
{
name = _center;
position = "{260, 289}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"455 264 LINE",
"455 309 LINE",
"79 309 LINE",
"79 264 LINE"
);
}
);
width = 534;
}
);
},
{
glyphname = baraccentmediumcomb;
layers = (
{
components = (
{
alignment = -1;
name = baraccentmedium;
transform = "{1, 0, 0, 1, -534, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = baraccentmedium;
transform = "{1, 0, 0, 1, -534, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = baraccentlong;
layers = (
{
anchors = (
{
name = _center;
position = "{376, 289}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"668 269 LINE",
"668 304 LINE",
"84 304 LINE",
"84 269 LINE"
);
}
);
width = 752;
},
{
anchors = (
{
name = _center;
position = "{376, 289}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"673 264 LINE",
"673 309 LINE",
"79 309 LINE",
"79 264 LINE"
);
}
);
width = 752;
}
);
},
{
glyphname = baraccentlongcomb;
layers = (
{
components = (
{
alignment = -1;
name = baraccentlong;
transform = "{1, 0, 0, 1, -752, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = baraccentlong;
transform = "{1, 0, 0, 1, -752, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = breveinverted;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"73 518 LINE",
"81 549 OFFCURVE",
"130 592 OFFCURVE",
"171 592 QCURVE SMOOTH",
"214 592 OFFCURVE",
"260 550 OFFCURVE",
"268 518 QCURVE",
"306 518 LINE",
"299 575 OFFCURVE",
"230 642 OFFCURVE",
"171 642 QCURVE SMOOTH",
"112 642 OFFCURVE",
"42 575 OFFCURVE",
"35 518 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"80 511 LINE",
"88 539 OFFCURVE",
"132 577 OFFCURVE",
"171 577 QCURVE SMOOTH",
"211 577 OFFCURVE",
"253 539 OFFCURVE",
"260 511 QCURVE",
"306 511 LINE",
"304 569 OFFCURVE",
"231 642 OFFCURVE",
"171 642 QCURVE SMOOTH",
"111 642 OFFCURVE",
"37 569 OFFCURVE",
"35 511 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = breveinverted.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"73 666 LINE",
"81 697 OFFCURVE",
"130 740 OFFCURVE",
"171 740 QCURVE SMOOTH",
"214 740 OFFCURVE",
"260 698 OFFCURVE",
"268 666 QCURVE",
"306 666 LINE",
"299 723 OFFCURVE",
"230 790 OFFCURVE",
"171 790 QCURVE SMOOTH",
"112 790 OFFCURVE",
"42 723 OFFCURVE",
"35 666 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"80 659 LINE",
"88 687 OFFCURVE",
"132 725 OFFCURVE",
"171 725 QCURVE SMOOTH",
"211 725 OFFCURVE",
"253 687 OFFCURVE",
"260 659 QCURVE",
"306 659 LINE",
"304 717 OFFCURVE",
"231 790 OFFCURVE",
"171 790 QCURVE SMOOTH",
"111 790 OFFCURVE",
"37 717 OFFCURVE",
"35 659 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = brevebelow;
layers = (
{
anchors = (
{
name = _bottom;
position = "{170, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 -78 LINE",
"260 -109 OFFCURVE",
"211 -152 OFFCURVE",
"170 -152 QCURVE SMOOTH",
"127 -152 OFFCURVE",
"81 -110 OFFCURVE",
"73 -78 QCURVE",
"35 -78 LINE",
"42 -135 OFFCURVE",
"111 -202 OFFCURVE",
"170 -202 QCURVE SMOOTH",
"229 -202 OFFCURVE",
"299 -135 OFFCURVE",
"306 -78 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _bottom;
position = "{170, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 -71 LINE",
"253 -99 OFFCURVE",
"209 -137 OFFCURVE",
"170 -137 QCURVE SMOOTH",
"130 -137 OFFCURVE",
"88 -99 OFFCURVE",
"81 -71 QCURVE",
"35 -71 LINE",
"37 -129 OFFCURVE",
"110 -202 OFFCURVE",
"170 -202 QCURVE SMOOTH",
"230 -202 OFFCURVE",
"304 -129 OFFCURVE",
"306 -71 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = breveacute;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 642 LINE",
"260 611 OFFCURVE",
"211 568 OFFCURVE",
"170 568 QCURVE SMOOTH",
"127 568 OFFCURVE",
"81 610 OFFCURVE",
"73 642 QCURVE",
"35 642 LINE",
"42 585 OFFCURVE",
"111 518 OFFCURVE",
"170 518 QCURVE SMOOTH",
"229 518 OFFCURVE",
"299 585 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"307 747 OFFCURVE",
"271 765 OFFCURVE",
"255 765 QCURVE SMOOTH",
"246 765 OFFCURVE",
"236 758 OFFCURVE",
"222 742 QCURVE SMOOTH",
"158 672 LINE SMOOTH",
"141 654 OFFCURVE",
"141 649 QCURVE SMOOTH",
"141 642 OFFCURVE",
"156 642 QCURVE SMOOTH",
"167 643 OFFCURVE",
"189 657 QCURVE SMOOTH",
"298 729 LINE SMOOTH",
"307 735 OFFCURVE",
"307 741 QCURVE SMOOTH"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 642 LINE",
"253 614 OFFCURVE",
"209 576 OFFCURVE",
"170 576 QCURVE SMOOTH",
"130 576 OFFCURVE",
"88 614 OFFCURVE",
"81 642 QCURVE",
"35 642 LINE",
"37 584 OFFCURVE",
"110 511 OFFCURVE",
"170 511 QCURVE SMOOTH",
"230 511 OFFCURVE",
"304 584 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"314 755 OFFCURVE",
"269 780 OFFCURVE",
"252 780 QCURVE SMOOTH",
"243 780 OFFCURVE",
"232 772 OFFCURVE",
"220 757 QCURVE SMOOTH",
"154 675 LINE SMOOTH",
"141 659 OFFCURVE",
"140 651 QCURVE SMOOTH",
"139 642 OFFCURVE",
"150 642 QCURVE SMOOTH",
"159 642 OFFCURVE",
"171 650 QCURVE SMOOTH",
"302 730 LINE SMOOTH",
"314 737 OFFCURVE",
"314 746 QCURVE SMOOTH"
);
}
);
width = 341;
}
);
},
{
glyphname = breveacute.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 790 LINE",
"260 759 OFFCURVE",
"211 716 OFFCURVE",
"170 716 QCURVE SMOOTH",
"127 716 OFFCURVE",
"81 758 OFFCURVE",
"73 790 QCURVE",
"35 790 LINE",
"42 733 OFFCURVE",
"111 666 OFFCURVE",
"170 666 QCURVE SMOOTH",
"229 666 OFFCURVE",
"299 733 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"307 895 OFFCURVE",
"271 913 OFFCURVE",
"255 913 QCURVE SMOOTH",
"246 913 OFFCURVE",
"236 906 OFFCURVE",
"222 890 QCURVE SMOOTH",
"158 820 LINE SMOOTH",
"141 802 OFFCURVE",
"141 797 QCURVE SMOOTH",
"141 790 OFFCURVE",
"156 790 QCURVE SMOOTH",
"167 790 OFFCURVE",
"189 805 QCURVE SMOOTH",
"298 877 LINE SMOOTH",
"307 883 OFFCURVE",
"307 889 QCURVE SMOOTH"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 790 LINE",
"253 762 OFFCURVE",
"209 724 OFFCURVE",
"170 724 QCURVE SMOOTH",
"130 724 OFFCURVE",
"88 762 OFFCURVE",
"81 790 QCURVE",
"35 790 LINE",
"37 732 OFFCURVE",
"110 659 OFFCURVE",
"170 659 QCURVE SMOOTH",
"230 659 OFFCURVE",
"304 732 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"314 903 OFFCURVE",
"269 928 OFFCURVE",
"252 928 QCURVE SMOOTH",
"243 928 OFFCURVE",
"232 920 OFFCURVE",
"220 905 QCURVE SMOOTH",
"154 823 LINE SMOOTH",
"141 807 OFFCURVE",
"140 799 QCURVE SMOOTH",
"139 790 OFFCURVE",
"150 790 QCURVE SMOOTH",
"159 790 OFFCURVE",
"171 798 QCURVE SMOOTH",
"302 878 LINE SMOOTH",
"314 885 OFFCURVE",
"314 894 QCURVE SMOOTH"
);
}
);
width = 341;
}
);
},
{
glyphname = brevegrave;
layers = (
{
anchors = (
{
name = _top;
position = "{171, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"42 585 OFFCURVE",
"112 518 OFFCURVE",
"171 518 QCURVE SMOOTH",
"230 518 OFFCURVE",
"299 585 OFFCURVE",
"306 642 QCURVE",
"268 642 LINE",
"260 610 OFFCURVE",
"214 568 OFFCURVE",
"171 568 QCURVE SMOOTH",
"130 568 OFFCURVE",
"81 611 OFFCURVE",
"73 642 QCURVE",
"35 642 LINE"
);
},
{
closed = 1;
nodes = (
"34 735 OFFCURVE",
"43 729 QCURVE SMOOTH",
"152 657 LINE SMOOTH",
"174 643 OFFCURVE",
"185 642 QCURVE SMOOTH",
"200 642 OFFCURVE",
"200 649 QCURVE SMOOTH",
"200 654 OFFCURVE",
"183 672 QCURVE SMOOTH",
"119 742 LINE SMOOTH",
"105 758 OFFCURVE",
"95 765 OFFCURVE",
"86 765 QCURVE SMOOTH",
"70 765 OFFCURVE",
"34 747 OFFCURVE",
"34 741 QCURVE SMOOTH"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{171, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"37 584 OFFCURVE",
"111 511 OFFCURVE",
"171 511 QCURVE SMOOTH",
"231 511 OFFCURVE",
"304 584 OFFCURVE",
"306 642 QCURVE",
"260 642 LINE",
"253 614 OFFCURVE",
"211 576 OFFCURVE",
"171 576 QCURVE SMOOTH",
"132 576 OFFCURVE",
"88 614 OFFCURVE",
"80 642 QCURVE",
"35 642 LINE"
);
},
{
closed = 1;
nodes = (
"27 737 OFFCURVE",
"39 730 QCURVE SMOOTH",
"170 650 LINE SMOOTH",
"182 642 OFFCURVE",
"191 642 QCURVE SMOOTH",
"202 642 OFFCURVE",
"201 651 QCURVE SMOOTH",
"200 659 OFFCURVE",
"187 675 QCURVE SMOOTH",
"121 757 LINE SMOOTH",
"109 772 OFFCURVE",
"98 780 OFFCURVE",
"89 780 QCURVE SMOOTH",
"72 780 OFFCURVE",
"27 755 OFFCURVE",
"27 746 QCURVE SMOOTH"
);
}
);
width = 341;
}
);
},
{
glyphname = brevegrave.case;
layers = (
{
anchors = (
{
name = _top;
position = "{171, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"42 733 OFFCURVE",
"112 666 OFFCURVE",
"171 666 QCURVE SMOOTH",
"230 666 OFFCURVE",
"299 733 OFFCURVE",
"306 790 QCURVE",
"268 790 LINE",
"260 758 OFFCURVE",
"214 716 OFFCURVE",
"171 716 QCURVE SMOOTH",
"130 716 OFFCURVE",
"81 759 OFFCURVE",
"73 790 QCURVE",
"35 790 LINE"
);
},
{
closed = 1;
nodes = (
"34 883 OFFCURVE",
"43 877 QCURVE SMOOTH",
"152 805 LINE SMOOTH",
"174 790 OFFCURVE",
"185 790 QCURVE SMOOTH",
"200 790 OFFCURVE",
"200 797 QCURVE SMOOTH",
"200 802 OFFCURVE",
"183 820 QCURVE SMOOTH",
"119 890 LINE SMOOTH",
"105 906 OFFCURVE",
"95 913 OFFCURVE",
"86 913 QCURVE SMOOTH",
"70 913 OFFCURVE",
"34 895 OFFCURVE",
"34 889 QCURVE SMOOTH"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{171, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"37 732 OFFCURVE",
"111 659 OFFCURVE",
"171 659 QCURVE SMOOTH",
"231 659 OFFCURVE",
"304 732 OFFCURVE",
"306 790 QCURVE",
"260 790 LINE",
"253 762 OFFCURVE",
"211 724 OFFCURVE",
"171 724 QCURVE SMOOTH",
"132 724 OFFCURVE",
"88 762 OFFCURVE",
"80 790 QCURVE",
"35 790 LINE"
);
},
{
closed = 1;
nodes = (
"27 885 OFFCURVE",
"39 878 QCURVE SMOOTH",
"170 798 LINE SMOOTH",
"182 790 OFFCURVE",
"191 790 QCURVE SMOOTH",
"202 790 OFFCURVE",
"201 799 QCURVE SMOOTH",
"200 807 OFFCURVE",
"187 823 QCURVE SMOOTH",
"121 905 LINE SMOOTH",
"109 920 OFFCURVE",
"98 928 OFFCURVE",
"89 928 QCURVE SMOOTH",
"72 928 OFFCURVE",
"27 903 OFFCURVE",
"27 894 QCURVE SMOOTH"
);
}
);
width = 341;
}
);
},
{
glyphname = brevehook;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 642 LINE",
"260 611 OFFCURVE",
"211 568 OFFCURVE",
"170 568 QCURVE SMOOTH",
"127 568 OFFCURVE",
"81 610 OFFCURVE",
"73 642 QCURVE",
"35 642 LINE",
"42 585 OFFCURVE",
"111 518 OFFCURVE",
"170 518 QCURVE SMOOTH",
"229 518 OFFCURVE",
"299 585 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"144 786 OFFCURVE",
"163 786 QCURVE SMOOTH",
"181 786 OFFCURVE",
"201 771 OFFCURVE",
"201 755 QCURVE SMOOTH",
"201 727 OFFCURVE",
"156 708 QCURVE SMOOTH",
"142 702 OFFCURVE",
"142 690 QCURVE SMOOTH",
"142 675 OFFCURVE",
"151 642 QCURVE",
"180 642 LINE",
"179 670 OFFCURVE",
"179 678 QCURVE SMOOTH",
"179 687 OFFCURVE",
"192 696 OFFCURVE",
"206 699 QCURVE SMOOTH",
"230 704 OFFCURVE",
"253 732 OFFCURVE",
"253 756 QCURVE SMOOTH",
"253 783 OFFCURVE",
"213 812 OFFCURVE",
"185 812 QCURVE SMOOTH",
"151 812 OFFCURVE",
"128 802 QCURVE",
"131 780 LINE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 642 LINE",
"253 614 OFFCURVE",
"209 576 OFFCURVE",
"170 576 QCURVE SMOOTH",
"130 576 OFFCURVE",
"88 614 OFFCURVE",
"81 642 QCURVE",
"35 642 LINE",
"37 584 OFFCURVE",
"110 511 OFFCURVE",
"170 511 QCURVE SMOOTH",
"230 511 OFFCURVE",
"304 584 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"142 780 OFFCURVE",
"161 780 QCURVE SMOOTH",
"175 780 OFFCURVE",
"196 765 OFFCURVE",
"196 751 QCURVE SMOOTH",
"196 730 OFFCURVE",
"154 711 QCURVE SMOOTH",
"143 706 OFFCURVE",
"142 693 QCURVE SMOOTH",
"141 676 OFFCURVE",
"150 643 QCURVE",
"181 643 LINE",
"181 666 OFFCURVE",
"182 676 QCURVE SMOOTH",
"183 687 OFFCURVE",
"200 695 OFFCURVE",
"214 699 QCURVE SMOOTH",
"238 706 OFFCURVE",
"263 733 OFFCURVE",
"263 753 QCURVE SMOOTH",
"263 779 OFFCURVE",
"218 814 OFFCURVE",
"182 814 QCURVE SMOOTH",
"148 814 OFFCURVE",
"119 798 QCURVE",
"129 772 LINE"
);
}
);
width = 341;
}
);
},
{
glyphname = brevehook.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 790 LINE",
"260 759 OFFCURVE",
"211 716 OFFCURVE",
"170 716 QCURVE SMOOTH",
"127 716 OFFCURVE",
"81 758 OFFCURVE",
"73 790 QCURVE",
"35 790 LINE",
"42 733 OFFCURVE",
"111 666 OFFCURVE",
"170 666 QCURVE SMOOTH",
"229 666 OFFCURVE",
"299 733 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"144 934 OFFCURVE",
"163 934 QCURVE SMOOTH",
"181 934 OFFCURVE",
"201 919 OFFCURVE",
"201 903 QCURVE SMOOTH",
"201 875 OFFCURVE",
"156 856 QCURVE SMOOTH",
"142 850 OFFCURVE",
"142 838 QCURVE SMOOTH",
"142 823 OFFCURVE",
"151 790 QCURVE",
"180 790 LINE",
"179 818 OFFCURVE",
"179 826 QCURVE SMOOTH",
"179 835 OFFCURVE",
"192 844 OFFCURVE",
"206 847 QCURVE SMOOTH",
"230 852 OFFCURVE",
"253 880 OFFCURVE",
"253 904 QCURVE SMOOTH",
"253 931 OFFCURVE",
"213 960 OFFCURVE",
"185 960 QCURVE SMOOTH",
"151 960 OFFCURVE",
"128 950 QCURVE",
"131 928 LINE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 790 LINE",
"253 762 OFFCURVE",
"209 724 OFFCURVE",
"170 724 QCURVE SMOOTH",
"130 724 OFFCURVE",
"88 762 OFFCURVE",
"81 790 QCURVE",
"35 790 LINE",
"37 732 OFFCURVE",
"110 659 OFFCURVE",
"170 659 QCURVE SMOOTH",
"230 659 OFFCURVE",
"304 732 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"142 928 OFFCURVE",
"161 928 QCURVE SMOOTH",
"175 928 OFFCURVE",
"196 913 OFFCURVE",
"196 899 QCURVE SMOOTH",
"196 878 OFFCURVE",
"154 859 QCURVE SMOOTH",
"143 854 OFFCURVE",
"142 841 QCURVE SMOOTH",
"141 824 OFFCURVE",
"150 791 QCURVE",
"181 791 LINE",
"181 814 OFFCURVE",
"182 824 QCURVE SMOOTH",
"183 835 OFFCURVE",
"200 843 OFFCURVE",
"214 847 QCURVE SMOOTH",
"238 854 OFFCURVE",
"263 881 OFFCURVE",
"263 901 QCURVE SMOOTH",
"263 927 OFFCURVE",
"218 962 OFFCURVE",
"182 962 QCURVE SMOOTH",
"148 962 OFFCURVE",
"119 946 QCURVE",
"129 920 LINE"
);
}
);
width = 341;
}
);
},
{
glyphname = brevetilde;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 642 LINE",
"260 611 OFFCURVE",
"211 568 OFFCURVE",
"170 568 QCURVE SMOOTH",
"127 568 OFFCURVE",
"81 610 OFFCURVE",
"73 642 QCURVE",
"35 642 LINE",
"42 585 OFFCURVE",
"111 518 OFFCURVE",
"170 518 QCURVE SMOOTH",
"229 518 OFFCURVE",
"299 585 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"47 684 LINE",
"47 702 OFFCURVE",
"66 726 OFFCURVE",
"80 726 QCURVE SMOOTH",
"102 726 OFFCURVE",
"161 705 QCURVE SMOOTH",
"225 683 OFFCURVE",
"249 683 QCURVE SMOOTH",
"276 683 OFFCURVE",
"313 737 OFFCURVE",
"313 774 QCURVE",
"293 774 LINE",
"293 756 OFFCURVE",
"274 732 OFFCURVE",
"260 732 QCURVE SMOOTH",
"240 732 OFFCURVE",
"179 753 QCURVE SMOOTH",
"115 775 OFFCURVE",
"91 775 QCURVE SMOOTH",
"64 775 OFFCURVE",
"27 721 OFFCURVE",
"27 684 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 642 LINE",
"253 614 OFFCURVE",
"209 576 OFFCURVE",
"170 576 QCURVE SMOOTH",
"130 576 OFFCURVE",
"88 614 OFFCURVE",
"81 642 QCURVE",
"35 642 LINE",
"37 584 OFFCURVE",
"110 511 OFFCURVE",
"170 511 QCURVE SMOOTH",
"230 511 OFFCURVE",
"304 584 OFFCURVE",
"306 642 QCURVE"
);
},
{
closed = 1;
nodes = (
"55 684 LINE",
"55 702 OFFCURVE",
"74 723 OFFCURVE",
"88 723 QCURVE SMOOTH",
"104 723 OFFCURVE",
"159 705 QCURVE",
"221 683 OFFCURVE",
"249 683 QCURVE SMOOTH",
"281 683 OFFCURVE",
"313 737 OFFCURVE",
"313 782 QCURVE",
"286 782 LINE",
"286 765 OFFCURVE",
"267 744 OFFCURVE",
"253 744 QCURVE SMOOTH",
"241 744 OFFCURVE",
"181 762 QCURVE SMOOTH",
"108 783 OFFCURVE",
"91 783 QCURVE SMOOTH",
"59 783 OFFCURVE",
"27 729 OFFCURVE",
"27 684 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = brevetilde.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"268 790 LINE",
"260 759 OFFCURVE",
"211 716 OFFCURVE",
"170 716 QCURVE SMOOTH",
"127 716 OFFCURVE",
"81 758 OFFCURVE",
"73 790 QCURVE",
"35 790 LINE",
"42 733 OFFCURVE",
"111 666 OFFCURVE",
"170 666 QCURVE SMOOTH",
"229 666 OFFCURVE",
"299 733 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"47 832 LINE",
"47 850 OFFCURVE",
"66 874 OFFCURVE",
"80 874 QCURVE SMOOTH",
"102 874 OFFCURVE",
"161 853 QCURVE SMOOTH",
"225 830 OFFCURVE",
"249 831 QCURVE SMOOTH",
"276 832 OFFCURVE",
"313 885 OFFCURVE",
"313 922 QCURVE",
"293 922 LINE",
"293 904 OFFCURVE",
"274 880 OFFCURVE",
"260 880 QCURVE SMOOTH",
"240 880 OFFCURVE",
"179 901 QCURVE SMOOTH",
"115 923 OFFCURVE",
"91 923 QCURVE SMOOTH",
"64 923 OFFCURVE",
"27 869 OFFCURVE",
"27 832 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"261 790 LINE",
"253 762 OFFCURVE",
"209 724 OFFCURVE",
"170 724 QCURVE SMOOTH",
"130 724 OFFCURVE",
"88 762 OFFCURVE",
"81 790 QCURVE",
"35 790 LINE",
"37 732 OFFCURVE",
"110 659 OFFCURVE",
"170 659 QCURVE SMOOTH",
"230 659 OFFCURVE",
"304 732 OFFCURVE",
"306 790 QCURVE"
);
},
{
closed = 1;
nodes = (
"55 832 LINE",
"55 850 OFFCURVE",
"74 871 OFFCURVE",
"88 871 QCURVE SMOOTH",
"104 871 OFFCURVE",
"159 853 QCURVE",
"221 831 OFFCURVE",
"249 831 QCURVE SMOOTH",
"281 831 OFFCURVE",
"313 885 OFFCURVE",
"313 930 QCURVE",
"286 930 LINE",
"286 913 OFFCURVE",
"267 892 OFFCURVE",
"253 892 QCURVE SMOOTH",
"241 892 OFFCURVE",
"181 910 QCURVE SMOOTH",
"108 932 OFFCURVE",
"91 931 QCURVE SMOOTH",
"59 929 OFFCURVE",
"27 877 OFFCURVE",
"27 832 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = circumflexacute;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 504 OFFCURVE",
"332 518 OFFCURVE",
"322 526 QCURVE SMOOTH",
"287 556 OFFCURVE",
"268 576 QCURVE SMOOTH",
"245 600 LINE",
"221 624 LINE",
"194 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"188 649 OFFCURVE",
"161 624 QCURVE",
"137 600 LINE",
"114 576 LINE SMOOTH",
"95 556 OFFCURVE",
"60 526 QCURVE SMOOTH",
"50 518 OFFCURVE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"72 505 QCURVE SMOOTH",
"191 579 LINE",
"310 505 LINE SMOOTH",
"329 493 OFFCURVE",
"338 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 791 OFFCURVE",
"282 809 OFFCURVE",
"266 809 QCURVE SMOOTH",
"257 809 OFFCURVE",
"247 802 OFFCURVE",
"233 786 QCURVE SMOOTH",
"169 716 LINE SMOOTH",
"152 698 OFFCURVE",
"152 693 QCURVE SMOOTH",
"152 686 OFFCURVE",
"167 686 QCURVE SMOOTH",
"178 686 OFFCURVE",
"200 701 QCURVE SMOOTH",
"309 773 LINE SMOOTH",
"318 779 OFFCURVE",
"318 785 QCURVE SMOOTH"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 505 OFFCURVE",
"331 522 OFFCURVE",
"319 533 QCURVE",
"289 563 OFFCURVE",
"271 583 QCURVE SMOOTH",
"248 607 LINE",
"224 631 LINE SMOOTH",
"206 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"175 649 OFFCURVE",
"158 631 QCURVE SMOOTH",
"134 607 LINE",
"111 583 LINE SMOOTH",
"93 563 OFFCURVE",
"63 533 QCURVE",
"51 522 OFFCURVE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"46 493 QCURVE SMOOTH",
"60 493 OFFCURVE",
"79 505 QCURVE SMOOTH",
"191 571 LINE",
"302 505 LINE SMOOTH",
"321 493 OFFCURVE",
"335 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"324 791 OFFCURVE",
"279 816 OFFCURVE",
"262 816 QCURVE SMOOTH",
"253 816 OFFCURVE",
"242 808 OFFCURVE",
"230 793 QCURVE SMOOTH",
"164 711 LINE SMOOTH",
"151 695 OFFCURVE",
"150 687 QCURVE SMOOTH",
"149 678 OFFCURVE",
"160 678 QCURVE SMOOTH",
"169 678 OFFCURVE",
"181 686 QCURVE SMOOTH",
"312 766 LINE SMOOTH",
"324 773 OFFCURVE",
"324 782 QCURVE SMOOTH"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflexacute.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 677 OFFCURVE",
"332 691 OFFCURVE",
"322 699 QCURVE SMOOTH",
"287 729 OFFCURVE",
"268 749 QCURVE SMOOTH",
"245 773 LINE",
"221 797 LINE",
"194 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"188 822 OFFCURVE",
"161 797 QCURVE",
"137 773 LINE",
"114 749 LINE SMOOTH",
"95 729 OFFCURVE",
"60 699 QCURVE SMOOTH",
"50 691 OFFCURVE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"72 678 QCURVE SMOOTH",
"191 752 LINE",
"310 678 LINE SMOOTH",
"329 666 OFFCURVE",
"338 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 964 OFFCURVE",
"282 982 OFFCURVE",
"266 982 QCURVE SMOOTH",
"257 982 OFFCURVE",
"247 975 OFFCURVE",
"233 959 QCURVE SMOOTH",
"169 889 LINE SMOOTH",
"152 871 OFFCURVE",
"152 866 QCURVE SMOOTH",
"152 859 OFFCURVE",
"167 859 QCURVE SMOOTH",
"178 859 OFFCURVE",
"200 874 QCURVE SMOOTH",
"309 946 LINE SMOOTH",
"318 952 OFFCURVE",
"318 958 QCURVE SMOOTH"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 678 OFFCURVE",
"331 695 OFFCURVE",
"319 706 QCURVE",
"289 736 OFFCURVE",
"271 756 QCURVE SMOOTH",
"248 780 LINE",
"224 804 LINE SMOOTH",
"206 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"175 822 OFFCURVE",
"158 804 QCURVE SMOOTH",
"134 780 LINE",
"111 756 LINE SMOOTH",
"93 736 OFFCURVE",
"63 706 QCURVE",
"51 695 OFFCURVE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"46 666 QCURVE SMOOTH",
"60 666 OFFCURVE",
"79 678 QCURVE SMOOTH",
"191 744 LINE",
"302 678 LINE SMOOTH",
"321 666 OFFCURVE",
"335 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"324 964 OFFCURVE",
"279 989 OFFCURVE",
"262 989 QCURVE SMOOTH",
"253 989 OFFCURVE",
"242 981 OFFCURVE",
"230 966 QCURVE SMOOTH",
"164 884 LINE SMOOTH",
"151 868 OFFCURVE",
"150 860 QCURVE SMOOTH",
"149 851 OFFCURVE",
"160 851 QCURVE SMOOTH",
"169 851 OFFCURVE",
"181 859 QCURVE SMOOTH",
"312 939 LINE SMOOTH",
"324 946 OFFCURVE",
"324 955 QCURVE SMOOTH"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflexgrave;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"72 505 QCURVE SMOOTH",
"191 579 LINE",
"310 505 LINE SMOOTH",
"329 493 OFFCURVE",
"338 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH",
"347 504 OFFCURVE",
"332 518 OFFCURVE",
"322 526 QCURVE SMOOTH",
"287 556 OFFCURVE",
"268 576 QCURVE SMOOTH",
"245 600 LINE",
"221 624 LINE",
"194 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"188 649 OFFCURVE",
"161 624 QCURVE",
"137 600 LINE",
"114 576 LINE SMOOTH",
"95 556 OFFCURVE",
"60 526 QCURVE SMOOTH",
"50 518 OFFCURVE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 779 OFFCURVE",
"73 773 QCURVE SMOOTH",
"182 701 LINE SMOOTH",
"204 686 OFFCURVE",
"215 686 QCURVE SMOOTH",
"230 686 OFFCURVE",
"230 693 QCURVE SMOOTH",
"230 698 OFFCURVE",
"213 716 QCURVE SMOOTH",
"149 786 LINE SMOOTH",
"135 802 OFFCURVE",
"125 809 OFFCURVE",
"116 809 QCURVE SMOOTH",
"100 809 OFFCURVE",
"64 791 OFFCURVE",
"64 785 QCURVE SMOOTH"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 493 OFFCURVE",
"47 493 QCURVE SMOOTH",
"61 493 OFFCURVE",
"80 505 QCURVE SMOOTH",
"191 571 LINE",
"303 505 LINE SMOOTH",
"322 493 OFFCURVE",
"336 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH",
"347 505 OFFCURVE",
"331 522 OFFCURVE",
"319 533 QCURVE",
"289 563 OFFCURVE",
"271 583 QCURVE SMOOTH",
"248 607 LINE",
"224 631 LINE SMOOTH",
"207 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"176 649 OFFCURVE",
"158 631 QCURVE SMOOTH",
"134 607 LINE",
"111 583 LINE SMOOTH",
"93 563 OFFCURVE",
"63 533 QCURVE",
"51 522 OFFCURVE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 773 OFFCURVE",
"70 766 QCURVE SMOOTH",
"201 686 LINE SMOOTH",
"213 678 OFFCURVE",
"222 678 QCURVE SMOOTH",
"233 678 OFFCURVE",
"232 687 QCURVE SMOOTH",
"231 695 OFFCURVE",
"218 711 QCURVE SMOOTH",
"152 793 LINE SMOOTH",
"140 808 OFFCURVE",
"129 816 OFFCURVE",
"120 816 QCURVE SMOOTH",
"103 816 OFFCURVE",
"58 791 OFFCURVE",
"58 782 QCURVE SMOOTH"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflexgrave.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"72 678 QCURVE SMOOTH",
"191 752 LINE",
"310 678 LINE SMOOTH",
"329 666 OFFCURVE",
"338 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH",
"347 677 OFFCURVE",
"332 691 OFFCURVE",
"322 699 QCURVE SMOOTH",
"287 729 OFFCURVE",
"268 749 QCURVE SMOOTH",
"245 773 LINE",
"221 797 LINE",
"194 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"188 822 OFFCURVE",
"161 797 QCURVE",
"137 773 LINE",
"114 749 LINE SMOOTH",
"95 729 OFFCURVE",
"60 699 QCURVE SMOOTH",
"50 691 OFFCURVE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 952 OFFCURVE",
"73 946 QCURVE SMOOTH",
"182 874 LINE SMOOTH",
"204 859 OFFCURVE",
"215 859 QCURVE SMOOTH",
"230 859 OFFCURVE",
"230 866 QCURVE SMOOTH",
"230 871 OFFCURVE",
"213 889 QCURVE SMOOTH",
"149 959 LINE SMOOTH",
"135 975 OFFCURVE",
"125 982 OFFCURVE",
"116 982 QCURVE SMOOTH",
"100 982 OFFCURVE",
"64 964 OFFCURVE",
"64 958 QCURVE SMOOTH"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"35 666 OFFCURVE",
"47 666 QCURVE SMOOTH",
"61 666 OFFCURVE",
"80 678 QCURVE SMOOTH",
"191 744 LINE",
"303 678 LINE SMOOTH",
"322 666 OFFCURVE",
"336 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH",
"347 678 OFFCURVE",
"331 695 OFFCURVE",
"319 706 QCURVE",
"289 736 OFFCURVE",
"271 756 QCURVE SMOOTH",
"248 780 LINE",
"224 804 LINE SMOOTH",
"207 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"176 822 OFFCURVE",
"158 804 QCURVE SMOOTH",
"134 780 LINE",
"111 756 LINE SMOOTH",
"93 736 OFFCURVE",
"63 706 QCURVE",
"51 695 OFFCURVE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 946 OFFCURVE",
"70 939 QCURVE SMOOTH",
"201 859 LINE SMOOTH",
"213 851 OFFCURVE",
"222 851 QCURVE SMOOTH",
"233 851 OFFCURVE",
"232 860 QCURVE SMOOTH",
"231 868 OFFCURVE",
"218 884 QCURVE SMOOTH",
"152 966 LINE SMOOTH",
"140 981 OFFCURVE",
"129 989 OFFCURVE",
"120 989 QCURVE SMOOTH",
"103 989 OFFCURVE",
"58 964 OFFCURVE",
"58 955 QCURVE SMOOTH"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflexhook;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 504 OFFCURVE",
"332 518 OFFCURVE",
"322 526 QCURVE SMOOTH",
"287 556 OFFCURVE",
"268 576 QCURVE SMOOTH",
"245 600 LINE",
"221 624 LINE",
"194 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"188 649 OFFCURVE",
"161 624 QCURVE",
"137 600 LINE",
"114 576 LINE SMOOTH",
"95 556 OFFCURVE",
"60 526 QCURVE SMOOTH",
"50 518 OFFCURVE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"72 505 QCURVE SMOOTH",
"191 579 LINE",
"310 505 LINE SMOOTH",
"329 493 OFFCURVE",
"338 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 817 OFFCURVE",
"188 817 QCURVE SMOOTH",
"206 817 OFFCURVE",
"226 802 OFFCURVE",
"226 786 QCURVE SMOOTH",
"226 758 OFFCURVE",
"181 739 QCURVE SMOOTH",
"167 733 OFFCURVE",
"167 721 QCURVE SMOOTH",
"167 706 OFFCURVE",
"176 673 QCURVE",
"205 673 LINE",
"204 701 OFFCURVE",
"204 709 QCURVE SMOOTH",
"204 718 OFFCURVE",
"217 727 OFFCURVE",
"231 730 QCURVE SMOOTH",
"255 735 OFFCURVE",
"278 763 OFFCURVE",
"278 787 QCURVE SMOOTH",
"278 814 OFFCURVE",
"238 843 OFFCURVE",
"210 843 QCURVE SMOOTH",
"176 843 OFFCURVE",
"153 833 QCURVE",
"156 811 LINE"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 505 OFFCURVE",
"331 522 OFFCURVE",
"319 533 QCURVE",
"289 563 OFFCURVE",
"271 583 QCURVE SMOOTH",
"248 607 LINE",
"224 631 LINE SMOOTH",
"206 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"175 649 OFFCURVE",
"158 631 QCURVE SMOOTH",
"134 607 LINE",
"111 583 LINE SMOOTH",
"93 563 OFFCURVE",
"63 533 QCURVE",
"51 522 OFFCURVE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"46 493 QCURVE SMOOTH",
"60 493 OFFCURVE",
"79 505 QCURVE SMOOTH",
"191 571 LINE",
"302 505 LINE SMOOTH",
"321 493 OFFCURVE",
"335 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 816 OFFCURVE",
"185 816 QCURVE SMOOTH",
"199 816 OFFCURVE",
"220 801 OFFCURVE",
"220 787 QCURVE SMOOTH",
"220 766 OFFCURVE",
"178 747 QCURVE SMOOTH",
"167 742 OFFCURVE",
"166 729 QCURVE SMOOTH",
"165 712 OFFCURVE",
"174 679 QCURVE",
"205 679 LINE",
"205 702 OFFCURVE",
"206 712 QCURVE SMOOTH",
"207 723 OFFCURVE",
"224 731 OFFCURVE",
"238 735 QCURVE SMOOTH",
"262 742 OFFCURVE",
"287 769 OFFCURVE",
"287 789 QCURVE SMOOTH",
"287 815 OFFCURVE",
"242 850 OFFCURVE",
"206 850 QCURVE SMOOTH",
"172 850 OFFCURVE",
"143 834 QCURVE",
"153 808 LINE"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflexhook.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 677 OFFCURVE",
"332 691 OFFCURVE",
"322 699 QCURVE SMOOTH",
"287 729 OFFCURVE",
"268 749 QCURVE SMOOTH",
"245 773 LINE",
"221 797 LINE",
"194 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"188 822 OFFCURVE",
"161 797 QCURVE",
"137 773 LINE",
"114 749 LINE SMOOTH",
"95 729 OFFCURVE",
"60 699 QCURVE SMOOTH",
"50 691 OFFCURVE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"72 678 QCURVE SMOOTH",
"191 752 LINE",
"310 678 LINE SMOOTH",
"329 666 OFFCURVE",
"338 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 990 OFFCURVE",
"188 990 QCURVE SMOOTH",
"206 990 OFFCURVE",
"226 975 OFFCURVE",
"226 959 QCURVE SMOOTH",
"226 931 OFFCURVE",
"181 912 QCURVE SMOOTH",
"167 906 OFFCURVE",
"167 894 QCURVE SMOOTH",
"167 879 OFFCURVE",
"176 846 QCURVE",
"205 846 LINE",
"204 874 OFFCURVE",
"204 882 QCURVE SMOOTH",
"204 891 OFFCURVE",
"217 900 OFFCURVE",
"231 903 QCURVE SMOOTH",
"255 908 OFFCURVE",
"278 936 OFFCURVE",
"278 960 QCURVE SMOOTH",
"278 987 OFFCURVE",
"238 1016 OFFCURVE",
"210 1016 QCURVE SMOOTH",
"176 1016 OFFCURVE",
"153 1006 QCURVE",
"156 984 LINE"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 678 OFFCURVE",
"331 695 OFFCURVE",
"319 706 QCURVE",
"289 736 OFFCURVE",
"271 756 QCURVE SMOOTH",
"248 780 LINE",
"224 804 LINE SMOOTH",
"206 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"175 822 OFFCURVE",
"158 804 QCURVE SMOOTH",
"134 780 LINE",
"111 756 LINE SMOOTH",
"93 736 OFFCURVE",
"63 706 QCURVE",
"51 695 OFFCURVE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"46 666 QCURVE SMOOTH",
"60 666 OFFCURVE",
"79 678 QCURVE SMOOTH",
"191 744 LINE",
"302 678 LINE SMOOTH",
"321 666 OFFCURVE",
"335 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 989 OFFCURVE",
"185 989 QCURVE SMOOTH",
"199 989 OFFCURVE",
"220 974 OFFCURVE",
"220 960 QCURVE SMOOTH",
"220 939 OFFCURVE",
"178 920 QCURVE SMOOTH",
"167 915 OFFCURVE",
"166 902 QCURVE SMOOTH",
"165 885 OFFCURVE",
"174 852 QCURVE",
"205 852 LINE",
"205 875 OFFCURVE",
"206 885 QCURVE SMOOTH",
"207 896 OFFCURVE",
"224 904 OFFCURVE",
"238 908 QCURVE SMOOTH",
"262 915 OFFCURVE",
"287 942 OFFCURVE",
"287 962 QCURVE SMOOTH",
"287 988 OFFCURVE",
"242 1023 OFFCURVE",
"206 1023 QCURVE SMOOTH",
"172 1023 OFFCURVE",
"143 1007 QCURVE",
"153 981 LINE"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflextilde;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 504 OFFCURVE",
"332 518 OFFCURVE",
"322 526 QCURVE SMOOTH",
"287 556 OFFCURVE",
"268 576 QCURVE SMOOTH",
"245 600 LINE",
"221 624 LINE",
"194 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"188 649 OFFCURVE",
"161 624 QCURVE",
"137 600 LINE",
"114 576 LINE SMOOTH",
"95 556 OFFCURVE",
"60 526 QCURVE SMOOTH",
"50 518 OFFCURVE",
"35 504 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"44 493 QCURVE SMOOTH",
"53 493 OFFCURVE",
"72 505 QCURVE SMOOTH",
"191 579 LINE",
"310 505 LINE SMOOTH",
"329 493 OFFCURVE",
"338 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"74 679 LINE",
"74 697 OFFCURVE",
"93 721 OFFCURVE",
"107 721 QCURVE SMOOTH",
"129 721 OFFCURVE",
"188 700 QCURVE SMOOTH",
"252 677 OFFCURVE",
"276 678 QCURVE SMOOTH",
"303 679 OFFCURVE",
"340 732 OFFCURVE",
"340 769 QCURVE",
"320 769 LINE",
"320 751 OFFCURVE",
"301 727 OFFCURVE",
"287 727 QCURVE SMOOTH",
"267 727 OFFCURVE",
"206 748 QCURVE SMOOTH",
"142 770 OFFCURVE",
"118 770 QCURVE SMOOTH",
"91 770 OFFCURVE",
"54 716 OFFCURVE",
"54 679 QCURVE"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 505 OFFCURVE",
"331 522 OFFCURVE",
"319 533 QCURVE",
"289 563 OFFCURVE",
"271 583 QCURVE SMOOTH",
"248 607 LINE",
"224 631 LINE SMOOTH",
"206 649 OFFCURVE",
"191 649 QCURVE SMOOTH",
"175 649 OFFCURVE",
"158 631 QCURVE SMOOTH",
"134 607 LINE",
"111 583 LINE SMOOTH",
"93 563 OFFCURVE",
"63 533 QCURVE",
"51 522 OFFCURVE",
"35 505 OFFCURVE",
"35 501 QCURVE SMOOTH",
"35 493 OFFCURVE",
"46 493 QCURVE SMOOTH",
"60 493 OFFCURVE",
"79 505 QCURVE SMOOTH",
"191 571 LINE",
"302 505 LINE SMOOTH",
"321 493 OFFCURVE",
"335 493 QCURVE SMOOTH",
"347 493 OFFCURVE",
"347 501 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 684 LINE",
"79 702 OFFCURVE",
"98 723 OFFCURVE",
"112 723 QCURVE SMOOTH",
"128 723 OFFCURVE",
"183 705 QCURVE SMOOTH",
"245 683 OFFCURVE",
"273 683 QCURVE SMOOTH",
"305 683 OFFCURVE",
"337 737 OFFCURVE",
"337 782 QCURVE",
"310 782 LINE",
"310 765 OFFCURVE",
"291 744 OFFCURVE",
"277 744 QCURVE SMOOTH",
"265 744 OFFCURVE",
"205 762 QCURVE SMOOTH",
"132 783 OFFCURVE",
"115 783 QCURVE SMOOTH",
"83 783 OFFCURVE",
"51 729 OFFCURVE",
"51 684 QCURVE"
);
}
);
width = 382;
}
);
},
{
glyphname = circumflextilde.case;
layers = (
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"347 677 OFFCURVE",
"332 691 OFFCURVE",
"322 699 QCURVE SMOOTH",
"287 729 OFFCURVE",
"268 749 QCURVE SMOOTH",
"245 773 LINE",
"221 797 LINE",
"194 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"188 822 OFFCURVE",
"161 797 QCURVE",
"137 773 LINE",
"114 749 LINE SMOOTH",
"95 729 OFFCURVE",
"60 699 QCURVE SMOOTH",
"50 691 OFFCURVE",
"35 677 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"44 666 QCURVE SMOOTH",
"53 666 OFFCURVE",
"72 678 QCURVE SMOOTH",
"191 752 LINE",
"310 678 LINE SMOOTH",
"329 666 OFFCURVE",
"338 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"74 852 LINE",
"74 870 OFFCURVE",
"93 894 OFFCURVE",
"107 894 QCURVE SMOOTH",
"129 894 OFFCURVE",
"188 873 QCURVE SMOOTH",
"252 850 OFFCURVE",
"276 851 QCURVE SMOOTH",
"303 852 OFFCURVE",
"340 905 OFFCURVE",
"340 942 QCURVE",
"320 942 LINE",
"320 924 OFFCURVE",
"301 900 OFFCURVE",
"287 900 QCURVE SMOOTH",
"267 900 OFFCURVE",
"206 921 QCURVE SMOOTH",
"142 943 OFFCURVE",
"118 943 QCURVE SMOOTH",
"91 943 OFFCURVE",
"54 889 OFFCURVE",
"54 852 QCURVE"
);
}
);
width = 382;
},
{
anchors = (
{
name = _top;
position = "{191, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"347 678 OFFCURVE",
"331 695 OFFCURVE",
"319 706 QCURVE",
"289 736 OFFCURVE",
"271 756 QCURVE SMOOTH",
"248 780 LINE",
"224 804 LINE SMOOTH",
"206 822 OFFCURVE",
"191 822 QCURVE SMOOTH",
"175 822 OFFCURVE",
"158 804 QCURVE SMOOTH",
"134 780 LINE",
"111 756 LINE SMOOTH",
"93 736 OFFCURVE",
"63 706 QCURVE",
"51 695 OFFCURVE",
"35 678 OFFCURVE",
"35 674 QCURVE SMOOTH",
"35 666 OFFCURVE",
"46 666 QCURVE SMOOTH",
"60 666 OFFCURVE",
"79 678 QCURVE SMOOTH",
"191 744 LINE",
"302 678 LINE SMOOTH",
"321 666 OFFCURVE",
"335 666 QCURVE SMOOTH",
"347 666 OFFCURVE",
"347 674 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 857 LINE",
"79 875 OFFCURVE",
"98 896 OFFCURVE",
"112 896 QCURVE SMOOTH",
"128 896 OFFCURVE",
"183 878 QCURVE SMOOTH",
"246 857 OFFCURVE",
"273 856 QCURVE SMOOTH",
"305 855 OFFCURVE",
"337 910 OFFCURVE",
"337 955 QCURVE",
"310 955 LINE",
"310 938 OFFCURVE",
"291 917 OFFCURVE",
"277 917 QCURVE SMOOTH",
"265 917 OFFCURVE",
"205 935 QCURVE SMOOTH",
"132 957 OFFCURVE",
"115 956 QCURVE SMOOTH",
"83 954 OFFCURVE",
"51 902 OFFCURVE",
"51 857 QCURVE"
);
}
);
width = 382;
}
);
},
{
glyphname = commaturnedabove;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"198 697 LINE",
"163 681 OFFCURVE",
"114 618 OFFCURVE",
"114 580 QCURVE SMOOTH",
"114 555 OFFCURVE",
"147 518 OFFCURVE",
"174 518 QCURVE SMOOTH",
"197 518 OFFCURVE",
"222 544 OFFCURVE",
"222 561 QCURVE SMOOTH",
"222 574 OFFCURVE",
"205 595 OFFCURVE",
"192 595 QCURVE SMOOTH",
"164 595 OFFCURVE",
"164 624 QCURVE SMOOTH",
"164 637 OFFCURVE",
"194 673 OFFCURVE",
"214 684 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"194 728 LINE",
"153 707 OFFCURVE",
"95 633 OFFCURVE",
"95 588 QCURVE SMOOTH",
"95 557 OFFCURVE",
"139 511 OFFCURVE",
"174 511 QCURVE SMOOTH",
"205 511 OFFCURVE",
"237 546 OFFCURVE",
"237 569 QCURVE SMOOTH",
"237 589 OFFCURVE",
"215 618 OFFCURVE",
"196 618 QCURVE SMOOTH",
"168 618 OFFCURVE",
"168 647 QCURVE SMOOTH",
"168 660 OFFCURVE",
"197 694 OFFCURVE",
"216 706 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = commabelow;
layers = (
{
anchors = (
{
name = _bottom;
position = "{70, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"44 -213 LINE",
"79 -197 OFFCURVE",
"128 -134 OFFCURVE",
"128 -96 QCURVE SMOOTH",
"128 -71 OFFCURVE",
"95 -34 OFFCURVE",
"68 -34 QCURVE SMOOTH",
"45 -34 OFFCURVE",
"20 -60 OFFCURVE",
"20 -77 QCURVE SMOOTH",
"20 -90 OFFCURVE",
"37 -111 OFFCURVE",
"50 -111 QCURVE SMOOTH",
"78 -111 OFFCURVE",
"78 -140 QCURVE SMOOTH",
"78 -153 OFFCURVE",
"48 -189 OFFCURVE",
"28 -200 QCURVE"
);
}
);
width = 148;
},
{
anchors = (
{
name = _bottom;
position = "{88, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 -251 LINE",
"104 -230 OFFCURVE",
"162 -156 OFFCURVE",
"162 -111 QCURVE SMOOTH",
"162 -80 OFFCURVE",
"118 -34 OFFCURVE",
"83 -34 QCURVE SMOOTH",
"52 -34 OFFCURVE",
"20 -69 OFFCURVE",
"20 -92 QCURVE SMOOTH",
"20 -112 OFFCURVE",
"42 -141 OFFCURVE",
"61 -141 QCURVE SMOOTH",
"89 -141 OFFCURVE",
"89 -170 QCURVE SMOOTH",
"89 -183 OFFCURVE",
"60 -217 OFFCURVE",
"41 -229 QCURVE"
);
}
);
width = 182;
}
);
},
{
glyphname = commabelowcomb;
layers = (
{
components = (
{
alignment = -1;
name = commabelow;
transform = "{1, 0, 0, 1, -148, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 0;
},
{
components = (
{
alignment = -1;
name = commabelow;
transform = "{1, 0, 0, 1, -182, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 0;
}
);
},
{
glyphname = commaabove;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"138 518 LINE",
"173 534 OFFCURVE",
"222 597 OFFCURVE",
"222 635 QCURVE SMOOTH",
"222 660 OFFCURVE",
"189 697 OFFCURVE",
"162 697 QCURVE SMOOTH",
"139 697 OFFCURVE",
"114 671 OFFCURVE",
"114 654 QCURVE SMOOTH",
"114 641 OFFCURVE",
"131 620 OFFCURVE",
"144 620 QCURVE SMOOTH",
"172 620 OFFCURVE",
"172 591 QCURVE SMOOTH",
"172 578 OFFCURVE",
"142 542 OFFCURVE",
"122 531 QCURVE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"138 511 LINE",
"179 532 OFFCURVE",
"237 606 OFFCURVE",
"237 651 QCURVE SMOOTH",
"237 682 OFFCURVE",
"193 728 OFFCURVE",
"158 728 QCURVE SMOOTH",
"127 728 OFFCURVE",
"95 693 OFFCURVE",
"95 670 QCURVE SMOOTH",
"95 650 OFFCURVE",
"117 621 OFFCURVE",
"136 621 QCURVE SMOOTH",
"164 621 OFFCURVE",
"164 592 QCURVE SMOOTH",
"164 579 OFFCURVE",
"135 545 OFFCURVE",
"116 533 QCURVE"
);
}
);
width = 341;
}
);
},
{
glyphname = dblgrave;
layers = (
{
anchors = (
{
name = _top;
position = "{228, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"224 640 OFFCURVE",
"220 644 QCURVE",
"216 649 OFFCURVE",
"211 653 OFFCURVE",
"207 653 QCURVE SMOOTH",
"202 653 OFFCURVE",
"173 644 OFFCURVE",
"164 640 QCURVE SMOOTH",
"155 636 OFFCURVE",
"155 628 QCURVE SMOOTH",
"155 624 OFFCURVE",
"161 616 QCURVE",
"171 605 OFFCURVE",
"279 499 QCURVE SMOOTH",
"285 493 OFFCURVE",
"294 493 QCURVE SMOOTH",
"303 493 OFFCURVE",
"303 501 QCURVE SMOOTH",
"303 504 OFFCURVE",
"300 510 QCURVE",
"283 538 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 640 OFFCURVE",
"100 644 QCURVE",
"96 649 OFFCURVE",
"91 653 OFFCURVE",
"87 653 QCURVE SMOOTH",
"82 653 OFFCURVE",
"53 644 OFFCURVE",
"44 640 QCURVE SMOOTH",
"35 636 OFFCURVE",
"35 628 QCURVE SMOOTH",
"35 624 OFFCURVE",
"41 616 QCURVE",
"159 499 LINE SMOOTH",
"165 493 OFFCURVE",
"174 493 QCURVE SMOOTH",
"183 493 OFFCURVE",
"183 501 QCURVE SMOOTH",
"183 504 OFFCURVE",
"180 510 QCURVE",
"163 538 LINE SMOOTH"
);
}
);
width = 338;
},
{
anchors = (
{
name = _top;
position = "{250, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"246 640 OFFCURVE",
"243 644 QCURVE SMOOTH",
"239 649 OFFCURVE",
"234 653 OFFCURVE",
"230 653 QCURVE SMOOTH",
"223 653 OFFCURVE",
"184 641 OFFCURVE",
"172 637 QCURVE",
"163 633 OFFCURVE",
"163 625 QCURVE SMOOTH",
"163 621 OFFCURVE",
"169 613 QCURVE",
"177 604 OFFCURVE",
"284 504 QCURVE SMOOTH",
"297 492 OFFCURVE",
"308 492 QCURVE SMOOTH",
"313 492 OFFCURVE",
"319 501 QCURVE SMOOTH",
"319 506 OFFCURVE",
"316 512 QCURVE SMOOTH",
"294 553 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 643 OFFCURVE",
"116 644 QCURVE",
"112 649 OFFCURVE",
"107 653 OFFCURVE",
"103 653 QCURVE SMOOTH",
"96 653 OFFCURVE",
"56 641 OFFCURVE",
"44 637 QCURVE",
"35 633 OFFCURVE",
"35 625 QCURVE SMOOTH",
"35 621 OFFCURVE",
"41 613 QCURVE",
"157 504 LINE SMOOTH",
"170 492 OFFCURVE",
"181 492 QCURVE SMOOTH",
"186 492 OFFCURVE",
"191 501 QCURVE SMOOTH",
"191 506 OFFCURVE",
"188 512 QCURVE SMOOTH",
"151 581 LINE SMOOTH"
);
}
);
width = 354;
}
);
},
{
glyphname = dblgrave.case;
layers = (
{
anchors = (
{
name = _top;
position = "{226, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"222 812 OFFCURVE",
"220 817 QCURVE",
"216 822 OFFCURVE",
"211 826 OFFCURVE",
"207 826 QCURVE SMOOTH",
"202 826 OFFCURVE",
"173 817 OFFCURVE",
"164 813 QCURVE SMOOTH",
"155 809 OFFCURVE",
"155 801 QCURVE SMOOTH",
"155 797 OFFCURVE",
"161 789 QCURVE",
"172 779 OFFCURVE",
"279 672 QCURVE SMOOTH",
"285 666 OFFCURVE",
"294 666 QCURVE SMOOTH",
"303 666 OFFCURVE",
"303 674 QCURVE SMOOTH",
"303 677 OFFCURVE",
"300 683 QCURVE",
"283 711 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"102 812 OFFCURVE",
"100 817 QCURVE",
"96 822 OFFCURVE",
"91 826 OFFCURVE",
"87 826 QCURVE SMOOTH",
"82 826 OFFCURVE",
"53 817 OFFCURVE",
"44 813 QCURVE SMOOTH",
"35 809 OFFCURVE",
"35 801 QCURVE SMOOTH",
"35 797 OFFCURVE",
"41 789 QCURVE",
"159 672 LINE SMOOTH",
"165 666 OFFCURVE",
"174 666 QCURVE SMOOTH",
"183 666 OFFCURVE",
"183 674 QCURVE SMOOTH",
"183 677 OFFCURVE",
"180 683 QCURVE",
"163 711 LINE SMOOTH"
);
}
);
width = 338;
},
{
anchors = (
{
name = _top;
position = "{249, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"246 813 OFFCURVE",
"243 817 QCURVE SMOOTH",
"239 822 OFFCURVE",
"234 826 OFFCURVE",
"230 826 QCURVE SMOOTH",
"223 826 OFFCURVE",
"184 814 OFFCURVE",
"172 810 QCURVE",
"163 806 OFFCURVE",
"163 798 QCURVE SMOOTH",
"163 794 OFFCURVE",
"169 786 QCURVE",
"177 777 OFFCURVE",
"284 677 QCURVE SMOOTH",
"297 665 OFFCURVE",
"308 665 QCURVE SMOOTH",
"319 665 OFFCURVE",
"319 674 QCURVE SMOOTH",
"319 678 OFFCURVE",
"316 685 QCURVE SMOOTH",
"294 726 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 816 OFFCURVE",
"116 817 QCURVE",
"112 822 OFFCURVE",
"107 826 OFFCURVE",
"103 826 QCURVE SMOOTH",
"96 826 OFFCURVE",
"56 814 OFFCURVE",
"44 810 QCURVE",
"35 806 OFFCURVE",
"35 798 QCURVE SMOOTH",
"35 794 OFFCURVE",
"41 786 QCURVE",
"157 677 LINE SMOOTH",
"170 665 OFFCURVE",
"181 665 QCURVE SMOOTH",
"191 665 OFFCURVE",
"191 674 QCURVE SMOOTH",
"191 679 OFFCURVE",
"188 685 QCURVE SMOOTH",
"151 754 LINE SMOOTH"
);
}
);
width = 354;
}
);
},
{
glyphname = dieresisacute;
layers = (
{
anchors = (
{
name = _top;
position = "{187, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH",
"143 616 OFFCURVE",
"111 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"66 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 574 OFFCURVE",
"260 547 OFFCURVE",
"284 547 QCURVE SMOOTH",
"308 547 OFFCURVE",
"338 574 OFFCURVE",
"338 595 QCURVE SMOOTH",
"338 616 OFFCURVE",
"306 644 OFFCURVE",
"284 644 QCURVE SMOOTH",
"261 644 OFFCURVE",
"230 616 OFFCURVE",
"230 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 774 OFFCURVE",
"295 792 OFFCURVE",
"279 792 QCURVE SMOOTH",
"270 792 OFFCURVE",
"260 785 OFFCURVE",
"246 769 QCURVE SMOOTH",
"182 699 LINE SMOOTH",
"165 681 OFFCURVE",
"165 676 QCURVE SMOOTH",
"165 669 OFFCURVE",
"180 669 QCURVE SMOOTH",
"191 669 OFFCURVE",
"213 684 QCURVE SMOOTH",
"322 756 LINE SMOOTH",
"331 762 OFFCURVE",
"331 768 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{212, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 566 OFFCURVE",
"70 532 OFFCURVE",
"104 532 QCURVE SMOOTH",
"138 532 OFFCURVE",
"181 566 OFFCURVE",
"181 595 QCURVE SMOOTH",
"181 623 OFFCURVE",
"137 658 OFFCURVE",
"104 658 QCURVE SMOOTH",
"70 658 OFFCURVE",
"27 623 OFFCURVE",
"27 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 566 OFFCURVE",
"281 532 OFFCURVE",
"315 532 QCURVE SMOOTH",
"349 532 OFFCURVE",
"392 566 OFFCURVE",
"392 595 QCURVE SMOOTH",
"392 623 OFFCURVE",
"348 658 OFFCURVE",
"315 658 QCURVE SMOOTH",
"281 658 OFFCURVE",
"238 623 OFFCURVE",
"238 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"360 795 OFFCURVE",
"315 820 OFFCURVE",
"298 820 QCURVE SMOOTH",
"289 820 OFFCURVE",
"278 812 OFFCURVE",
"266 797 QCURVE SMOOTH",
"200 715 LINE SMOOTH",
"187 699 OFFCURVE",
"186 691 QCURVE SMOOTH",
"185 682 OFFCURVE",
"196 682 QCURVE SMOOTH",
"205 682 OFFCURVE",
"217 690 QCURVE SMOOTH",
"348 770 LINE SMOOTH",
"360 777 OFFCURVE",
"360 786 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresisacute.case;
layers = (
{
anchors = (
{
name = _top;
position = "{183, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH",
"143 765 OFFCURVE",
"111 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"66 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 723 OFFCURVE",
"260 696 OFFCURVE",
"284 696 QCURVE SMOOTH",
"308 696 OFFCURVE",
"338 723 OFFCURVE",
"338 744 QCURVE SMOOTH",
"338 765 OFFCURVE",
"306 793 OFFCURVE",
"284 793 QCURVE SMOOTH",
"261 793 OFFCURVE",
"230 765 OFFCURVE",
"230 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 923 OFFCURVE",
"295 941 OFFCURVE",
"279 941 QCURVE SMOOTH",
"270 941 OFFCURVE",
"260 934 OFFCURVE",
"246 918 QCURVE SMOOTH",
"182 848 LINE SMOOTH",
"165 830 OFFCURVE",
"165 825 QCURVE SMOOTH",
"165 818 OFFCURVE",
"180 818 QCURVE SMOOTH",
"191 818 OFFCURVE",
"213 833 QCURVE SMOOTH",
"322 905 LINE SMOOTH",
"331 911 OFFCURVE",
"331 917 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{211, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 715 OFFCURVE",
"70 681 OFFCURVE",
"104 681 QCURVE SMOOTH",
"138 681 OFFCURVE",
"181 715 OFFCURVE",
"181 744 QCURVE SMOOTH",
"181 772 OFFCURVE",
"137 807 OFFCURVE",
"104 807 QCURVE SMOOTH",
"70 807 OFFCURVE",
"27 772 OFFCURVE",
"27 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 715 OFFCURVE",
"281 681 OFFCURVE",
"315 681 QCURVE SMOOTH",
"349 681 OFFCURVE",
"392 715 OFFCURVE",
"392 744 QCURVE SMOOTH",
"392 772 OFFCURVE",
"348 807 OFFCURVE",
"315 807 QCURVE SMOOTH",
"281 807 OFFCURVE",
"238 772 OFFCURVE",
"238 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"360 944 OFFCURVE",
"315 969 OFFCURVE",
"298 969 QCURVE SMOOTH",
"289 969 OFFCURVE",
"278 961 OFFCURVE",
"266 946 QCURVE SMOOTH",
"200 864 LINE SMOOTH",
"187 848 OFFCURVE",
"186 840 QCURVE SMOOTH",
"185 831 OFFCURVE",
"196 831 QCURVE SMOOTH",
"205 831 OFFCURVE",
"217 839 QCURVE SMOOTH",
"348 919 LINE SMOOTH",
"360 926 OFFCURVE",
"360 935 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresiscaron;
layers = (
{
anchors = (
{
name = _top;
position = "{187, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH",
"143 616 OFFCURVE",
"111 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"66 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 574 OFFCURVE",
"260 547 OFFCURVE",
"284 547 QCURVE SMOOTH",
"308 547 OFFCURVE",
"338 574 OFFCURVE",
"338 595 QCURVE SMOOTH",
"338 616 OFFCURVE",
"306 644 OFFCURVE",
"284 644 QCURVE SMOOTH",
"261 644 OFFCURVE",
"230 616 OFFCURVE",
"230 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"44.746 785.941 OFFCURVE",
"58.351 773.243 OFFCURVE",
"67.422 765.986 QCURVE SMOOTH",
"99.168 738.776 OFFCURVE",
"116.401 720.635 QCURVE SMOOTH",
"137.263 698.866 LINE",
"159.032 677.098 LINE",
"183.522 654.422 OFFCURVE",
"186.243 654.422 QCURVE SMOOTH",
"188.964 654.422 OFFCURVE",
"213.454 677.098 QCURVE",
"235.222 698.866 LINE",
"256.084 720.635 LINE SMOOTH",
"273.317 738.776 OFFCURVE",
"305.063 765.986 QCURVE SMOOTH",
"314.134 773.243 OFFCURVE",
"327.739 785.941 OFFCURVE",
"327.739 788.662 QCURVE SMOOTH",
"327.739 795.918 OFFCURVE",
"319.576 795.918 QCURVE SMOOTH",
"311.413 795.918 OFFCURVE",
"294.179 785.034 QCURVE SMOOTH",
"186.243 717.914 LINE",
"78.306 785.034 LINE SMOOTH",
"61.073 795.918 OFFCURVE",
"52.909 795.918 QCURVE SMOOTH",
"44.746 795.918 OFFCURVE",
"44.746 788.662 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{212, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 566 OFFCURVE",
"70 532 OFFCURVE",
"104 532 QCURVE SMOOTH",
"138 532 OFFCURVE",
"181 566 OFFCURVE",
"181 595 QCURVE SMOOTH",
"181 623 OFFCURVE",
"137 658 OFFCURVE",
"104 658 QCURVE SMOOTH",
"70 658 OFFCURVE",
"27 623 OFFCURVE",
"27 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 566 OFFCURVE",
"281 532 OFFCURVE",
"315 532 QCURVE SMOOTH",
"349 532 OFFCURVE",
"392 566 OFFCURVE",
"392 595 QCURVE SMOOTH",
"392 623 OFFCURVE",
"348 658 OFFCURVE",
"315 658 QCURVE SMOOTH",
"281 658 OFFCURVE",
"238 623 OFFCURVE",
"238 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69.746 800.034 OFFCURVE",
"84.259 784.615 OFFCURVE",
"95.143 774.637 QCURVE",
"122.354 747.426 OFFCURVE",
"138.68 729.286 QCURVE SMOOTH",
"159.542 707.517 LINE",
"181.311 685.748 LINE SMOOTH",
"197.637 669.422 OFFCURVE",
"211.243 669.422 QCURVE SMOOTH",
"226.662 669.422 OFFCURVE",
"241.175 685.748 QCURVE",
"262.943 707.517 LINE",
"283.805 729.286 LINE SMOOTH",
"300.132 747.426 OFFCURVE",
"327.342 774.637 QCURVE",
"338.227 784.615 OFFCURVE",
"352.739 800.034 OFFCURVE",
"352.739 803.662 QCURVE SMOOTH",
"352.739 810.918 OFFCURVE",
"342.762 810.918 QCURVE SMOOTH",
"330.063 810.918 OFFCURVE",
"312.83 800.034 QCURVE SMOOTH",
"211.243 740.17 LINE",
"110.562 800.034 LINE SMOOTH",
"93.329 810.918 OFFCURVE",
"80.63 810.918 QCURVE SMOOTH",
"69.746 810.918 OFFCURVE",
"69.746 803.662 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresiscaron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{183, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH",
"143 765 OFFCURVE",
"111 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"66 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 723 OFFCURVE",
"260 696 OFFCURVE",
"284 696 QCURVE SMOOTH",
"308 696 OFFCURVE",
"338 723 OFFCURVE",
"338 744 QCURVE SMOOTH",
"338 765 OFFCURVE",
"306 793 OFFCURVE",
"284 793 QCURVE SMOOTH",
"261 793 OFFCURVE",
"230 765 OFFCURVE",
"230 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 935 OFFCURVE",
"58 922 OFFCURVE",
"67 915 QCURVE SMOOTH",
"99 888 OFFCURVE",
"116 870 QCURVE SMOOTH",
"137 848 LINE",
"159 826 LINE",
"184 803 OFFCURVE",
"186 803 QCURVE SMOOTH",
"189 803 OFFCURVE",
"213 826 QCURVE",
"235 848 LINE",
"256 870 LINE SMOOTH",
"272 889 OFFCURVE",
"305 915 QCURVE SMOOTH",
"314 922 OFFCURVE",
"328 935 OFFCURVE",
"328 938 QCURVE SMOOTH",
"328 945 OFFCURVE",
"320 945 QCURVE SMOOTH",
"311 945 OFFCURVE",
"294 934 QCURVE SMOOTH",
"186 867 LINE",
"78 934 LINE SMOOTH",
"61 945 OFFCURVE",
"53 945 QCURVE SMOOTH",
"45 945 OFFCURVE",
"45 938 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{211, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 715 OFFCURVE",
"70 681 OFFCURVE",
"104 681 QCURVE SMOOTH",
"138 681 OFFCURVE",
"181 715 OFFCURVE",
"181 744 QCURVE SMOOTH",
"181 772 OFFCURVE",
"137 807 OFFCURVE",
"104 807 QCURVE SMOOTH",
"70 807 OFFCURVE",
"27 772 OFFCURVE",
"27 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 715 OFFCURVE",
"281 681 OFFCURVE",
"315 681 QCURVE SMOOTH",
"349 681 OFFCURVE",
"392 715 OFFCURVE",
"392 744 QCURVE SMOOTH",
"392 772 OFFCURVE",
"348 807 OFFCURVE",
"315 807 QCURVE SMOOTH",
"281 807 OFFCURVE",
"238 772 OFFCURVE",
"238 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"70 949 OFFCURVE",
"84 934 OFFCURVE",
"95 924 QCURVE",
"121 896 OFFCURVE",
"139 878 QCURVE SMOOTH",
"160 857 LINE",
"181 835 LINE SMOOTH",
"198 818 OFFCURVE",
"211 818 QCURVE SMOOTH",
"227 818 OFFCURVE",
"241 835 QCURVE",
"263 857 LINE",
"284 878 LINE SMOOTH",
"301 895 OFFCURVE",
"327 924 QCURVE",
"338 934 OFFCURVE",
"353 949 OFFCURVE",
"353 953 QCURVE SMOOTH",
"353 960 OFFCURVE",
"343 960 QCURVE SMOOTH",
"330 959 OFFCURVE",
"313 949 QCURVE SMOOTH",
"211 889 LINE",
"111 949 LINE SMOOTH",
"93 960 OFFCURVE",
"81 960 QCURVE SMOOTH",
"70 960 OFFCURVE",
"70 953 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresisbelow;
layers = (
{
anchors = (
{
name = _bottom;
position = "{171, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"20 -148 OFFCURVE",
"50 -175 OFFCURVE",
"74 -175 QCURVE SMOOTH",
"98 -175 OFFCURVE",
"128 -148 OFFCURVE",
"128 -127 QCURVE SMOOTH",
"128 -106 OFFCURVE",
"96 -78 OFFCURVE",
"74 -78 QCURVE SMOOTH",
"51 -78 OFFCURVE",
"20 -106 OFFCURVE",
"20 -127 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 -148 OFFCURVE",
"245 -175 OFFCURVE",
"269 -175 QCURVE SMOOTH",
"293 -175 OFFCURVE",
"323 -148 OFFCURVE",
"323 -127 QCURVE SMOOTH",
"323 -106 OFFCURVE",
"291 -78 OFFCURVE",
"269 -78 QCURVE SMOOTH",
"246 -78 OFFCURVE",
"215 -106 OFFCURVE",
"215 -127 QCURVE SMOOTH"
);
}
);
width = 343;
},
{
anchors = (
{
name = _bottom;
position = "{202, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"20 -164 OFFCURVE",
"63 -198 OFFCURVE",
"97 -198 QCURVE SMOOTH",
"131 -198 OFFCURVE",
"174 -164 OFFCURVE",
"174 -135 QCURVE SMOOTH",
"174 -107 OFFCURVE",
"130 -72 OFFCURVE",
"97 -72 QCURVE SMOOTH",
"63 -72 OFFCURVE",
"20 -107 OFFCURVE",
"20 -135 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"231 -164 OFFCURVE",
"274 -198 OFFCURVE",
"308 -198 QCURVE SMOOTH",
"342 -198 OFFCURVE",
"385 -164 OFFCURVE",
"385 -135 QCURVE SMOOTH",
"385 -107 OFFCURVE",
"341 -72 OFFCURVE",
"308 -72 QCURVE SMOOTH",
"274 -72 OFFCURVE",
"231 -107 OFFCURVE",
"231 -135 QCURVE SMOOTH"
);
}
);
width = 405;
}
);
},
{
glyphname = dieresisgrave;
layers = (
{
anchors = (
{
name = _top;
position = "{186, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"338 616 OFFCURVE",
"307 644 OFFCURVE",
"284 644 QCURVE SMOOTH",
"262 644 OFFCURVE",
"230 616 OFFCURVE",
"230 595 QCURVE SMOOTH",
"230 574 OFFCURVE",
"260 547 OFFCURVE",
"284 547 QCURVE SMOOTH",
"308 547 OFFCURVE",
"338 574 OFFCURVE",
"338 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 616 OFFCURVE",
"112 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"67 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH",
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 762 OFFCURVE",
"51 756 QCURVE SMOOTH",
"160 684 LINE SMOOTH",
"182 669 OFFCURVE",
"193 669 QCURVE SMOOTH",
"208 669 OFFCURVE",
"208 676 QCURVE SMOOTH",
"208 681 OFFCURVE",
"191 699 QCURVE SMOOTH",
"127 769 LINE SMOOTH",
"113 785 OFFCURVE",
"103 792 OFFCURVE",
"94 792 QCURVE SMOOTH",
"78 792 OFFCURVE",
"42 774 OFFCURVE",
"42 768 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{208, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"393 623 OFFCURVE",
"350 658 OFFCURVE",
"316 658 QCURVE SMOOTH",
"283 658 OFFCURVE",
"239 623 OFFCURVE",
"239 595 QCURVE SMOOTH",
"239 566 OFFCURVE",
"282 532 OFFCURVE",
"316 532 QCURVE SMOOTH",
"350 532 OFFCURVE",
"393 566 OFFCURVE",
"393 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"182 623 OFFCURVE",
"139 658 OFFCURVE",
"105 658 QCURVE SMOOTH",
"72 658 OFFCURVE",
"28 623 OFFCURVE",
"28 595 QCURVE SMOOTH",
"28 566 OFFCURVE",
"71 532 OFFCURVE",
"105 532 QCURVE SMOOTH",
"139 532 OFFCURVE",
"182 566 OFFCURVE",
"182 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 777 OFFCURVE",
"72 770 QCURVE SMOOTH",
"203 690 LINE SMOOTH",
"215 682 OFFCURVE",
"224 682 QCURVE SMOOTH",
"235 682 OFFCURVE",
"234 691 QCURVE SMOOTH",
"233 699 OFFCURVE",
"220 715 QCURVE SMOOTH",
"154 797 LINE SMOOTH",
"142 812 OFFCURVE",
"131 820 OFFCURVE",
"122 820 QCURVE SMOOTH",
"105 820 OFFCURVE",
"60 795 OFFCURVE",
"60 786 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresisgrave.case;
layers = (
{
anchors = (
{
name = _top;
position = "{190, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"338 765 OFFCURVE",
"307 793 OFFCURVE",
"284 793 QCURVE SMOOTH",
"262 793 OFFCURVE",
"230 765 OFFCURVE",
"230 744 QCURVE SMOOTH",
"230 723 OFFCURVE",
"260 696 OFFCURVE",
"284 696 QCURVE SMOOTH",
"308 696 OFFCURVE",
"338 723 OFFCURVE",
"338 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 765 OFFCURVE",
"112 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"67 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH",
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 911 OFFCURVE",
"51 905 QCURVE SMOOTH",
"160 833 LINE SMOOTH",
"182 818 OFFCURVE",
"193 818 QCURVE SMOOTH",
"208 818 OFFCURVE",
"208 825 QCURVE SMOOTH",
"208 830 OFFCURVE",
"191 848 QCURVE SMOOTH",
"127 918 LINE SMOOTH",
"113 934 OFFCURVE",
"103 941 OFFCURVE",
"94 941 QCURVE SMOOTH",
"78 941 OFFCURVE",
"42 923 OFFCURVE",
"42 917 QCURVE SMOOTH"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{209, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"393 772 OFFCURVE",
"350 807 OFFCURVE",
"316 807 QCURVE SMOOTH",
"283 807 OFFCURVE",
"239 772 OFFCURVE",
"239 744 QCURVE SMOOTH",
"239 715 OFFCURVE",
"282 681 OFFCURVE",
"316 681 QCURVE SMOOTH",
"350 681 OFFCURVE",
"393 715 OFFCURVE",
"393 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"182 772 OFFCURVE",
"139 807 OFFCURVE",
"105 807 QCURVE SMOOTH",
"72 807 OFFCURVE",
"28 772 OFFCURVE",
"28 744 QCURVE SMOOTH",
"28 715 OFFCURVE",
"71 681 OFFCURVE",
"105 681 QCURVE SMOOTH",
"139 681 OFFCURVE",
"182 715 OFFCURVE",
"182 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 926 OFFCURVE",
"72 919 QCURVE SMOOTH",
"203 839 LINE SMOOTH",
"215 831 OFFCURVE",
"224 831 QCURVE SMOOTH",
"235 831 OFFCURVE",
"234 840 QCURVE SMOOTH",
"233 848 OFFCURVE",
"220 864 QCURVE SMOOTH",
"154 946 LINE SMOOTH",
"142 961 OFFCURVE",
"131 969 OFFCURVE",
"122 969 QCURVE SMOOTH",
"105 969 OFFCURVE",
"60 944 OFFCURVE",
"60 935 QCURVE SMOOTH"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresismacron;
layers = (
{
anchors = (
{
name = _top;
position = "{187, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 574 OFFCURVE",
"65 547 OFFCURVE",
"89 547 QCURVE SMOOTH",
"113 547 OFFCURVE",
"143 574 OFFCURVE",
"143 595 QCURVE SMOOTH",
"143 616 OFFCURVE",
"111 644 OFFCURVE",
"89 644 QCURVE SMOOTH",
"66 644 OFFCURVE",
"35 616 OFFCURVE",
"35 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 574 OFFCURVE",
"260 547 OFFCURVE",
"284 547 QCURVE SMOOTH",
"308 547 OFFCURVE",
"338 574 OFFCURVE",
"338 595 QCURVE SMOOTH",
"338 616 OFFCURVE",
"306 644 OFFCURVE",
"284 644 QCURVE SMOOTH",
"261 644 OFFCURVE",
"230 616 OFFCURVE",
"230 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 702 LINE",
"317 742 LINE",
"58 742 LINE",
"58 702 LINE"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{212, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 566 OFFCURVE",
"70 532 OFFCURVE",
"104 532 QCURVE SMOOTH",
"138 532 OFFCURVE",
"181 566 OFFCURVE",
"181 595 QCURVE SMOOTH",
"181 623 OFFCURVE",
"137 658 OFFCURVE",
"104 658 QCURVE SMOOTH",
"70 658 OFFCURVE",
"27 623 OFFCURVE",
"27 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 566 OFFCURVE",
"281 532 OFFCURVE",
"315 532 QCURVE SMOOTH",
"349 532 OFFCURVE",
"392 566 OFFCURVE",
"392 595 QCURVE SMOOTH",
"392 623 OFFCURVE",
"348 658 OFFCURVE",
"315 658 QCURVE SMOOTH",
"281 658 OFFCURVE",
"238 623 OFFCURVE",
"238 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"362 706 LINE",
"362 753 LINE",
"63 753 LINE",
"63 706 LINE"
);
}
);
width = 420;
}
);
},
{
glyphname = dieresismacron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{183, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 723 OFFCURVE",
"65 696 OFFCURVE",
"89 696 QCURVE SMOOTH",
"113 696 OFFCURVE",
"143 723 OFFCURVE",
"143 744 QCURVE SMOOTH",
"143 765 OFFCURVE",
"111 793 OFFCURVE",
"89 793 QCURVE SMOOTH",
"66 793 OFFCURVE",
"35 765 OFFCURVE",
"35 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 723 OFFCURVE",
"260 696 OFFCURVE",
"284 696 QCURVE SMOOTH",
"308 696 OFFCURVE",
"338 723 OFFCURVE",
"338 744 QCURVE SMOOTH",
"338 765 OFFCURVE",
"306 793 OFFCURVE",
"284 793 QCURVE SMOOTH",
"261 793 OFFCURVE",
"230 765 OFFCURVE",
"230 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 851 LINE",
"317 891 LINE",
"58 891 LINE",
"58 851 LINE"
);
}
);
width = 373;
},
{
anchors = (
{
name = _top;
position = "{211, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"27 715 OFFCURVE",
"70 681 OFFCURVE",
"104 681 QCURVE SMOOTH",
"138 681 OFFCURVE",
"181 715 OFFCURVE",
"181 744 QCURVE SMOOTH",
"181 772 OFFCURVE",
"137 807 OFFCURVE",
"104 807 QCURVE SMOOTH",
"70 807 OFFCURVE",
"27 772 OFFCURVE",
"27 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 715 OFFCURVE",
"281 681 OFFCURVE",
"315 681 QCURVE SMOOTH",
"349 681 OFFCURVE",
"392 715 OFFCURVE",
"392 744 QCURVE SMOOTH",
"392 772 OFFCURVE",
"348 807 OFFCURVE",
"315 807 QCURVE SMOOTH",
"281 807 OFFCURVE",
"238 772 OFFCURVE",
"238 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"362 855 LINE",
"362 902 LINE",
"63 902 LINE",
"63 855 LINE"
);
}
);
width = 420;
}
);
},
{
glyphname = dotaccentmacron;
layers = (
{
anchors = (
{
name = _top;
position = "{138, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"84 574 OFFCURVE",
"114 547 OFFCURVE",
"138 547 QCURVE SMOOTH",
"162 547 OFFCURVE",
"192 574 OFFCURVE",
"192 595 QCURVE SMOOTH",
"192 616 OFFCURVE",
"160 644 OFFCURVE",
"138 644 QCURVE SMOOTH",
"115 644 OFFCURVE",
"84 616 OFFCURVE",
"84 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 689 LINE",
"259 729 LINE",
"20 729 LINE",
"20 689 LINE"
);
}
);
width = 279;
},
{
anchors = (
{
name = _top;
position = "{140, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 566 OFFCURVE",
"106 532 OFFCURVE",
"140 532 QCURVE SMOOTH",
"174 532 OFFCURVE",
"217 566 OFFCURVE",
"217 595 QCURVE SMOOTH",
"217 623 OFFCURVE",
"173 658 OFFCURVE",
"140 658 QCURVE SMOOTH",
"106 658 OFFCURVE",
"63 623 OFFCURVE",
"63 595 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 703 LINE",
"259 750 LINE",
"20 750 LINE",
"20 703 LINE"
);
}
);
width = 279;
}
);
},
{
glyphname = dotaccentmacron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{138, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"84 723 OFFCURVE",
"114 696 OFFCURVE",
"138 696 QCURVE SMOOTH",
"162 696 OFFCURVE",
"192 723 OFFCURVE",
"192 744 QCURVE SMOOTH",
"192 765 OFFCURVE",
"160 793 OFFCURVE",
"138 793 QCURVE SMOOTH",
"115 793 OFFCURVE",
"84 765 OFFCURVE",
"84 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 838 LINE",
"259 878 LINE",
"20 878 LINE",
"20 838 LINE"
);
}
);
width = 279;
},
{
anchors = (
{
name = _top;
position = "{121, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"44 715 OFFCURVE",
"87 681 OFFCURVE",
"121 681 QCURVE SMOOTH",
"155 681 OFFCURVE",
"198 715 OFFCURVE",
"198 744 QCURVE SMOOTH",
"198 772 OFFCURVE",
"154 807 OFFCURVE",
"121 807 QCURVE SMOOTH",
"87 807 OFFCURVE",
"44 772 OFFCURVE",
"44 744 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 852 LINE",
"240 899 LINE",
"1 899 LINE",
"1 852 LINE"
);
}
);
width = 242;
}
);
},
{
glyphname = dotbelow;
layers = (
{
anchors = (
{
name = _bottom;
position = "{171, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"118 -148 OFFCURVE",
"148 -175 OFFCURVE",
"172 -175 QCURVE SMOOTH",
"196 -175 OFFCURVE",
"226 -148 OFFCURVE",
"226 -127 QCURVE SMOOTH",
"226 -106 OFFCURVE",
"194 -78 OFFCURVE",
"172 -78 QCURVE SMOOTH",
"149 -78 OFFCURVE",
"118 -106 OFFCURVE",
"118 -127 QCURVE SMOOTH"
);
}
);
width = 343;
},
{
anchors = (
{
name = _bottom;
position = "{202, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"125 -164 OFFCURVE",
"168 -198 OFFCURVE",
"202 -198 QCURVE SMOOTH",
"236 -198 OFFCURVE",
"279 -164 OFFCURVE",
"279 -135 QCURVE SMOOTH",
"279 -107 OFFCURVE",
"235 -72 OFFCURVE",
"202 -72 QCURVE SMOOTH",
"168 -72 OFFCURVE",
"125 -107 OFFCURVE",
"125 -135 QCURVE SMOOTH"
);
}
);
width = 405;
}
);
},
{
glyphname = horn;
layers = (
{
anchors = (
{
name = _topright;
position = "{-54, 420}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"40 371 LINE",
"114 371 OFFCURVE",
"151 415 OFFCURVE",
"145 491 CURVE SMOOTH",
"142 520 OFFCURVE",
"119 534 OFFCURVE",
"96 534 CURVE SMOOTH",
"73 534 OFFCURVE",
"50 519 OFFCURVE",
"50 493 CURVE SMOOTH",
"50 450 OFFCURVE",
"94 472 OFFCURVE",
"94 435 CURVE SMOOTH",
"94 419 OFFCURVE",
"82 398 OFFCURVE",
"30 398 CURVE"
);
}
);
};
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"40 371 LINE",
"146 373 OFFCURVE",
"146 481 QCURVE SMOOTH",
"146 504 OFFCURVE",
"119 534 OFFCURVE",
"96 534 QCURVE SMOOTH",
"77 534 OFFCURVE",
"50 511 OFFCURVE",
"50 490 QCURVE SMOOTH",
"50 469 OFFCURVE",
"94 455 OFFCURVE",
"94 438 QCURVE SMOOTH",
"94 398 OFFCURVE",
"30 398 QCURVE"
);
}
);
width = 176;
},
{
anchors = (
{
name = _topright;
position = "{-54, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"36 372 LINE",
"163 374 OFFCURVE",
"163 493 QCURVE SMOOTH",
"163 518 OFFCURVE",
"133 551 OFFCURVE",
"108 551 QCURVE SMOOTH",
"87 551 OFFCURVE",
"57 526 OFFCURVE",
"57 503 QCURVE SMOOTH",
"57 480 OFFCURVE",
"96 464 OFFCURVE",
"96 446 QCURVE SMOOTH",
"96 402 OFFCURVE",
"25 402 QCURVE"
);
}
);
width = 197;
}
);
},
{
glyphname = horn.case;
layers = (
{
anchors = (
{
name = _topright;
position = "{-54, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"76 543 LINE",
"190 545 OFFCURVE",
"190 656 QCURVE SMOOTH",
"190 679 OFFCURVE",
"162 709 OFFCURVE",
"139 709 QCURVE SMOOTH",
"120 709 OFFCURVE",
"93 686 OFFCURVE",
"93 665 QCURVE SMOOTH",
"93 644 OFFCURVE",
"135 630 OFFCURVE",
"135 613 QCURVE SMOOTH",
"135 573 OFFCURVE",
"66 573 QCURVE"
);
}
);
width = 228;
},
{
anchors = (
{
name = _topright;
position = "{-54, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"75 534 LINE",
"219 536 OFFCURVE",
"219 667 QCURVE SMOOTH",
"219 694 OFFCURVE",
"187 729 OFFCURVE",
"160 729 QCURVE SMOOTH",
"138 729 OFFCURVE",
"105 703 OFFCURVE",
"105 678 QCURVE SMOOTH",
"105 653 OFFCURVE",
"144 636 OFFCURVE",
"144 617 QCURVE SMOOTH",
"144 573 OFFCURVE",
"63 573 QCURVE"
);
}
);
width = 239;
}
);
},
{
glyphname = hook;
layers = (
{
anchors = (
{
name = _top;
position = "{98, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"72 620 OFFCURVE",
"93 620 QCURVE SMOOTH",
"112 620 OFFCURVE",
"130 607 OFFCURVE",
"130 590 QCURVE SMOOTH",
"130 562 OFFCURVE",
"85 538 QCURVE SMOOTH",
"70 530 OFFCURVE",
"70 516 QCURVE SMOOTH",
"70 499 OFFCURVE",
"79 463 QCURVE",
"105 463 LINE",
"105 489 OFFCURVE",
"105 498 QCURVE SMOOTH",
"105 508 OFFCURVE",
"123 518 OFFCURVE",
"138 524 QCURVE SMOOTH",
"165 534 OFFCURVE",
"195 565 OFFCURVE",
"195 593 QCURVE SMOOTH",
"195 620 OFFCURVE",
"152 653 OFFCURVE",
"117 653 QCURVE SMOOTH",
"79 653 OFFCURVE",
"54 642 QCURVE",
"57 615 LINE"
);
}
);
width = 218;
},
{
anchors = (
{
name = _top;
position = "{83, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"60 618 OFFCURVE",
"80 618 QCURVE SMOOTH",
"96 618 OFFCURVE",
"114 601 OFFCURVE",
"114 585 QCURVE SMOOTH",
"114 560 OFFCURVE",
"73 541 QCURVE SMOOTH",
"61 536 OFFCURVE",
"59 522 QCURVE SMOOTH",
"56 503 OFFCURVE",
"68 466 QCURVE",
"98 466 LINE",
"98 492 OFFCURVE",
"99 503 QCURVE SMOOTH",
"100 515 OFFCURVE",
"124 524 OFFCURVE",
"139 528 QCURVE SMOOTH",
"165 535 OFFCURVE",
"197 567 OFFCURVE",
"197 592 QCURVE SMOOTH",
"197 624 OFFCURVE",
"149 659 OFFCURVE",
"106 659 QCURVE SMOOTH",
"70 659 OFFCURVE",
"34 639 QCURVE",
"45 612 LINE"
);
}
);
width = 203;
}
);
},
{
glyphname = hook.case;
layers = (
{
anchors = (
{
name = _top;
position = "{98, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"74 796 OFFCURVE",
"95 796 QCURVE SMOOTH",
"114 796 OFFCURVE",
"132 783 OFFCURVE",
"132 766 QCURVE SMOOTH",
"132 738 OFFCURVE",
"87 714 QCURVE SMOOTH",
"72 706 OFFCURVE",
"72 692 QCURVE SMOOTH",
"72 675 OFFCURVE",
"81 639 QCURVE",
"107 639 LINE",
"107 665 OFFCURVE",
"107 674 QCURVE SMOOTH",
"107 684 OFFCURVE",
"125 694 OFFCURVE",
"140 700 QCURVE SMOOTH",
"167 711 OFFCURVE",
"197 741 OFFCURVE",
"197 769 QCURVE SMOOTH",
"197 796 OFFCURVE",
"154 829 OFFCURVE",
"119 829 QCURVE SMOOTH",
"81 829 OFFCURVE",
"56 818 QCURVE",
"59 791 LINE"
);
}
);
width = 218;
},
{
anchors = (
{
name = _top;
position = "{83, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"56 788 OFFCURVE",
"76 788 QCURVE SMOOTH",
"92 788 OFFCURVE",
"110 771 OFFCURVE",
"110 755 QCURVE SMOOTH",
"110 728 OFFCURVE",
"69 711 QCURVE SMOOTH",
"57 706 OFFCURVE",
"55 692 QCURVE SMOOTH",
"52 673 OFFCURVE",
"64 636 QCURVE",
"94 636 LINE",
"94 662 OFFCURVE",
"95 673 QCURVE SMOOTH",
"96 685 OFFCURVE",
"120 694 OFFCURVE",
"135 698 QCURVE SMOOTH",
"161 705 OFFCURVE",
"193 737 OFFCURVE",
"193 762 QCURVE SMOOTH",
"193 794 OFFCURVE",
"145 829 OFFCURVE",
"102 829 QCURVE SMOOTH",
"66 829 OFFCURVE",
"30 809 QCURVE",
"41 782 LINE"
);
}
);
width = 203;
}
);
},
{
glyphname = macronbelow;
layers = (
{
anchors = (
{
name = _bottom;
position = "{170, 0}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"290 -150 LINE",
"290 -110 LINE",
"51 -110 LINE",
"51 -150 LINE"
);
}
);
width = 341;
},
{
anchors = (
{
name = _bottom;
position = "{170, 0}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"289 -150 LINE",
"289 -103 LINE",
"50 -103 LINE",
"50 -150 LINE"
);
}
);
width = 341;
}
);
},
{
glyphname = ringacute;
layers = (
{
anchors = (
{
name = _top;
position = "{118, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 541 OFFCURVE",
"84 493 OFFCURVE",
"118 493 QCURVE SMOOTH",
"153 493 OFFCURVE",
"202 541 OFFCURVE",
"202 575 QCURVE SMOOTH",
"202 609 OFFCURVE",
"153 656 OFFCURVE",
"118 656 QCURVE SMOOTH",
"83 656 OFFCURVE",
"35 609 OFFCURVE",
"35 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 595 OFFCURVE",
"99 620 OFFCURVE",
"118 620 QCURVE SMOOTH",
"137 620 OFFCURVE",
"160 595 OFFCURVE",
"160 575 QCURVE SMOOTH",
"160 554 OFFCURVE",
"137 529 OFFCURVE",
"118 529 QCURVE SMOOTH",
"99 529 OFFCURVE",
"77 554 OFFCURVE",
"77 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"250 796 OFFCURVE",
"214 814 OFFCURVE",
"198 814 QCURVE SMOOTH",
"189 814 OFFCURVE",
"179 807 OFFCURVE",
"165 791 QCURVE SMOOTH",
"101 721 LINE SMOOTH",
"84 703 OFFCURVE",
"84 698 QCURVE SMOOTH",
"84 691 OFFCURVE",
"99 691 QCURVE SMOOTH",
"110 691 OFFCURVE",
"132 706 QCURVE SMOOTH",
"241 778 LINE SMOOTH",
"250 784 OFFCURVE",
"250 790 QCURVE SMOOTH"
);
}
);
width = 237;
},
{
anchors = (
{
name = _top;
position = "{118, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"31 539 OFFCURVE",
"80 492 OFFCURVE",
"118 492 QCURVE SMOOTH",
"156 492 OFFCURVE",
"206 539 OFFCURVE",
"206 575 QCURVE SMOOTH",
"206 611 OFFCURVE",
"156 658 OFFCURVE",
"118 658 QCURVE SMOOTH",
"81 658 OFFCURVE",
"31 610 OFFCURVE",
"31 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 594 OFFCURVE",
"101 616 OFFCURVE",
"118 616 QCURVE SMOOTH",
"135 616 OFFCURVE",
"156 594 OFFCURVE",
"156 575 QCURVE SMOOTH",
"156 556 OFFCURVE",
"135 533 OFFCURVE",
"118 533 QCURVE SMOOTH",
"101 533 OFFCURVE",
"81 555 OFFCURVE",
"81 575 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 795 OFFCURVE",
"204 820 OFFCURVE",
"187 820 QCURVE SMOOTH",
"178 820 OFFCURVE",
"167 812 OFFCURVE",
"155 797 QCURVE SMOOTH",
"89 715 LINE SMOOTH",
"76 699 OFFCURVE",
"75 691 QCURVE SMOOTH",
"74 682 OFFCURVE",
"85 682 QCURVE SMOOTH",
"94 682 OFFCURVE",
"106 690 QCURVE SMOOTH",
"237 770 LINE SMOOTH",
"249 777 OFFCURVE",
"249 786 QCURVE SMOOTH"
);
}
);
width = 237;
}
);
},
{
glyphname = ringacute.case;
layers = (
{
anchors = (
{
name = _top;
position = "{118, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"35 714 OFFCURVE",
"84 666 OFFCURVE",
"118 666 QCURVE SMOOTH",
"153 666 OFFCURVE",
"202 714 OFFCURVE",
"202 748 QCURVE SMOOTH",
"202 782 OFFCURVE",
"153 829 OFFCURVE",
"118 829 QCURVE SMOOTH",
"83 829 OFFCURVE",
"35 782 OFFCURVE",
"35 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 768 OFFCURVE",
"99 793 OFFCURVE",
"118 793 QCURVE SMOOTH",
"137 793 OFFCURVE",
"160 768 OFFCURVE",
"160 748 QCURVE SMOOTH",
"160 727 OFFCURVE",
"137 702 OFFCURVE",
"118 702 QCURVE SMOOTH",
"99 702 OFFCURVE",
"77 727 OFFCURVE",
"77 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"250 969 OFFCURVE",
"214 987 OFFCURVE",
"198 987 QCURVE SMOOTH",
"189 987 OFFCURVE",
"179 980 OFFCURVE",
"165 964 QCURVE SMOOTH",
"101 894 LINE SMOOTH",
"84 876 OFFCURVE",
"84 871 QCURVE SMOOTH",
"84 864 OFFCURVE",
"99 864 QCURVE SMOOTH",
"110 864 OFFCURVE",
"132 879 QCURVE SMOOTH",
"241 951 LINE SMOOTH",
"250 957 OFFCURVE",
"250 963 QCURVE SMOOTH"
);
}
);
width = 237;
},
{
anchors = (
{
name = _top;
position = "{118, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"31 712 OFFCURVE",
"80 665 OFFCURVE",
"118 665 QCURVE SMOOTH",
"156 665 OFFCURVE",
"206 712 OFFCURVE",
"206 748 QCURVE SMOOTH",
"206 784 OFFCURVE",
"156 831 OFFCURVE",
"118 831 QCURVE SMOOTH",
"81 831 OFFCURVE",
"31 783 OFFCURVE",
"31 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 767 OFFCURVE",
"101 789 OFFCURVE",
"118 789 QCURVE SMOOTH",
"135 789 OFFCURVE",
"156 767 OFFCURVE",
"156 748 QCURVE SMOOTH",
"156 729 OFFCURVE",
"135 706 OFFCURVE",
"118 706 QCURVE SMOOTH",
"101 706 OFFCURVE",
"81 728 OFFCURVE",
"81 748 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 968 OFFCURVE",
"204 993 OFFCURVE",
"187 993 QCURVE SMOOTH",
"178 993 OFFCURVE",
"167 985 OFFCURVE",
"155 970 QCURVE SMOOTH",
"89 888 LINE SMOOTH",
"76 872 OFFCURVE",
"75 864 QCURVE SMOOTH",
"74 855 OFFCURVE",
"85 855 QCURVE SMOOTH",
"94 855 OFFCURVE",
"106 863 QCURVE SMOOTH",
"237 943 LINE SMOOTH",
"249 950 OFFCURVE",
"249 959 QCURVE SMOOTH"
);
}
);
width = 237;
}
);
},
{
glyphname = tildemacron;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 420}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 530 LINE",
"55 548 OFFCURVE",
"74 572 OFFCURVE",
"88 572 QCURVE SMOOTH",
"110 572 OFFCURVE",
"169 551 QCURVE SMOOTH",
"233 529 OFFCURVE",
"257 529 QCURVE SMOOTH",
"284 529 OFFCURVE",
"321 583 OFFCURVE",
"321 620 QCURVE",
"301 620 LINE",
"301 602 OFFCURVE",
"282 578 OFFCURVE",
"268 578 QCURVE SMOOTH",
"248 578 OFFCURVE",
"187 599 QCURVE SMOOTH",
"123 621 OFFCURVE",
"99 621 QCURVE SMOOTH",
"72 621 OFFCURVE",
"35 567 OFFCURVE",
"35 530 QCURVE"
);
},
{
closed = 1;
nodes = (
"295 674 LINE",
"295 714 LINE",
"56 714 LINE",
"56 674 LINE"
);
}
);
width = 356;
},
{
anchors = (
{
name = _top;
position = "{170, 425}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 526 LINE",
"63 544 OFFCURVE",
"82 565 OFFCURVE",
"96 565 QCURVE SMOOTH",
"112 565 OFFCURVE",
"167 547 QCURVE SMOOTH",
"229 525 OFFCURVE",
"257 525 QCURVE SMOOTH",
"289 525 OFFCURVE",
"321 579 OFFCURVE",
"321 624 QCURVE",
"294 624 LINE",
"294 607 OFFCURVE",
"275 586 OFFCURVE",
"261 586 QCURVE SMOOTH",
"249 586 OFFCURVE",
"189 604 QCURVE SMOOTH",
"116 625 OFFCURVE",
"99 625 QCURVE SMOOTH",
"67 625 OFFCURVE",
"35 571 OFFCURVE",
"35 526 QCURVE"
);
},
{
closed = 1;
nodes = (
"297 680 LINE",
"297 727 LINE",
"58 727 LINE",
"58 680 LINE"
);
}
);
width = 356;
}
);
},
{
glyphname = tildemacron.case;
layers = (
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
paths = (
{
closed = 1;
nodes = (
"55 676 LINE",
"55 694 OFFCURVE",
"74 718 OFFCURVE",
"88 718 QCURVE SMOOTH",
"110 718 OFFCURVE",
"169 697 QCURVE SMOOTH",
"233 675 OFFCURVE",
"257 675 QCURVE SMOOTH",
"284 675 OFFCURVE",
"321 729 OFFCURVE",
"321 766 QCURVE",
"301 766 LINE",
"301 748 OFFCURVE",
"282 724 OFFCURVE",
"268 724 QCURVE SMOOTH",
"248 724 OFFCURVE",
"187 745 QCURVE SMOOTH",
"123 767 OFFCURVE",
"99 767 QCURVE SMOOTH",
"72 767 OFFCURVE",
"35 713 OFFCURVE",
"35 676 QCURVE"
);
},
{
closed = 1;
nodes = (
"295 820 LINE",
"295 860 LINE",
"56 860 LINE",
"56 820 LINE"
);
}
);
width = 356;
},
{
anchors = (
{
name = _top;
position = "{170, 597}";
}
);
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
paths = (
{
closed = 1;
nodes = (
"63 672 LINE",
"63 690 OFFCURVE",
"82 711 OFFCURVE",
"96 711 QCURVE SMOOTH",
"112 711 OFFCURVE",
"167 693 QCURVE SMOOTH",
"229 671 OFFCURVE",
"257 671 QCURVE SMOOTH",
"289 671 OFFCURVE",
"321 725 OFFCURVE",
"321 770 QCURVE",
"294 770 LINE",
"294 753 OFFCURVE",
"275 732 OFFCURVE",
"261 732 QCURVE SMOOTH",
"249 732 OFFCURVE",
"189 750 QCURVE SMOOTH",
"116 771 OFFCURVE",
"99 771 QCURVE SMOOTH",
"67 771 OFFCURVE",
"35 717 OFFCURVE",
"35 672 QCURVE"
);
},
{
closed = 1;
nodes = (
"297 826 LINE",
"297 873 LINE",
"58 873 LINE",
"58 826 LINE"
);
}
);
width = 356;
}
);
},
{
glyphname = NULL;
layers = (
{
layerId = "3A4136D0-3900-4A7F-B896-13EBFCDD931C";
width = 600;
},
{
layerId = "A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A";
width = 600;
}
);
}
);
instances = (
{
interpolationWeight = 66;
instanceInterpolations = {
"3A4136D0-3900-4A7F-B896-13EBFCDD931C" = 1.44444;
"A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A" = -0.44444;
};
name = Light;
weightClass = Light;
},
{
interpolationWeight = 86;
interpolationWidth = 5;
instanceInterpolations = {
"3A4136D0-3900-4A7F-B896-13EBFCDD931C" = 1;
};
name = Regular;
},
{
interpolationWeight = 106;
instanceInterpolations = {
"3A4136D0-3900-4A7F-B896-13EBFCDD931C" = 0.55556;
"A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A" = 0.44444;
};
name = Medium;
weightClass = Medium;
},
{
interpolationWeight = 131;
interpolationWidth = 5;
instanceInterpolations = {
"A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A" = 1;
};
isBold = 1;
name = Bold;
weightClass = Bold;
}
);
kerning = {
"3A4136D0-3900-4A7F-B896-13EBFCDD931C" = {
"@MMK_L_A" = {
"@MMK_R_C" = -29;
"@MMK_R_T" = -56;
"@MMK_R_V" = -85;
"@MMK_R_Y" = -59;
"@MMK_R_c" = -13;
"@MMK_R_emdash" = -20;
"@MMK_R_quoteright" = -36;
"@MMK_R_v" = -35;
"@MMK_R_y" = -35;
};
"@MMK_L_B" = {
"@MMK_R_A" = -15;
};
"@MMK_L_D" = {
"@MMK_R_A" = -33;
"@MMK_R_T" = -15;
"@MMK_R_V" = -28;
"@MMK_R_Y" = -20;
"@MMK_R_comma" = -29;
"@MMK_R_ellipsis" = -29;
"@MMK_R_period" = -29;
"@MMK_R_quotedblbase" = -29;
"@MMK_R_quotesinglbase" = -29;
};
"@MMK_L_F" = {
"@MMK_R_A" = -78;
"@MMK_R_a" = -50;
"@MMK_R_c" = -50;
"@MMK_R_dotlessi" = -40;
"@MMK_R_g" = -60;
"@MMK_R_s" = -50;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
};
"@MMK_L_J" = {
"@MMK_R_A" = -43;
"@MMK_R_C" = -16;
"@MMK_R_c" = -28;
"@MMK_R_dotlessi" = -20;
"@MMK_R_g" = -30;
"@MMK_R_s" = -30;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -23;
};
"@MMK_L_K" = {
"@MMK_R_C" = -48;
"@MMK_R_U" = -32;
"@MMK_R_c" = -20;
"@MMK_R_v" = -63;
};
"@MMK_L_L" = {
"@MMK_R_T" = -61;
"@MMK_R_V" = -87;
"@MMK_R_Y" = -75;
"@MMK_R_comma" = 30;
"@MMK_R_quoteright" = -56;
"@MMK_R_v" = -19;
"@MMK_R_y" = -27;
};
"@MMK_L_P" = {
"@MMK_R_A" = -87;
"@MMK_R_V" = -35;
"@MMK_R_a" = -20;
"@MMK_R_c" = -25;
"@MMK_R_dotlessi" = -17;
"@MMK_R_g" = -35;
"@MMK_R_s" = -25;
};
"@MMK_L_R" = {
"@MMK_R_T" = -31;
"@MMK_R_V" = -57;
"@MMK_R_Y" = -50;
"@MMK_R_y" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -56;
"@MMK_R_C" = -9;
"@MMK_R_V" = 15;
"@MMK_R_Y" = 15;
"@MMK_R_a" = -45;
"@MMK_R_c" = -45;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -35;
"@MMK_R_emdash" = -39;
"@MMK_R_g" = -50;
"@MMK_R_i" = -15;
"@MMK_R_s" = -55;
"@MMK_R_u" = -44;
"@MMK_R_v" = -44;
"@MMK_R_x" = -44;
"@MMK_R_y" = -44;
};
"@MMK_L_U" = {
"@MMK_R_comma" = -29;
};
"@MMK_L_V" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -27;
"@MMK_R_T" = 17;
"@MMK_R_Y" = 24;
"@MMK_R_a" = -70;
"@MMK_R_c" = -45;
"@MMK_R_colon" = -27;
"@MMK_R_comma" = -68;
"@MMK_R_dotlessi" = -50;
"@MMK_R_ellipsis" = -59;
"@MMK_R_emdash" = -36;
"@MMK_R_endash" = -27;
"@MMK_R_g" = -70;
"@MMK_R_period" = -59;
"@MMK_R_quotedblbase" = -59;
"@MMK_R_quotesinglbase" = -59;
"@MMK_R_s" = -63;
"@MMK_R_t" = -30;
"@MMK_R_u" = -25;
"@MMK_R_v" = -25;
"@MMK_R_x" = -42;
"@MMK_R_y" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -45;
"@MMK_R_T" = 17;
"@MMK_R_V" = 15;
"@MMK_R_a" = -45;
"@MMK_R_c" = -45;
"@MMK_R_colon" = -36;
"@MMK_R_comma" = -54;
"@MMK_R_dotlessi" = -42;
"@MMK_R_emdash" = -50;
"@MMK_R_g" = -50;
"@MMK_R_s" = -60;
"@MMK_R_t" = -30;
"@MMK_R_u" = -34;
"@MMK_R_v" = -25;
"@MMK_R_x" = -20;
"@MMK_R_y" = -40;
};
"@MMK_L_a" = {
"@MMK_R_v" = -12;
};
"@MMK_L_ae" = {
"@MMK_R_v" = -10;
};
"@MMK_L_b" = {
"@MMK_R_v" = -10;
};
"@MMK_L_c" = {
"@MMK_R_v" = -10;
};
"@MMK_L_e" = {
"@MMK_R_v" = -10;
};
"@MMK_L_eth" = {
"@MMK_R_v" = -10;
};
"@MMK_L_f" = {
"@MMK_R_V" = 87;
"@MMK_R_v" = 25;
};
"@MMK_L_k" = {
"@MMK_R_c" = -29;
};
"@MMK_L_o" = {
"@MMK_R_v" = -10;
"@MMK_R_y" = -15;
};
"@MMK_L_oe" = {
"@MMK_R_v" = -10;
};
"@MMK_L_r" = {
"@MMK_R_c" = -9;
"@MMK_R_comma" = -36;
"@MMK_R_ellipsis" = -36;
"@MMK_R_emdash" = -9;
"@MMK_R_endash" = -9;
"@MMK_R_g" = -9;
"@MMK_R_h" = -9;
"@MMK_R_period" = -36;
"@MMK_R_quotedblbase" = -36;
"@MMK_R_quoteright" = 36;
"@MMK_R_quotesinglbase" = -36;
};
"@MMK_L_v" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -28;
"@MMK_R_comma" = -54;
"@MMK_R_ellipsis" = -45;
"@MMK_R_emdash" = -30;
"@MMK_R_g" = -15;
"@MMK_R_period" = -45;
"@MMK_R_quotedblbase" = -45;
"@MMK_R_quotesinglbase" = -45;
};
D = {
A = -52;
AE = -39;
Aacute = -52;
Abreve = -52;
Acircumflex = -52;
Adieresis = -52;
Agrave = -52;
Amacron = -52;
Aogonek = -52;
Aring = -52;
Atilde = -52;
};
Dcaron = {
AE = -39;
};
Dcroat = {
AE = -39;
};
Eth = {
AE = -39;
};
F = {
AE = -130;
comma = -45;
ellipsis = -78;
emdash = -20;
endash = -20;
f = -20;
period = -78;
quotedblbase = -78;
quotesinglbase = -78;
x = -30;
};
H = {
J = 1;
};
J = {
AE = -49;
comma = -30;
emdash = -20;
x = -29;
};
K = {
emdash = -30;
};
O = {
AE = -39;
};
Oacute = {
AE = -39;
};
Ocircumflex = {
AE = -39;
};
Odieresis = {
AE = -39;
};
Ograve = {
AE = -39;
};
Ohungarumlaut = {
AE = -39;
};
Omacron = {
AE = -39;
};
Otilde = {
AE = -39;
};
P = {
comma = -63;
emdash = -30;
};
Q = {
AE = -39;
comma = -24;
ellipsis = -24;
period = -24;
quotedblbase = -24;
quotesinglbase = -24;
};
R = {
comma = 34;
};
V = {
AE = -132;
y = -25;
yacute = -25;
ycircumflex = -25;
ydieresis = -25;
ygrave = -25;
};
W = {
A = -45;
AE = -132;
Aacute = -45;
Abreve = -45;
Acircumflex = -45;
Adieresis = -45;
Agrave = -45;
Amacron = -45;
Aogonek = -45;
Aring = -45;
Atilde = -45;
colon = -9;
comma = -59;
emdash = -27;
};
Wacute = {
AE = -132;
};
Wcircumflex = {
AE = -132;
};
Wdieresis = {
AE = -132;
};
Wgrave = {
AE = -132;
};
X = {
comma = 29;
ellipsis = 29;
emdash = -30;
endash = -30;
period = 29;
quotedblbase = 29;
quotesinglbase = 29;
};
Z = {
comma = 29;
ellipsis = 29;
period = 29;
quotedblbase = 29;
quotesinglbase = 29;
};
dcaron = {
thorn = 30;
};
f = {
b = 75;
f = -9;
i = 50;
j = 50;
quoteright = 27;
};
k = {
emdash = -63;
};
quoteleft = {
quoteleft = -18;
};
quoteright = {
quoteright = -18;
};
w = {
comma = -45;
};
x = {
emdash = -29;
endash = -29;
};
y = {
c = -20;
cacute = -20;
ccaron = -20;
ccedilla = -20;
d = -20;
dcaron = -20;
dcroat = -20;
e = -20;
eacute = -20;
ecaron = -20;
ecircumflex = -20;
edieresis = -20;
edotaccent = -20;
egrave = -20;
emacron = -20;
eogonek = -20;
eth = -20;
o = -20;
oacute = -20;
ocircumflex = -20;
odieresis = -20;
oe = -20;
ograve = -20;
ohungarumlaut = -20;
omacron = -20;
oslash = -20;
otilde = -20;
q = -20;
};
};
"A0AC7266-FF1C-4B13-9E61-C3CFB2289D5A" = {
"@MMK_L_A" = {
"@MMK_R_C" = -29;
"@MMK_R_T" = -56;
"@MMK_R_V" = -85;
"@MMK_R_Y" = -59;
"@MMK_R_c" = -13;
"@MMK_R_emdash" = -20;
"@MMK_R_quoteright" = -36;
"@MMK_R_v" = -35;
"@MMK_R_y" = -35;
};
"@MMK_L_B" = {
"@MMK_R_A" = -15;
};
"@MMK_L_D" = {
"@MMK_R_A" = -33;
"@MMK_R_T" = -15;
"@MMK_R_V" = -28;
"@MMK_R_Y" = -20;
"@MMK_R_comma" = -29;
"@MMK_R_ellipsis" = -29;
"@MMK_R_period" = -29;
"@MMK_R_quotedblbase" = -29;
"@MMK_R_quotesinglbase" = -29;
};
"@MMK_L_F" = {
"@MMK_R_A" = -78;
"@MMK_R_a" = -50;
"@MMK_R_c" = -50;
"@MMK_R_dotlessi" = -40;
"@MMK_R_g" = -60;
"@MMK_R_s" = -50;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
"@MMK_R_y" = -20;
};
"@MMK_L_J" = {
"@MMK_R_A" = -43;
"@MMK_R_C" = -16;
"@MMK_R_c" = -28;
"@MMK_R_dotlessi" = -20;
"@MMK_R_g" = -30;
"@MMK_R_s" = -30;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_v" = -23;
};
"@MMK_L_K" = {
"@MMK_R_C" = -48;
"@MMK_R_U" = -32;
"@MMK_R_c" = -20;
"@MMK_R_v" = -63;
};
"@MMK_L_L" = {
"@MMK_R_T" = -61;
"@MMK_R_V" = -87;
"@MMK_R_Y" = -75;
"@MMK_R_comma" = 30;
"@MMK_R_quoteright" = -41;
"@MMK_R_v" = -19;
"@MMK_R_y" = -27;
};
"@MMK_L_P" = {
"@MMK_R_A" = -87;
"@MMK_R_V" = -35;
"@MMK_R_a" = -20;
"@MMK_R_c" = -25;
"@MMK_R_dotlessi" = -17;
"@MMK_R_g" = -31;
"@MMK_R_s" = -21;
};
"@MMK_L_R" = {
"@MMK_R_T" = -31;
"@MMK_R_V" = -57;
"@MMK_R_Y" = -50;
"@MMK_R_y" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -56;
"@MMK_R_C" = -9;
"@MMK_R_V" = 15;
"@MMK_R_Y" = 15;
"@MMK_R_a" = -45;
"@MMK_R_c" = -45;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -35;
"@MMK_R_emdash" = -39;
"@MMK_R_g" = -50;
"@MMK_R_i" = -15;
"@MMK_R_s" = -55;
"@MMK_R_u" = -44;
"@MMK_R_v" = -44;
"@MMK_R_x" = -44;
"@MMK_R_y" = -44;
};
"@MMK_L_U" = {
"@MMK_R_comma" = -29;
};
"@MMK_L_V" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -27;
"@MMK_R_T" = 17;
"@MMK_R_Y" = 24;
"@MMK_R_a" = -70;
"@MMK_R_c" = -64;
"@MMK_R_colon" = -27;
"@MMK_R_comma" = -68;
"@MMK_R_dotlessi" = -50;
"@MMK_R_ellipsis" = -59;
"@MMK_R_emdash" = -36;
"@MMK_R_endash" = -27;
"@MMK_R_g" = -70;
"@MMK_R_period" = -59;
"@MMK_R_quotedblbase" = -59;
"@MMK_R_quotesinglbase" = -59;
"@MMK_R_s" = -63;
"@MMK_R_t" = -30;
"@MMK_R_u" = -44;
"@MMK_R_v" = -25;
"@MMK_R_x" = -42;
"@MMK_R_y" = -24;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -45;
"@MMK_R_T" = 17;
"@MMK_R_V" = 15;
"@MMK_R_a" = -45;
"@MMK_R_c" = -45;
"@MMK_R_colon" = -36;
"@MMK_R_comma" = -54;
"@MMK_R_dotlessi" = -42;
"@MMK_R_emdash" = -50;
"@MMK_R_g" = -65;
"@MMK_R_s" = -60;
"@MMK_R_t" = -30;
"@MMK_R_u" = -34;
"@MMK_R_v" = -25;
"@MMK_R_x" = -20;
"@MMK_R_y" = -40;
};
"@MMK_L_a" = {
"@MMK_R_v" = -12;
};
"@MMK_L_ae" = {
"@MMK_R_v" = -10;
};
"@MMK_L_b" = {
"@MMK_R_v" = -10;
};
"@MMK_L_c" = {
"@MMK_R_v" = -10;
};
"@MMK_L_e" = {
"@MMK_R_v" = -10;
};
"@MMK_L_eth" = {
"@MMK_R_v" = -10;
};
"@MMK_L_f" = {
"@MMK_R_V" = 87;
"@MMK_R_v" = 25;
};
"@MMK_L_k" = {
"@MMK_R_c" = -29;
};
"@MMK_L_o" = {
"@MMK_R_v" = -10;
"@MMK_R_y" = -15;
};
"@MMK_L_oe" = {
"@MMK_R_v" = -10;
};
"@MMK_L_r" = {
"@MMK_R_c" = -9;
"@MMK_R_comma" = -36;
"@MMK_R_ellipsis" = -36;
"@MMK_R_emdash" = -9;
"@MMK_R_endash" = -9;
"@MMK_R_g" = -9;
"@MMK_R_h" = -9;
"@MMK_R_period" = -36;
"@MMK_R_quotedblbase" = -36;
"@MMK_R_quoteright" = 36;
"@MMK_R_quotesinglbase" = -36;
};
"@MMK_L_v" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -28;
"@MMK_R_comma" = -54;
"@MMK_R_ellipsis" = -45;
"@MMK_R_emdash" = -30;
"@MMK_R_g" = -15;
"@MMK_R_period" = -45;
"@MMK_R_quotedblbase" = -45;
"@MMK_R_quotesinglbase" = -45;
};
D = {
A = -52;
AE = -39;
Aacute = -52;
Abreve = -52;
Acircumflex = -52;
Adieresis = -52;
Agrave = -52;
Amacron = -52;
Aogonek = -52;
Aring = -52;
Atilde = -52;
};
Dcaron = {
AE = -39;
};
Dcroat = {
AE = -39;
};
Eth = {
AE = -39;
};
F = {
AE = -130;
adieresis = -35;
comma = -45;
ellipsis = -78;
emdash = -20;
endash = -20;
f = -13;
period = -78;
quotedblbase = -78;
quotesinglbase = -78;
x = -30;
};
H = {
J = 1;
};
J = {
AE = -49;
comma = -30;
emdash = -20;
x = -29;
};
K = {
emdash = -30;
};
O = {
AE = -39;
};
Oacute = {
AE = -39;
};
Ocircumflex = {
AE = -39;
};
Odieresis = {
AE = -39;
};
Ograve = {
AE = -39;
};
Ohungarumlaut = {
AE = -39;
};
Omacron = {
AE = -39;
};
Otilde = {
AE = -39;
};
P = {
comma = -63;
emdash = -30;
};
Q = {
AE = -39;
comma = -24;
ellipsis = -24;
period = -24;
quotedblbase = -24;
quotesinglbase = -24;
};
R = {
comma = 34;
};
V = {
AE = -132;
y = -25;
yacute = -25;
ycircumflex = -25;
ydieresis = -25;
ygrave = -25;
};
W = {
A = -45;
AE = -132;
Aacute = -45;
Abreve = -45;
Acircumflex = -45;
Adieresis = -45;
Agrave = -45;
Amacron = -45;
Aogonek = -45;
Aring = -45;
Atilde = -45;
c = -34;
cacute = -34;
ccaron = -34;
ccedilla = -34;
colon = -9;
comma = -59;
d = -34;
dcaron = -34;
dcroat = -34;
e = -34;
eacute = -34;
ecaron = -34;
ecircumflex = -34;
edieresis = -34;
edotaccent = -34;
egrave = -34;
emacron = -34;
emdash = -27;
eogonek = -34;
eth = -34;
o = -34;
oacute = -34;
ocircumflex = -34;
odieresis = -34;
oe = -34;
ograve = -34;
ohungarumlaut = -34;
omacron = -34;
oslash = -34;
otilde = -34;
q = -34;
u = -19;
uacute = -19;
ucircumflex = -19;
udieresis = -19;
ugrave = -19;
uhungarumlaut = -19;
umacron = -19;
uogonek = -19;
uring = -19;
};
Wacute = {
AE = -132;
};
Wcircumflex = {
AE = -132;
};
Wdieresis = {
AE = -132;
};
Wgrave = {
AE = -132;
};
X = {
comma = 29;
ellipsis = 29;
emdash = -30;
endash = -30;
period = 29;
quotedblbase = 29;
quotesinglbase = 29;
};
Z = {
comma = 29;
ellipsis = 29;
period = 29;
quotedblbase = 29;
quotesinglbase = 29;
};
dcaron = {
thorn = 75;
};
f = {
b = 75;
f = -9;
i = 50;
j = 50;
quoteright = 65;
};
k = {
emdash = -63;
};
ldot = {
l = 38;
};
quoteleft = {
quoteleft = -18;
};
quoteright = {
quoteright = -18;
};
v = {
eth = -15;
oslash = -15;
};
w = {
comma = -45;
eth = -15;
oslash = -15;
};
wacute = {
eth = -15;
oslash = -15;
};
wcircumflex = {
eth = -15;
oslash = -15;
};
wdieresis = {
eth = -15;
oslash = -15;
};
wgrave = {
eth = -15;
oslash = -15;
};
x = {
emdash = -29;
endash = -29;
};
y = {
c = -20;
cacute = -20;
ccaron = -20;
ccedilla = -20;
d = -20;
dcaron = -20;
dcroat = -20;
e = -20;
eacute = -20;
ecaron = -20;
ecircumflex = -20;
edieresis = -20;
edotaccent = -20;
egrave = -20;
emacron = -20;
eogonek = -20;
eth = -15;
o = -20;
oacute = -20;
ocircumflex = -20;
odieresis = -20;
oe = -20;
ograve = -20;
ohungarumlaut = -20;
omacron = -20;
oslash = -15;
otilde = -20;
q = -20;
};
yacute = {
eth = -15;
oslash = -15;
};
ycircumflex = {
eth = -15;
oslash = -15;
};
ydieresis = {
eth = -15;
oslash = -15;
};
ygrave = {
eth = -15;
oslash = -15;
};
};
};
manufacturer = "Omnibus-Type ";
manufacturerURL = "http://www.omnibus-type.com";
unitsPerEm = 1000;
versionMajor = 2;
versionMinor = 7;
}
