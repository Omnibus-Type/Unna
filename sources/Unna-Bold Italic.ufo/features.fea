# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem grek dflt;
languagesystem latn CAT;
languagesystem latn TRK;

# automatic
@Uppercase = [ A Aacute Acircumflex Adieresis Agrave Aring Atilde AE B C Ccedilla D Eth E Eacute Ecircumflex Edieresis Egrave F G H I IJ Iacute Icircumflex Idieresis Igrave J K L Ldot Lslash M N Ntilde O Oacute Ocircumflex Odieresis Ograve Oslash Otilde OE P Thorn Q R S Scaron T U Uacute Ucircumflex Udieresis Ugrave V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Z Zcaron Delta Omega ];

feature aalt {
# automatic
feature locl;
feature sups;
feature frac;
feature ordn;
feature case;
feature salt;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
} aalt;

feature locl {
# automatic
script latn;
language CRT;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language KAZ;
sub i by idotaccent;
language CAT;
sub  l' periodcentered' l by ldot;
sub  L' periodcentered' L by Ldot;
language AZE;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
} locl;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
} sups;

feature frac {
# automatic
sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
} ordn;

feature case {
# automatic
sub acute by acute.case;
sub breve by breve.case;
sub caron by caron.case;
sub circumflex by circumflex.case;
sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub hungarumlaut by hungarumlaut.case;
sub macron by macron.case;
sub ring by ring.case;
sub tilde by tilde.case;
} case;

feature liga {
sub [g q] f' [iacute icircumflex idieresis igrave germandbls question braceright bracketright parenright bar dotlessi] by f.ss05;
sub [g q] f' [h lslash ldot k b l thorn] by f.ss03;
sub [g q] f' [f.ss06 f] by f.ss07;
sub [g q] j' by j.ss01;
sub [g q] [yacute ycircumflex ydieresis ygrave y]' by [yacute.ss01 ycircumflex.ss01 ydieresis.ss01 ygrave.ss01 y.ss01];
sub f' [iacute icircumflex idieresis igrave germandbls question braceright bracketright parenright bar dotlessi] by f.ss01;
sub f' [h lslash ldot k b l thorn] by f.ss02;
sub f' [f.ss06 f] by f.ss06;
sub f i by fi;
sub f j by f_j;
sub [g q] f' by f.ss04;
sub [g q] [fi f_j]' by [fi.ss01 f_j.ss01];
} liga;

feature salt {
# automatic
sub f by f.ss01;
sub y by y.ss01;
sub yacute by yacute.ss01;
sub ycircumflex by ycircumflex.ss01;
sub ydieresis by ydieresis.ss01;
sub ygrave by ygrave.ss01;
} salt;

feature ss01 {
# automatic
sub f by f.ss01;
sub y by y.ss01;
sub yacute by yacute.ss01;
sub ycircumflex by ycircumflex.ss01;
sub ydieresis by ydieresis.ss01;
sub ygrave by ygrave.ss01;
} ss01;

feature ss02 {
# automatic
sub f by f.ss02;
} ss02;

feature ss03 {
# automatic
sub f by f.ss03;
} ss03;

feature ss04 {
# automatic
sub f by f.ss04;
} ss04;

feature cpsp {
pos @Uppercase <5 0 10 0>;
	pos [exclamdown questiondown] <0 35 0 0>;
	pos [bullet braceleft braceright bracketleft bracketright parenleft parenright emdash endash hyphen guillemotleft guillemotright guilsinglleft guilsinglright] <0 20 0 0>;
} cpsp;

feature kern {
pos f' 50 space [T V W Y];
pos L' -40 quoteright' 80 [A Aacute Acircumflex Adieresis Agrave Aring Atilde AE];
} kern;

